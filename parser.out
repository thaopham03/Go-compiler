Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FALSE
    TRUE
    UMINUS

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     block_statement -> { statement_list }
Rule 5     statement -> all_prints
Rule 6     statement -> assign
Rule 7     statement -> if_statement
Rule 8     statement -> for
Rule 9     statement -> expression
Rule 10    all_prints -> print
Rule 11    all_prints -> println
Rule 12    all_prints -> printf
Rule 13    all_prints -> fmt_print
Rule 14    all_prints -> fmt_println
Rule 15    all_prints -> fmt_printf
Rule 16    if_statement -> IF assign block_statement ELSE block_statement
Rule 17    if_statement -> IF assign block_statement
Rule 18    for -> FOR assign block_statement
Rule 19    for -> FOR assign ; expression ; statement block_statement
Rule 20    expression -> number
Rule 21    expression -> name
Rule 22    expression -> assign
Rule 23    expression -> expression PLUS expression
Rule 24    expression -> expression MINUS expression
Rule 25    expression -> expression TIMES expression
Rule 26    expression -> expression DIVIDE expression
Rule 27    expression -> expression MOD expression
Rule 28    expression -> expression LT expression
Rule 29    expression -> expression LE expression
Rule 30    expression -> expression EQ expression
Rule 31    expression -> expression NEQ expression
Rule 32    expression -> expression GE expression
Rule 33    expression -> expression GT expression
Rule 34    expression -> expression , expression
Rule 35    expression -> ( expression )
Rule 36    expression -> - expression
Rule 37    number -> NUMBER
Rule 38    name -> NAME
Rule 39    assign -> name = expression
Rule 40    assign -> VAR name = expression
Rule 41    assign -> name GT expression
Rule 42    assign -> name LT expression
Rule 43    assign -> name LE expression
Rule 44    assign -> name EQ expression
Rule 45    expression -> string
Rule 46    string -> SQ_STRING
Rule 47    string -> DQ_STRING
Rule 48    print -> PRINT ( expression )
Rule 49    println -> PRINTLN ( expression )
Rule 50    printf -> PRINTF ( expression )
Rule 51    fmt_print -> FMT_PRINT ( expression )
Rule 52    fmt_println -> FMT_PRINTLN ( expression )
Rule 53    fmt_printf -> FMT_PRINTF ( expression )
Rule 54    expression -> ABS ( expression )
Rule 55    expression -> SIN ( expression )
Rule 56    expression -> COS ( expression )
Rule 57    expression -> TAN ( expression )
Rule 58    expression -> MIN ( expression , expression )
Rule 59    expression -> MAX ( expression , expression )

Terminals, with rules where they appear

(                    : 35 48 49 50 51 52 53 54 55 56 57 58 59
)                    : 35 48 49 50 51 52 53 54 55 56 57 58 59
,                    : 34 58 59
-                    : 36
;                    : 19 19
=                    : 39 40
ABS                  : 54
COS                  : 56
DIVIDE               : 26
DQ_STRING            : 47
ELSE                 : 16
EQ                   : 30 44
FALSE                : 
FMT_PRINT            : 51
FMT_PRINTF           : 53
FMT_PRINTLN          : 52
FOR                  : 18 19
GE                   : 32
GT                   : 33 41
IF                   : 16 17
LE                   : 29 43
LT                   : 28 42
MAX                  : 59
MIN                  : 58
MINUS                : 24
MOD                  : 27
NAME                 : 38
NEQ                  : 31
NUMBER               : 37
PLUS                 : 23
PRINT                : 48
PRINTF               : 50
PRINTLN              : 49
SIN                  : 55
SQ_STRING            : 46
TAN                  : 57
TIMES                : 25
TRUE                 : 
UMINUS               : 
VAR                  : 40
error                : 
{                    : 4
}                    : 4

Nonterminals, with rules where they appear

all_prints           : 5
assign               : 6 16 17 18 19 22
block_statement      : 16 16 17 18 19
expression           : 9 19 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 36 39 40 41 42 43 44 48 49 50 51 52 53 54 55 56 57 58 58 59 59
fmt_print            : 13
fmt_printf           : 15
fmt_println          : 14
for                  : 8
if_statement         : 7
name                 : 21 39 40 41 42 43 44
number               : 20
print                : 10
printf               : 12
println              : 11
program              : 0
statement            : 2 3 19
statement_list       : 1 2 4
string               : 45

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (5) statement -> . all_prints
    (6) statement -> . assign
    (7) statement -> . if_statement
    (8) statement -> . for
    (9) statement -> . expression
    (10) all_prints -> . print
    (11) all_prints -> . println
    (12) all_prints -> . printf
    (13) all_prints -> . fmt_print
    (14) all_prints -> . fmt_println
    (15) all_prints -> . fmt_printf
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (16) if_statement -> . IF assign block_statement ELSE block_statement
    (17) if_statement -> . IF assign block_statement
    (18) for -> . FOR assign block_statement
    (19) for -> . FOR assign ; expression ; statement block_statement
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (48) print -> . PRINT ( expression )
    (49) println -> . PRINTLN ( expression )
    (50) printf -> . PRINTF ( expression )
    (51) fmt_print -> . FMT_PRINT ( expression )
    (52) fmt_println -> . FMT_PRINTLN ( expression )
    (53) fmt_printf -> . FMT_PRINTF ( expression )
    (38) name -> . NAME
    (37) number -> . NUMBER
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    VAR             shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    PRINT           shift and go to state 29
    PRINTLN         shift and go to state 30
    PRINTF          shift and go to state 31
    FMT_PRINT       shift and go to state 32
    FMT_PRINTLN     shift and go to state 33
    FMT_PRINTF      shift and go to state 34
    NAME            shift and go to state 35
    NUMBER          shift and go to state 36
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    all_prints                     shift and go to state 4
    assign                         shift and go to state 5
    if_statement                   shift and go to state 6
    for                            shift and go to state 7
    expression                     shift and go to state 8
    print                          shift and go to state 9
    println                        shift and go to state 10
    printf                         shift and go to state 11
    fmt_print                      shift and go to state 12
    fmt_println                    shift and go to state 13
    fmt_printf                     shift and go to state 14
    name                           shift and go to state 15
    number                         shift and go to state 19
    string                         shift and go to state 22

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (5) statement -> . all_prints
    (6) statement -> . assign
    (7) statement -> . if_statement
    (8) statement -> . for
    (9) statement -> . expression
    (10) all_prints -> . print
    (11) all_prints -> . println
    (12) all_prints -> . printf
    (13) all_prints -> . fmt_print
    (14) all_prints -> . fmt_println
    (15) all_prints -> . fmt_printf
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (16) if_statement -> . IF assign block_statement ELSE block_statement
    (17) if_statement -> . IF assign block_statement
    (18) for -> . FOR assign block_statement
    (19) for -> . FOR assign ; expression ; statement block_statement
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (48) print -> . PRINT ( expression )
    (49) println -> . PRINTLN ( expression )
    (50) printf -> . PRINTF ( expression )
    (51) fmt_print -> . FMT_PRINT ( expression )
    (52) fmt_println -> . FMT_PRINTLN ( expression )
    (53) fmt_printf -> . FMT_PRINTF ( expression )
    (38) name -> . NAME
    (37) number -> . NUMBER
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    $end            reduce using rule 1 (program -> statement_list .)
    VAR             shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    PRINT           shift and go to state 29
    PRINTLN         shift and go to state 30
    PRINTF          shift and go to state 31
    FMT_PRINT       shift and go to state 32
    FMT_PRINTLN     shift and go to state 33
    FMT_PRINTF      shift and go to state 34
    NAME            shift and go to state 35
    NUMBER          shift and go to state 36
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    statement                      shift and go to state 39
    all_prints                     shift and go to state 4
    assign                         shift and go to state 5
    if_statement                   shift and go to state 6
    for                            shift and go to state 7
    expression                     shift and go to state 8
    print                          shift and go to state 9
    println                        shift and go to state 10
    printf                         shift and go to state 11
    fmt_print                      shift and go to state 12
    fmt_println                    shift and go to state 13
    fmt_printf                     shift and go to state 14
    name                           shift and go to state 15
    number                         shift and go to state 19
    string                         shift and go to state 22

state 3

    (3) statement_list -> statement .

    VAR             reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    FOR             reduce using rule 3 (statement_list -> statement .)
    (               reduce using rule 3 (statement_list -> statement .)
    -               reduce using rule 3 (statement_list -> statement .)
    ABS             reduce using rule 3 (statement_list -> statement .)
    SIN             reduce using rule 3 (statement_list -> statement .)
    COS             reduce using rule 3 (statement_list -> statement .)
    TAN             reduce using rule 3 (statement_list -> statement .)
    MIN             reduce using rule 3 (statement_list -> statement .)
    MAX             reduce using rule 3 (statement_list -> statement .)
    PRINT           reduce using rule 3 (statement_list -> statement .)
    PRINTLN         reduce using rule 3 (statement_list -> statement .)
    PRINTF          reduce using rule 3 (statement_list -> statement .)
    FMT_PRINT       reduce using rule 3 (statement_list -> statement .)
    FMT_PRINTLN     reduce using rule 3 (statement_list -> statement .)
    FMT_PRINTF      reduce using rule 3 (statement_list -> statement .)
    NAME            reduce using rule 3 (statement_list -> statement .)
    NUMBER          reduce using rule 3 (statement_list -> statement .)
    SQ_STRING       reduce using rule 3 (statement_list -> statement .)
    DQ_STRING       reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    }               reduce using rule 3 (statement_list -> statement .)


state 4

    (5) statement -> all_prints .

    VAR             reduce using rule 5 (statement -> all_prints .)
    IF              reduce using rule 5 (statement -> all_prints .)
    FOR             reduce using rule 5 (statement -> all_prints .)
    (               reduce using rule 5 (statement -> all_prints .)
    -               reduce using rule 5 (statement -> all_prints .)
    ABS             reduce using rule 5 (statement -> all_prints .)
    SIN             reduce using rule 5 (statement -> all_prints .)
    COS             reduce using rule 5 (statement -> all_prints .)
    TAN             reduce using rule 5 (statement -> all_prints .)
    MIN             reduce using rule 5 (statement -> all_prints .)
    MAX             reduce using rule 5 (statement -> all_prints .)
    PRINT           reduce using rule 5 (statement -> all_prints .)
    PRINTLN         reduce using rule 5 (statement -> all_prints .)
    PRINTF          reduce using rule 5 (statement -> all_prints .)
    FMT_PRINT       reduce using rule 5 (statement -> all_prints .)
    FMT_PRINTLN     reduce using rule 5 (statement -> all_prints .)
    FMT_PRINTF      reduce using rule 5 (statement -> all_prints .)
    NAME            reduce using rule 5 (statement -> all_prints .)
    NUMBER          reduce using rule 5 (statement -> all_prints .)
    SQ_STRING       reduce using rule 5 (statement -> all_prints .)
    DQ_STRING       reduce using rule 5 (statement -> all_prints .)
    $end            reduce using rule 5 (statement -> all_prints .)
    }               reduce using rule 5 (statement -> all_prints .)
    {               reduce using rule 5 (statement -> all_prints .)


state 5

    (6) statement -> assign .
    (22) expression -> assign .

  ! reduce/reduce conflict for VAR resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for IF resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for FOR resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for ( resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for - resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for ABS resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for SIN resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for COS resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for TAN resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for MIN resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for MAX resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for PRINT resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for PRINTF resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for FMT_PRINT resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for FMT_PRINTLN resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for FMT_PRINTF resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for NAME resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for NUMBER resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for SQ_STRING resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for DQ_STRING resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for $end resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for } resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for { resolved using rule 6 (statement -> assign .)
    VAR             reduce using rule 6 (statement -> assign .)
    IF              reduce using rule 6 (statement -> assign .)
    FOR             reduce using rule 6 (statement -> assign .)
    (               reduce using rule 6 (statement -> assign .)
    -               reduce using rule 6 (statement -> assign .)
    ABS             reduce using rule 6 (statement -> assign .)
    SIN             reduce using rule 6 (statement -> assign .)
    COS             reduce using rule 6 (statement -> assign .)
    TAN             reduce using rule 6 (statement -> assign .)
    MIN             reduce using rule 6 (statement -> assign .)
    MAX             reduce using rule 6 (statement -> assign .)
    PRINT           reduce using rule 6 (statement -> assign .)
    PRINTLN         reduce using rule 6 (statement -> assign .)
    PRINTF          reduce using rule 6 (statement -> assign .)
    FMT_PRINT       reduce using rule 6 (statement -> assign .)
    FMT_PRINTLN     reduce using rule 6 (statement -> assign .)
    FMT_PRINTF      reduce using rule 6 (statement -> assign .)
    NAME            reduce using rule 6 (statement -> assign .)
    NUMBER          reduce using rule 6 (statement -> assign .)
    SQ_STRING       reduce using rule 6 (statement -> assign .)
    DQ_STRING       reduce using rule 6 (statement -> assign .)
    $end            reduce using rule 6 (statement -> assign .)
    }               reduce using rule 6 (statement -> assign .)
    {               reduce using rule 6 (statement -> assign .)
    PLUS            reduce using rule 22 (expression -> assign .)
    MINUS           reduce using rule 22 (expression -> assign .)
    TIMES           reduce using rule 22 (expression -> assign .)
    DIVIDE          reduce using rule 22 (expression -> assign .)
    MOD             reduce using rule 22 (expression -> assign .)
    LT              reduce using rule 22 (expression -> assign .)
    LE              reduce using rule 22 (expression -> assign .)
    EQ              reduce using rule 22 (expression -> assign .)
    NEQ             reduce using rule 22 (expression -> assign .)
    GE              reduce using rule 22 (expression -> assign .)
    GT              reduce using rule 22 (expression -> assign .)
    ,               reduce using rule 22 (expression -> assign .)

  ! VAR             [ reduce using rule 22 (expression -> assign .) ]
  ! IF              [ reduce using rule 22 (expression -> assign .) ]
  ! FOR             [ reduce using rule 22 (expression -> assign .) ]
  ! (               [ reduce using rule 22 (expression -> assign .) ]
  ! -               [ reduce using rule 22 (expression -> assign .) ]
  ! ABS             [ reduce using rule 22 (expression -> assign .) ]
  ! SIN             [ reduce using rule 22 (expression -> assign .) ]
  ! COS             [ reduce using rule 22 (expression -> assign .) ]
  ! TAN             [ reduce using rule 22 (expression -> assign .) ]
  ! MIN             [ reduce using rule 22 (expression -> assign .) ]
  ! MAX             [ reduce using rule 22 (expression -> assign .) ]
  ! PRINT           [ reduce using rule 22 (expression -> assign .) ]
  ! PRINTLN         [ reduce using rule 22 (expression -> assign .) ]
  ! PRINTF          [ reduce using rule 22 (expression -> assign .) ]
  ! FMT_PRINT       [ reduce using rule 22 (expression -> assign .) ]
  ! FMT_PRINTLN     [ reduce using rule 22 (expression -> assign .) ]
  ! FMT_PRINTF      [ reduce using rule 22 (expression -> assign .) ]
  ! NAME            [ reduce using rule 22 (expression -> assign .) ]
  ! NUMBER          [ reduce using rule 22 (expression -> assign .) ]
  ! SQ_STRING       [ reduce using rule 22 (expression -> assign .) ]
  ! DQ_STRING       [ reduce using rule 22 (expression -> assign .) ]
  ! $end            [ reduce using rule 22 (expression -> assign .) ]
  ! }               [ reduce using rule 22 (expression -> assign .) ]
  ! {               [ reduce using rule 22 (expression -> assign .) ]


state 6

    (7) statement -> if_statement .

    VAR             reduce using rule 7 (statement -> if_statement .)
    IF              reduce using rule 7 (statement -> if_statement .)
    FOR             reduce using rule 7 (statement -> if_statement .)
    (               reduce using rule 7 (statement -> if_statement .)
    -               reduce using rule 7 (statement -> if_statement .)
    ABS             reduce using rule 7 (statement -> if_statement .)
    SIN             reduce using rule 7 (statement -> if_statement .)
    COS             reduce using rule 7 (statement -> if_statement .)
    TAN             reduce using rule 7 (statement -> if_statement .)
    MIN             reduce using rule 7 (statement -> if_statement .)
    MAX             reduce using rule 7 (statement -> if_statement .)
    PRINT           reduce using rule 7 (statement -> if_statement .)
    PRINTLN         reduce using rule 7 (statement -> if_statement .)
    PRINTF          reduce using rule 7 (statement -> if_statement .)
    FMT_PRINT       reduce using rule 7 (statement -> if_statement .)
    FMT_PRINTLN     reduce using rule 7 (statement -> if_statement .)
    FMT_PRINTF      reduce using rule 7 (statement -> if_statement .)
    NAME            reduce using rule 7 (statement -> if_statement .)
    NUMBER          reduce using rule 7 (statement -> if_statement .)
    SQ_STRING       reduce using rule 7 (statement -> if_statement .)
    DQ_STRING       reduce using rule 7 (statement -> if_statement .)
    $end            reduce using rule 7 (statement -> if_statement .)
    }               reduce using rule 7 (statement -> if_statement .)
    {               reduce using rule 7 (statement -> if_statement .)


state 7

    (8) statement -> for .

    VAR             reduce using rule 8 (statement -> for .)
    IF              reduce using rule 8 (statement -> for .)
    FOR             reduce using rule 8 (statement -> for .)
    (               reduce using rule 8 (statement -> for .)
    -               reduce using rule 8 (statement -> for .)
    ABS             reduce using rule 8 (statement -> for .)
    SIN             reduce using rule 8 (statement -> for .)
    COS             reduce using rule 8 (statement -> for .)
    TAN             reduce using rule 8 (statement -> for .)
    MIN             reduce using rule 8 (statement -> for .)
    MAX             reduce using rule 8 (statement -> for .)
    PRINT           reduce using rule 8 (statement -> for .)
    PRINTLN         reduce using rule 8 (statement -> for .)
    PRINTF          reduce using rule 8 (statement -> for .)
    FMT_PRINT       reduce using rule 8 (statement -> for .)
    FMT_PRINTLN     reduce using rule 8 (statement -> for .)
    FMT_PRINTF      reduce using rule 8 (statement -> for .)
    NAME            reduce using rule 8 (statement -> for .)
    NUMBER          reduce using rule 8 (statement -> for .)
    SQ_STRING       reduce using rule 8 (statement -> for .)
    DQ_STRING       reduce using rule 8 (statement -> for .)
    $end            reduce using rule 8 (statement -> for .)
    }               reduce using rule 8 (statement -> for .)
    {               reduce using rule 8 (statement -> for .)


state 8

    (9) statement -> expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    VAR             reduce using rule 9 (statement -> expression .)
    IF              reduce using rule 9 (statement -> expression .)
    FOR             reduce using rule 9 (statement -> expression .)
    (               reduce using rule 9 (statement -> expression .)
    -               reduce using rule 9 (statement -> expression .)
    ABS             reduce using rule 9 (statement -> expression .)
    SIN             reduce using rule 9 (statement -> expression .)
    COS             reduce using rule 9 (statement -> expression .)
    TAN             reduce using rule 9 (statement -> expression .)
    MIN             reduce using rule 9 (statement -> expression .)
    MAX             reduce using rule 9 (statement -> expression .)
    PRINT           reduce using rule 9 (statement -> expression .)
    PRINTLN         reduce using rule 9 (statement -> expression .)
    PRINTF          reduce using rule 9 (statement -> expression .)
    FMT_PRINT       reduce using rule 9 (statement -> expression .)
    FMT_PRINTLN     reduce using rule 9 (statement -> expression .)
    FMT_PRINTF      reduce using rule 9 (statement -> expression .)
    NAME            reduce using rule 9 (statement -> expression .)
    NUMBER          reduce using rule 9 (statement -> expression .)
    SQ_STRING       reduce using rule 9 (statement -> expression .)
    DQ_STRING       reduce using rule 9 (statement -> expression .)
    $end            reduce using rule 9 (statement -> expression .)
    }               reduce using rule 9 (statement -> expression .)
    {               reduce using rule 9 (statement -> expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51


state 9

    (10) all_prints -> print .

    VAR             reduce using rule 10 (all_prints -> print .)
    IF              reduce using rule 10 (all_prints -> print .)
    FOR             reduce using rule 10 (all_prints -> print .)
    (               reduce using rule 10 (all_prints -> print .)
    -               reduce using rule 10 (all_prints -> print .)
    ABS             reduce using rule 10 (all_prints -> print .)
    SIN             reduce using rule 10 (all_prints -> print .)
    COS             reduce using rule 10 (all_prints -> print .)
    TAN             reduce using rule 10 (all_prints -> print .)
    MIN             reduce using rule 10 (all_prints -> print .)
    MAX             reduce using rule 10 (all_prints -> print .)
    PRINT           reduce using rule 10 (all_prints -> print .)
    PRINTLN         reduce using rule 10 (all_prints -> print .)
    PRINTF          reduce using rule 10 (all_prints -> print .)
    FMT_PRINT       reduce using rule 10 (all_prints -> print .)
    FMT_PRINTLN     reduce using rule 10 (all_prints -> print .)
    FMT_PRINTF      reduce using rule 10 (all_prints -> print .)
    NAME            reduce using rule 10 (all_prints -> print .)
    NUMBER          reduce using rule 10 (all_prints -> print .)
    SQ_STRING       reduce using rule 10 (all_prints -> print .)
    DQ_STRING       reduce using rule 10 (all_prints -> print .)
    $end            reduce using rule 10 (all_prints -> print .)
    }               reduce using rule 10 (all_prints -> print .)
    {               reduce using rule 10 (all_prints -> print .)


state 10

    (11) all_prints -> println .

    VAR             reduce using rule 11 (all_prints -> println .)
    IF              reduce using rule 11 (all_prints -> println .)
    FOR             reduce using rule 11 (all_prints -> println .)
    (               reduce using rule 11 (all_prints -> println .)
    -               reduce using rule 11 (all_prints -> println .)
    ABS             reduce using rule 11 (all_prints -> println .)
    SIN             reduce using rule 11 (all_prints -> println .)
    COS             reduce using rule 11 (all_prints -> println .)
    TAN             reduce using rule 11 (all_prints -> println .)
    MIN             reduce using rule 11 (all_prints -> println .)
    MAX             reduce using rule 11 (all_prints -> println .)
    PRINT           reduce using rule 11 (all_prints -> println .)
    PRINTLN         reduce using rule 11 (all_prints -> println .)
    PRINTF          reduce using rule 11 (all_prints -> println .)
    FMT_PRINT       reduce using rule 11 (all_prints -> println .)
    FMT_PRINTLN     reduce using rule 11 (all_prints -> println .)
    FMT_PRINTF      reduce using rule 11 (all_prints -> println .)
    NAME            reduce using rule 11 (all_prints -> println .)
    NUMBER          reduce using rule 11 (all_prints -> println .)
    SQ_STRING       reduce using rule 11 (all_prints -> println .)
    DQ_STRING       reduce using rule 11 (all_prints -> println .)
    $end            reduce using rule 11 (all_prints -> println .)
    }               reduce using rule 11 (all_prints -> println .)
    {               reduce using rule 11 (all_prints -> println .)


state 11

    (12) all_prints -> printf .

    VAR             reduce using rule 12 (all_prints -> printf .)
    IF              reduce using rule 12 (all_prints -> printf .)
    FOR             reduce using rule 12 (all_prints -> printf .)
    (               reduce using rule 12 (all_prints -> printf .)
    -               reduce using rule 12 (all_prints -> printf .)
    ABS             reduce using rule 12 (all_prints -> printf .)
    SIN             reduce using rule 12 (all_prints -> printf .)
    COS             reduce using rule 12 (all_prints -> printf .)
    TAN             reduce using rule 12 (all_prints -> printf .)
    MIN             reduce using rule 12 (all_prints -> printf .)
    MAX             reduce using rule 12 (all_prints -> printf .)
    PRINT           reduce using rule 12 (all_prints -> printf .)
    PRINTLN         reduce using rule 12 (all_prints -> printf .)
    PRINTF          reduce using rule 12 (all_prints -> printf .)
    FMT_PRINT       reduce using rule 12 (all_prints -> printf .)
    FMT_PRINTLN     reduce using rule 12 (all_prints -> printf .)
    FMT_PRINTF      reduce using rule 12 (all_prints -> printf .)
    NAME            reduce using rule 12 (all_prints -> printf .)
    NUMBER          reduce using rule 12 (all_prints -> printf .)
    SQ_STRING       reduce using rule 12 (all_prints -> printf .)
    DQ_STRING       reduce using rule 12 (all_prints -> printf .)
    $end            reduce using rule 12 (all_prints -> printf .)
    }               reduce using rule 12 (all_prints -> printf .)
    {               reduce using rule 12 (all_prints -> printf .)


state 12

    (13) all_prints -> fmt_print .

    VAR             reduce using rule 13 (all_prints -> fmt_print .)
    IF              reduce using rule 13 (all_prints -> fmt_print .)
    FOR             reduce using rule 13 (all_prints -> fmt_print .)
    (               reduce using rule 13 (all_prints -> fmt_print .)
    -               reduce using rule 13 (all_prints -> fmt_print .)
    ABS             reduce using rule 13 (all_prints -> fmt_print .)
    SIN             reduce using rule 13 (all_prints -> fmt_print .)
    COS             reduce using rule 13 (all_prints -> fmt_print .)
    TAN             reduce using rule 13 (all_prints -> fmt_print .)
    MIN             reduce using rule 13 (all_prints -> fmt_print .)
    MAX             reduce using rule 13 (all_prints -> fmt_print .)
    PRINT           reduce using rule 13 (all_prints -> fmt_print .)
    PRINTLN         reduce using rule 13 (all_prints -> fmt_print .)
    PRINTF          reduce using rule 13 (all_prints -> fmt_print .)
    FMT_PRINT       reduce using rule 13 (all_prints -> fmt_print .)
    FMT_PRINTLN     reduce using rule 13 (all_prints -> fmt_print .)
    FMT_PRINTF      reduce using rule 13 (all_prints -> fmt_print .)
    NAME            reduce using rule 13 (all_prints -> fmt_print .)
    NUMBER          reduce using rule 13 (all_prints -> fmt_print .)
    SQ_STRING       reduce using rule 13 (all_prints -> fmt_print .)
    DQ_STRING       reduce using rule 13 (all_prints -> fmt_print .)
    $end            reduce using rule 13 (all_prints -> fmt_print .)
    }               reduce using rule 13 (all_prints -> fmt_print .)
    {               reduce using rule 13 (all_prints -> fmt_print .)


state 13

    (14) all_prints -> fmt_println .

    VAR             reduce using rule 14 (all_prints -> fmt_println .)
    IF              reduce using rule 14 (all_prints -> fmt_println .)
    FOR             reduce using rule 14 (all_prints -> fmt_println .)
    (               reduce using rule 14 (all_prints -> fmt_println .)
    -               reduce using rule 14 (all_prints -> fmt_println .)
    ABS             reduce using rule 14 (all_prints -> fmt_println .)
    SIN             reduce using rule 14 (all_prints -> fmt_println .)
    COS             reduce using rule 14 (all_prints -> fmt_println .)
    TAN             reduce using rule 14 (all_prints -> fmt_println .)
    MIN             reduce using rule 14 (all_prints -> fmt_println .)
    MAX             reduce using rule 14 (all_prints -> fmt_println .)
    PRINT           reduce using rule 14 (all_prints -> fmt_println .)
    PRINTLN         reduce using rule 14 (all_prints -> fmt_println .)
    PRINTF          reduce using rule 14 (all_prints -> fmt_println .)
    FMT_PRINT       reduce using rule 14 (all_prints -> fmt_println .)
    FMT_PRINTLN     reduce using rule 14 (all_prints -> fmt_println .)
    FMT_PRINTF      reduce using rule 14 (all_prints -> fmt_println .)
    NAME            reduce using rule 14 (all_prints -> fmt_println .)
    NUMBER          reduce using rule 14 (all_prints -> fmt_println .)
    SQ_STRING       reduce using rule 14 (all_prints -> fmt_println .)
    DQ_STRING       reduce using rule 14 (all_prints -> fmt_println .)
    $end            reduce using rule 14 (all_prints -> fmt_println .)
    }               reduce using rule 14 (all_prints -> fmt_println .)
    {               reduce using rule 14 (all_prints -> fmt_println .)


state 14

    (15) all_prints -> fmt_printf .

    VAR             reduce using rule 15 (all_prints -> fmt_printf .)
    IF              reduce using rule 15 (all_prints -> fmt_printf .)
    FOR             reduce using rule 15 (all_prints -> fmt_printf .)
    (               reduce using rule 15 (all_prints -> fmt_printf .)
    -               reduce using rule 15 (all_prints -> fmt_printf .)
    ABS             reduce using rule 15 (all_prints -> fmt_printf .)
    SIN             reduce using rule 15 (all_prints -> fmt_printf .)
    COS             reduce using rule 15 (all_prints -> fmt_printf .)
    TAN             reduce using rule 15 (all_prints -> fmt_printf .)
    MIN             reduce using rule 15 (all_prints -> fmt_printf .)
    MAX             reduce using rule 15 (all_prints -> fmt_printf .)
    PRINT           reduce using rule 15 (all_prints -> fmt_printf .)
    PRINTLN         reduce using rule 15 (all_prints -> fmt_printf .)
    PRINTF          reduce using rule 15 (all_prints -> fmt_printf .)
    FMT_PRINT       reduce using rule 15 (all_prints -> fmt_printf .)
    FMT_PRINTLN     reduce using rule 15 (all_prints -> fmt_printf .)
    FMT_PRINTF      reduce using rule 15 (all_prints -> fmt_printf .)
    NAME            reduce using rule 15 (all_prints -> fmt_printf .)
    NUMBER          reduce using rule 15 (all_prints -> fmt_printf .)
    SQ_STRING       reduce using rule 15 (all_prints -> fmt_printf .)
    DQ_STRING       reduce using rule 15 (all_prints -> fmt_printf .)
    $end            reduce using rule 15 (all_prints -> fmt_printf .)
    }               reduce using rule 15 (all_prints -> fmt_printf .)
    {               reduce using rule 15 (all_prints -> fmt_printf .)


state 15

    (39) assign -> name . = expression
    (41) assign -> name . GT expression
    (42) assign -> name . LT expression
    (43) assign -> name . LE expression
    (44) assign -> name . EQ expression
    (21) expression -> name .

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
    =               shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    LE              shift and go to state 55
    EQ              shift and go to state 56
    PLUS            reduce using rule 21 (expression -> name .)
    MINUS           reduce using rule 21 (expression -> name .)
    TIMES           reduce using rule 21 (expression -> name .)
    DIVIDE          reduce using rule 21 (expression -> name .)
    MOD             reduce using rule 21 (expression -> name .)
    NEQ             reduce using rule 21 (expression -> name .)
    GE              reduce using rule 21 (expression -> name .)
    ,               reduce using rule 21 (expression -> name .)
    VAR             reduce using rule 21 (expression -> name .)
    IF              reduce using rule 21 (expression -> name .)
    FOR             reduce using rule 21 (expression -> name .)
    (               reduce using rule 21 (expression -> name .)
    -               reduce using rule 21 (expression -> name .)
    ABS             reduce using rule 21 (expression -> name .)
    SIN             reduce using rule 21 (expression -> name .)
    COS             reduce using rule 21 (expression -> name .)
    TAN             reduce using rule 21 (expression -> name .)
    MIN             reduce using rule 21 (expression -> name .)
    MAX             reduce using rule 21 (expression -> name .)
    PRINT           reduce using rule 21 (expression -> name .)
    PRINTLN         reduce using rule 21 (expression -> name .)
    PRINTF          reduce using rule 21 (expression -> name .)
    FMT_PRINT       reduce using rule 21 (expression -> name .)
    FMT_PRINTLN     reduce using rule 21 (expression -> name .)
    FMT_PRINTF      reduce using rule 21 (expression -> name .)
    NAME            reduce using rule 21 (expression -> name .)
    NUMBER          reduce using rule 21 (expression -> name .)
    SQ_STRING       reduce using rule 21 (expression -> name .)
    DQ_STRING       reduce using rule 21 (expression -> name .)
    $end            reduce using rule 21 (expression -> name .)
    }               reduce using rule 21 (expression -> name .)
    {               reduce using rule 21 (expression -> name .)

  ! LT              [ reduce using rule 21 (expression -> name .) ]
  ! LE              [ reduce using rule 21 (expression -> name .) ]
  ! EQ              [ reduce using rule 21 (expression -> name .) ]
  ! GT              [ reduce using rule 21 (expression -> name .) ]


state 16

    (40) assign -> VAR . name = expression
    (38) name -> . NAME

    NAME            shift and go to state 35

    name                           shift and go to state 57

state 17

    (16) if_statement -> IF . assign block_statement ELSE block_statement
    (17) if_statement -> IF . assign block_statement
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (38) name -> . NAME

    VAR             shift and go to state 16
    NAME            shift and go to state 35

    assign                         shift and go to state 58
    name                           shift and go to state 59

state 18

    (18) for -> FOR . assign block_statement
    (19) for -> FOR . assign ; expression ; statement block_statement
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (38) name -> . NAME

    VAR             shift and go to state 16
    NAME            shift and go to state 35

    assign                         shift and go to state 60
    name                           shift and go to state 59

state 19

    (20) expression -> number .

    PLUS            reduce using rule 20 (expression -> number .)
    MINUS           reduce using rule 20 (expression -> number .)
    TIMES           reduce using rule 20 (expression -> number .)
    DIVIDE          reduce using rule 20 (expression -> number .)
    MOD             reduce using rule 20 (expression -> number .)
    LT              reduce using rule 20 (expression -> number .)
    LE              reduce using rule 20 (expression -> number .)
    EQ              reduce using rule 20 (expression -> number .)
    NEQ             reduce using rule 20 (expression -> number .)
    GE              reduce using rule 20 (expression -> number .)
    GT              reduce using rule 20 (expression -> number .)
    ,               reduce using rule 20 (expression -> number .)
    VAR             reduce using rule 20 (expression -> number .)
    IF              reduce using rule 20 (expression -> number .)
    FOR             reduce using rule 20 (expression -> number .)
    (               reduce using rule 20 (expression -> number .)
    -               reduce using rule 20 (expression -> number .)
    ABS             reduce using rule 20 (expression -> number .)
    SIN             reduce using rule 20 (expression -> number .)
    COS             reduce using rule 20 (expression -> number .)
    TAN             reduce using rule 20 (expression -> number .)
    MIN             reduce using rule 20 (expression -> number .)
    MAX             reduce using rule 20 (expression -> number .)
    PRINT           reduce using rule 20 (expression -> number .)
    PRINTLN         reduce using rule 20 (expression -> number .)
    PRINTF          reduce using rule 20 (expression -> number .)
    FMT_PRINT       reduce using rule 20 (expression -> number .)
    FMT_PRINTLN     reduce using rule 20 (expression -> number .)
    FMT_PRINTF      reduce using rule 20 (expression -> number .)
    NAME            reduce using rule 20 (expression -> number .)
    NUMBER          reduce using rule 20 (expression -> number .)
    SQ_STRING       reduce using rule 20 (expression -> number .)
    DQ_STRING       reduce using rule 20 (expression -> number .)
    $end            reduce using rule 20 (expression -> number .)
    )               reduce using rule 20 (expression -> number .)
    {               reduce using rule 20 (expression -> number .)
    ;               reduce using rule 20 (expression -> number .)
    }               reduce using rule 20 (expression -> number .)


state 20

    (35) expression -> ( . expression )
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 61
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 21

    (36) expression -> - . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 64
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 22

    (45) expression -> string .

    PLUS            reduce using rule 45 (expression -> string .)
    MINUS           reduce using rule 45 (expression -> string .)
    TIMES           reduce using rule 45 (expression -> string .)
    DIVIDE          reduce using rule 45 (expression -> string .)
    MOD             reduce using rule 45 (expression -> string .)
    LT              reduce using rule 45 (expression -> string .)
    LE              reduce using rule 45 (expression -> string .)
    EQ              reduce using rule 45 (expression -> string .)
    NEQ             reduce using rule 45 (expression -> string .)
    GE              reduce using rule 45 (expression -> string .)
    GT              reduce using rule 45 (expression -> string .)
    ,               reduce using rule 45 (expression -> string .)
    VAR             reduce using rule 45 (expression -> string .)
    IF              reduce using rule 45 (expression -> string .)
    FOR             reduce using rule 45 (expression -> string .)
    (               reduce using rule 45 (expression -> string .)
    -               reduce using rule 45 (expression -> string .)
    ABS             reduce using rule 45 (expression -> string .)
    SIN             reduce using rule 45 (expression -> string .)
    COS             reduce using rule 45 (expression -> string .)
    TAN             reduce using rule 45 (expression -> string .)
    MIN             reduce using rule 45 (expression -> string .)
    MAX             reduce using rule 45 (expression -> string .)
    PRINT           reduce using rule 45 (expression -> string .)
    PRINTLN         reduce using rule 45 (expression -> string .)
    PRINTF          reduce using rule 45 (expression -> string .)
    FMT_PRINT       reduce using rule 45 (expression -> string .)
    FMT_PRINTLN     reduce using rule 45 (expression -> string .)
    FMT_PRINTF      reduce using rule 45 (expression -> string .)
    NAME            reduce using rule 45 (expression -> string .)
    NUMBER          reduce using rule 45 (expression -> string .)
    SQ_STRING       reduce using rule 45 (expression -> string .)
    DQ_STRING       reduce using rule 45 (expression -> string .)
    $end            reduce using rule 45 (expression -> string .)
    )               reduce using rule 45 (expression -> string .)
    {               reduce using rule 45 (expression -> string .)
    ;               reduce using rule 45 (expression -> string .)
    }               reduce using rule 45 (expression -> string .)


state 23

    (54) expression -> ABS . ( expression )

    (               shift and go to state 65


state 24

    (55) expression -> SIN . ( expression )

    (               shift and go to state 66


state 25

    (56) expression -> COS . ( expression )

    (               shift and go to state 67


state 26

    (57) expression -> TAN . ( expression )

    (               shift and go to state 68


state 27

    (58) expression -> MIN . ( expression , expression )

    (               shift and go to state 69


state 28

    (59) expression -> MAX . ( expression , expression )

    (               shift and go to state 70


state 29

    (48) print -> PRINT . ( expression )

    (               shift and go to state 71


state 30

    (49) println -> PRINTLN . ( expression )

    (               shift and go to state 72


state 31

    (50) printf -> PRINTF . ( expression )

    (               shift and go to state 73


state 32

    (51) fmt_print -> FMT_PRINT . ( expression )

    (               shift and go to state 74


state 33

    (52) fmt_println -> FMT_PRINTLN . ( expression )

    (               shift and go to state 75


state 34

    (53) fmt_printf -> FMT_PRINTF . ( expression )

    (               shift and go to state 76


state 35

    (38) name -> NAME .

    =               reduce using rule 38 (name -> NAME .)
    GT              reduce using rule 38 (name -> NAME .)
    LT              reduce using rule 38 (name -> NAME .)
    LE              reduce using rule 38 (name -> NAME .)
    EQ              reduce using rule 38 (name -> NAME .)
    PLUS            reduce using rule 38 (name -> NAME .)
    MINUS           reduce using rule 38 (name -> NAME .)
    TIMES           reduce using rule 38 (name -> NAME .)
    DIVIDE          reduce using rule 38 (name -> NAME .)
    MOD             reduce using rule 38 (name -> NAME .)
    NEQ             reduce using rule 38 (name -> NAME .)
    GE              reduce using rule 38 (name -> NAME .)
    ,               reduce using rule 38 (name -> NAME .)
    VAR             reduce using rule 38 (name -> NAME .)
    IF              reduce using rule 38 (name -> NAME .)
    FOR             reduce using rule 38 (name -> NAME .)
    (               reduce using rule 38 (name -> NAME .)
    -               reduce using rule 38 (name -> NAME .)
    ABS             reduce using rule 38 (name -> NAME .)
    SIN             reduce using rule 38 (name -> NAME .)
    COS             reduce using rule 38 (name -> NAME .)
    TAN             reduce using rule 38 (name -> NAME .)
    MIN             reduce using rule 38 (name -> NAME .)
    MAX             reduce using rule 38 (name -> NAME .)
    PRINT           reduce using rule 38 (name -> NAME .)
    PRINTLN         reduce using rule 38 (name -> NAME .)
    PRINTF          reduce using rule 38 (name -> NAME .)
    FMT_PRINT       reduce using rule 38 (name -> NAME .)
    FMT_PRINTLN     reduce using rule 38 (name -> NAME .)
    FMT_PRINTF      reduce using rule 38 (name -> NAME .)
    NAME            reduce using rule 38 (name -> NAME .)
    NUMBER          reduce using rule 38 (name -> NAME .)
    SQ_STRING       reduce using rule 38 (name -> NAME .)
    DQ_STRING       reduce using rule 38 (name -> NAME .)
    $end            reduce using rule 38 (name -> NAME .)
    )               reduce using rule 38 (name -> NAME .)
    {               reduce using rule 38 (name -> NAME .)
    ;               reduce using rule 38 (name -> NAME .)
    }               reduce using rule 38 (name -> NAME .)


state 36

    (37) number -> NUMBER .

    PLUS            reduce using rule 37 (number -> NUMBER .)
    MINUS           reduce using rule 37 (number -> NUMBER .)
    TIMES           reduce using rule 37 (number -> NUMBER .)
    DIVIDE          reduce using rule 37 (number -> NUMBER .)
    MOD             reduce using rule 37 (number -> NUMBER .)
    LT              reduce using rule 37 (number -> NUMBER .)
    LE              reduce using rule 37 (number -> NUMBER .)
    EQ              reduce using rule 37 (number -> NUMBER .)
    NEQ             reduce using rule 37 (number -> NUMBER .)
    GE              reduce using rule 37 (number -> NUMBER .)
    GT              reduce using rule 37 (number -> NUMBER .)
    ,               reduce using rule 37 (number -> NUMBER .)
    VAR             reduce using rule 37 (number -> NUMBER .)
    IF              reduce using rule 37 (number -> NUMBER .)
    FOR             reduce using rule 37 (number -> NUMBER .)
    (               reduce using rule 37 (number -> NUMBER .)
    -               reduce using rule 37 (number -> NUMBER .)
    ABS             reduce using rule 37 (number -> NUMBER .)
    SIN             reduce using rule 37 (number -> NUMBER .)
    COS             reduce using rule 37 (number -> NUMBER .)
    TAN             reduce using rule 37 (number -> NUMBER .)
    MIN             reduce using rule 37 (number -> NUMBER .)
    MAX             reduce using rule 37 (number -> NUMBER .)
    PRINT           reduce using rule 37 (number -> NUMBER .)
    PRINTLN         reduce using rule 37 (number -> NUMBER .)
    PRINTF          reduce using rule 37 (number -> NUMBER .)
    FMT_PRINT       reduce using rule 37 (number -> NUMBER .)
    FMT_PRINTLN     reduce using rule 37 (number -> NUMBER .)
    FMT_PRINTF      reduce using rule 37 (number -> NUMBER .)
    NAME            reduce using rule 37 (number -> NUMBER .)
    NUMBER          reduce using rule 37 (number -> NUMBER .)
    SQ_STRING       reduce using rule 37 (number -> NUMBER .)
    DQ_STRING       reduce using rule 37 (number -> NUMBER .)
    $end            reduce using rule 37 (number -> NUMBER .)
    )               reduce using rule 37 (number -> NUMBER .)
    {               reduce using rule 37 (number -> NUMBER .)
    ;               reduce using rule 37 (number -> NUMBER .)
    }               reduce using rule 37 (number -> NUMBER .)


state 37

    (46) string -> SQ_STRING .

    PLUS            reduce using rule 46 (string -> SQ_STRING .)
    MINUS           reduce using rule 46 (string -> SQ_STRING .)
    TIMES           reduce using rule 46 (string -> SQ_STRING .)
    DIVIDE          reduce using rule 46 (string -> SQ_STRING .)
    MOD             reduce using rule 46 (string -> SQ_STRING .)
    LT              reduce using rule 46 (string -> SQ_STRING .)
    LE              reduce using rule 46 (string -> SQ_STRING .)
    EQ              reduce using rule 46 (string -> SQ_STRING .)
    NEQ             reduce using rule 46 (string -> SQ_STRING .)
    GE              reduce using rule 46 (string -> SQ_STRING .)
    GT              reduce using rule 46 (string -> SQ_STRING .)
    ,               reduce using rule 46 (string -> SQ_STRING .)
    VAR             reduce using rule 46 (string -> SQ_STRING .)
    IF              reduce using rule 46 (string -> SQ_STRING .)
    FOR             reduce using rule 46 (string -> SQ_STRING .)
    (               reduce using rule 46 (string -> SQ_STRING .)
    -               reduce using rule 46 (string -> SQ_STRING .)
    ABS             reduce using rule 46 (string -> SQ_STRING .)
    SIN             reduce using rule 46 (string -> SQ_STRING .)
    COS             reduce using rule 46 (string -> SQ_STRING .)
    TAN             reduce using rule 46 (string -> SQ_STRING .)
    MIN             reduce using rule 46 (string -> SQ_STRING .)
    MAX             reduce using rule 46 (string -> SQ_STRING .)
    PRINT           reduce using rule 46 (string -> SQ_STRING .)
    PRINTLN         reduce using rule 46 (string -> SQ_STRING .)
    PRINTF          reduce using rule 46 (string -> SQ_STRING .)
    FMT_PRINT       reduce using rule 46 (string -> SQ_STRING .)
    FMT_PRINTLN     reduce using rule 46 (string -> SQ_STRING .)
    FMT_PRINTF      reduce using rule 46 (string -> SQ_STRING .)
    NAME            reduce using rule 46 (string -> SQ_STRING .)
    NUMBER          reduce using rule 46 (string -> SQ_STRING .)
    SQ_STRING       reduce using rule 46 (string -> SQ_STRING .)
    DQ_STRING       reduce using rule 46 (string -> SQ_STRING .)
    $end            reduce using rule 46 (string -> SQ_STRING .)
    )               reduce using rule 46 (string -> SQ_STRING .)
    {               reduce using rule 46 (string -> SQ_STRING .)
    ;               reduce using rule 46 (string -> SQ_STRING .)
    }               reduce using rule 46 (string -> SQ_STRING .)


state 38

    (47) string -> DQ_STRING .

    PLUS            reduce using rule 47 (string -> DQ_STRING .)
    MINUS           reduce using rule 47 (string -> DQ_STRING .)
    TIMES           reduce using rule 47 (string -> DQ_STRING .)
    DIVIDE          reduce using rule 47 (string -> DQ_STRING .)
    MOD             reduce using rule 47 (string -> DQ_STRING .)
    LT              reduce using rule 47 (string -> DQ_STRING .)
    LE              reduce using rule 47 (string -> DQ_STRING .)
    EQ              reduce using rule 47 (string -> DQ_STRING .)
    NEQ             reduce using rule 47 (string -> DQ_STRING .)
    GE              reduce using rule 47 (string -> DQ_STRING .)
    GT              reduce using rule 47 (string -> DQ_STRING .)
    ,               reduce using rule 47 (string -> DQ_STRING .)
    VAR             reduce using rule 47 (string -> DQ_STRING .)
    IF              reduce using rule 47 (string -> DQ_STRING .)
    FOR             reduce using rule 47 (string -> DQ_STRING .)
    (               reduce using rule 47 (string -> DQ_STRING .)
    -               reduce using rule 47 (string -> DQ_STRING .)
    ABS             reduce using rule 47 (string -> DQ_STRING .)
    SIN             reduce using rule 47 (string -> DQ_STRING .)
    COS             reduce using rule 47 (string -> DQ_STRING .)
    TAN             reduce using rule 47 (string -> DQ_STRING .)
    MIN             reduce using rule 47 (string -> DQ_STRING .)
    MAX             reduce using rule 47 (string -> DQ_STRING .)
    PRINT           reduce using rule 47 (string -> DQ_STRING .)
    PRINTLN         reduce using rule 47 (string -> DQ_STRING .)
    PRINTF          reduce using rule 47 (string -> DQ_STRING .)
    FMT_PRINT       reduce using rule 47 (string -> DQ_STRING .)
    FMT_PRINTLN     reduce using rule 47 (string -> DQ_STRING .)
    FMT_PRINTF      reduce using rule 47 (string -> DQ_STRING .)
    NAME            reduce using rule 47 (string -> DQ_STRING .)
    NUMBER          reduce using rule 47 (string -> DQ_STRING .)
    SQ_STRING       reduce using rule 47 (string -> DQ_STRING .)
    DQ_STRING       reduce using rule 47 (string -> DQ_STRING .)
    $end            reduce using rule 47 (string -> DQ_STRING .)
    )               reduce using rule 47 (string -> DQ_STRING .)
    {               reduce using rule 47 (string -> DQ_STRING .)
    ;               reduce using rule 47 (string -> DQ_STRING .)
    }               reduce using rule 47 (string -> DQ_STRING .)


state 39

    (2) statement_list -> statement_list statement .

    VAR             reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    (               reduce using rule 2 (statement_list -> statement_list statement .)
    -               reduce using rule 2 (statement_list -> statement_list statement .)
    ABS             reduce using rule 2 (statement_list -> statement_list statement .)
    SIN             reduce using rule 2 (statement_list -> statement_list statement .)
    COS             reduce using rule 2 (statement_list -> statement_list statement .)
    TAN             reduce using rule 2 (statement_list -> statement_list statement .)
    MIN             reduce using rule 2 (statement_list -> statement_list statement .)
    MAX             reduce using rule 2 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    PRINTLN         reduce using rule 2 (statement_list -> statement_list statement .)
    PRINTF          reduce using rule 2 (statement_list -> statement_list statement .)
    FMT_PRINT       reduce using rule 2 (statement_list -> statement_list statement .)
    FMT_PRINTLN     reduce using rule 2 (statement_list -> statement_list statement .)
    FMT_PRINTF      reduce using rule 2 (statement_list -> statement_list statement .)
    NAME            reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement_list statement .)
    SQ_STRING       reduce using rule 2 (statement_list -> statement_list statement .)
    DQ_STRING       reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    }               reduce using rule 2 (statement_list -> statement_list statement .)


state 40

    (23) expression -> expression PLUS . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 77
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 41

    (24) expression -> expression MINUS . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 78
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 42

    (25) expression -> expression TIMES . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 79
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 43

    (26) expression -> expression DIVIDE . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 80
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 44

    (27) expression -> expression MOD . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 81
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 45

    (28) expression -> expression LT . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 82
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 46

    (29) expression -> expression LE . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 83
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 47

    (30) expression -> expression EQ . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 84
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 48

    (31) expression -> expression NEQ . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 85
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 49

    (32) expression -> expression GE . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 86
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 50

    (33) expression -> expression GT . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 87
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 51

    (34) expression -> expression , . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 88
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 52

    (39) assign -> name = . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    name                           shift and go to state 62
    expression                     shift and go to state 89
    number                         shift and go to state 19
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 53

    (41) assign -> name GT . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    name                           shift and go to state 62
    expression                     shift and go to state 90
    number                         shift and go to state 19
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 54

    (42) assign -> name LT . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    name                           shift and go to state 62
    expression                     shift and go to state 91
    number                         shift and go to state 19
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 55

    (43) assign -> name LE . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    name                           shift and go to state 62
    expression                     shift and go to state 92
    number                         shift and go to state 19
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 56

    (44) assign -> name EQ . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    name                           shift and go to state 62
    expression                     shift and go to state 93
    number                         shift and go to state 19
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 57

    (40) assign -> VAR name . = expression

    =               shift and go to state 94


state 58

    (16) if_statement -> IF assign . block_statement ELSE block_statement
    (17) if_statement -> IF assign . block_statement
    (4) block_statement -> . { statement_list }

    {               shift and go to state 96

    block_statement                shift and go to state 95

state 59

    (39) assign -> name . = expression
    (41) assign -> name . GT expression
    (42) assign -> name . LT expression
    (43) assign -> name . LE expression
    (44) assign -> name . EQ expression

    =               shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    LE              shift and go to state 55
    EQ              shift and go to state 56


state 60

    (18) for -> FOR assign . block_statement
    (19) for -> FOR assign . ; expression ; statement block_statement
    (4) block_statement -> . { statement_list }

    ;               shift and go to state 98
    {               shift and go to state 96

    block_statement                shift and go to state 97

state 61

    (35) expression -> ( expression . )
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    )               shift and go to state 99
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51


state 62

    (21) expression -> name .
    (39) assign -> name . = expression
    (41) assign -> name . GT expression
    (42) assign -> name . LT expression
    (43) assign -> name . LE expression
    (44) assign -> name . EQ expression

  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
    )               reduce using rule 21 (expression -> name .)
    PLUS            reduce using rule 21 (expression -> name .)
    MINUS           reduce using rule 21 (expression -> name .)
    TIMES           reduce using rule 21 (expression -> name .)
    DIVIDE          reduce using rule 21 (expression -> name .)
    MOD             reduce using rule 21 (expression -> name .)
    NEQ             reduce using rule 21 (expression -> name .)
    GE              reduce using rule 21 (expression -> name .)
    ,               reduce using rule 21 (expression -> name .)
    VAR             reduce using rule 21 (expression -> name .)
    IF              reduce using rule 21 (expression -> name .)
    FOR             reduce using rule 21 (expression -> name .)
    (               reduce using rule 21 (expression -> name .)
    -               reduce using rule 21 (expression -> name .)
    ABS             reduce using rule 21 (expression -> name .)
    SIN             reduce using rule 21 (expression -> name .)
    COS             reduce using rule 21 (expression -> name .)
    TAN             reduce using rule 21 (expression -> name .)
    MIN             reduce using rule 21 (expression -> name .)
    MAX             reduce using rule 21 (expression -> name .)
    PRINT           reduce using rule 21 (expression -> name .)
    PRINTLN         reduce using rule 21 (expression -> name .)
    PRINTF          reduce using rule 21 (expression -> name .)
    FMT_PRINT       reduce using rule 21 (expression -> name .)
    FMT_PRINTLN     reduce using rule 21 (expression -> name .)
    FMT_PRINTF      reduce using rule 21 (expression -> name .)
    NAME            reduce using rule 21 (expression -> name .)
    NUMBER          reduce using rule 21 (expression -> name .)
    SQ_STRING       reduce using rule 21 (expression -> name .)
    DQ_STRING       reduce using rule 21 (expression -> name .)
    $end            reduce using rule 21 (expression -> name .)
    {               reduce using rule 21 (expression -> name .)
    ;               reduce using rule 21 (expression -> name .)
    }               reduce using rule 21 (expression -> name .)
    =               shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    LE              shift and go to state 55
    EQ              shift and go to state 56

  ! LT              [ reduce using rule 21 (expression -> name .) ]
  ! LE              [ reduce using rule 21 (expression -> name .) ]
  ! EQ              [ reduce using rule 21 (expression -> name .) ]
  ! GT              [ reduce using rule 21 (expression -> name .) ]


state 63

    (22) expression -> assign .

    )               reduce using rule 22 (expression -> assign .)
    PLUS            reduce using rule 22 (expression -> assign .)
    MINUS           reduce using rule 22 (expression -> assign .)
    TIMES           reduce using rule 22 (expression -> assign .)
    DIVIDE          reduce using rule 22 (expression -> assign .)
    MOD             reduce using rule 22 (expression -> assign .)
    LT              reduce using rule 22 (expression -> assign .)
    LE              reduce using rule 22 (expression -> assign .)
    EQ              reduce using rule 22 (expression -> assign .)
    NEQ             reduce using rule 22 (expression -> assign .)
    GE              reduce using rule 22 (expression -> assign .)
    GT              reduce using rule 22 (expression -> assign .)
    ,               reduce using rule 22 (expression -> assign .)
    VAR             reduce using rule 22 (expression -> assign .)
    IF              reduce using rule 22 (expression -> assign .)
    FOR             reduce using rule 22 (expression -> assign .)
    (               reduce using rule 22 (expression -> assign .)
    -               reduce using rule 22 (expression -> assign .)
    ABS             reduce using rule 22 (expression -> assign .)
    SIN             reduce using rule 22 (expression -> assign .)
    COS             reduce using rule 22 (expression -> assign .)
    TAN             reduce using rule 22 (expression -> assign .)
    MIN             reduce using rule 22 (expression -> assign .)
    MAX             reduce using rule 22 (expression -> assign .)
    PRINT           reduce using rule 22 (expression -> assign .)
    PRINTLN         reduce using rule 22 (expression -> assign .)
    PRINTF          reduce using rule 22 (expression -> assign .)
    FMT_PRINT       reduce using rule 22 (expression -> assign .)
    FMT_PRINTLN     reduce using rule 22 (expression -> assign .)
    FMT_PRINTF      reduce using rule 22 (expression -> assign .)
    NAME            reduce using rule 22 (expression -> assign .)
    NUMBER          reduce using rule 22 (expression -> assign .)
    SQ_STRING       reduce using rule 22 (expression -> assign .)
    DQ_STRING       reduce using rule 22 (expression -> assign .)
    $end            reduce using rule 22 (expression -> assign .)
    {               reduce using rule 22 (expression -> assign .)
    ;               reduce using rule 22 (expression -> assign .)
    }               reduce using rule 22 (expression -> assign .)


state 64

    (36) expression -> - expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    PLUS            reduce using rule 36 (expression -> - expression .)
    MINUS           reduce using rule 36 (expression -> - expression .)
    TIMES           reduce using rule 36 (expression -> - expression .)
    DIVIDE          reduce using rule 36 (expression -> - expression .)
    MOD             reduce using rule 36 (expression -> - expression .)
    LT              reduce using rule 36 (expression -> - expression .)
    LE              reduce using rule 36 (expression -> - expression .)
    EQ              reduce using rule 36 (expression -> - expression .)
    NEQ             reduce using rule 36 (expression -> - expression .)
    GE              reduce using rule 36 (expression -> - expression .)
    GT              reduce using rule 36 (expression -> - expression .)
    ,               reduce using rule 36 (expression -> - expression .)
    VAR             reduce using rule 36 (expression -> - expression .)
    IF              reduce using rule 36 (expression -> - expression .)
    FOR             reduce using rule 36 (expression -> - expression .)
    (               reduce using rule 36 (expression -> - expression .)
    -               reduce using rule 36 (expression -> - expression .)
    ABS             reduce using rule 36 (expression -> - expression .)
    SIN             reduce using rule 36 (expression -> - expression .)
    COS             reduce using rule 36 (expression -> - expression .)
    TAN             reduce using rule 36 (expression -> - expression .)
    MIN             reduce using rule 36 (expression -> - expression .)
    MAX             reduce using rule 36 (expression -> - expression .)
    PRINT           reduce using rule 36 (expression -> - expression .)
    PRINTLN         reduce using rule 36 (expression -> - expression .)
    PRINTF          reduce using rule 36 (expression -> - expression .)
    FMT_PRINT       reduce using rule 36 (expression -> - expression .)
    FMT_PRINTLN     reduce using rule 36 (expression -> - expression .)
    FMT_PRINTF      reduce using rule 36 (expression -> - expression .)
    NAME            reduce using rule 36 (expression -> - expression .)
    NUMBER          reduce using rule 36 (expression -> - expression .)
    SQ_STRING       reduce using rule 36 (expression -> - expression .)
    DQ_STRING       reduce using rule 36 (expression -> - expression .)
    $end            reduce using rule 36 (expression -> - expression .)
    )               reduce using rule 36 (expression -> - expression .)
    {               reduce using rule 36 (expression -> - expression .)
    ;               reduce using rule 36 (expression -> - expression .)
    }               reduce using rule 36 (expression -> - expression .)

  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! MOD             [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 65

    (54) expression -> ABS ( . expression )
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 100
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 66

    (55) expression -> SIN ( . expression )
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 101
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 67

    (56) expression -> COS ( . expression )
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 102
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 68

    (57) expression -> TAN ( . expression )
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 103
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 69

    (58) expression -> MIN ( . expression , expression )
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 104
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 70

    (59) expression -> MAX ( . expression , expression )
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 105
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 71

    (48) print -> PRINT ( . expression )
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 106
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 72

    (49) println -> PRINTLN ( . expression )
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 107
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 73

    (50) printf -> PRINTF ( . expression )
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 108
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 74

    (51) fmt_print -> FMT_PRINT ( . expression )
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 109
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 75

    (52) fmt_println -> FMT_PRINTLN ( . expression )
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 110
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 76

    (53) fmt_printf -> FMT_PRINTF ( . expression )
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 111
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 77

    (23) expression -> expression PLUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    PLUS            reduce using rule 23 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 23 (expression -> expression PLUS expression .)
    LT              reduce using rule 23 (expression -> expression PLUS expression .)
    LE              reduce using rule 23 (expression -> expression PLUS expression .)
    EQ              reduce using rule 23 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 23 (expression -> expression PLUS expression .)
    GE              reduce using rule 23 (expression -> expression PLUS expression .)
    GT              reduce using rule 23 (expression -> expression PLUS expression .)
    ,               reduce using rule 23 (expression -> expression PLUS expression .)
    VAR             reduce using rule 23 (expression -> expression PLUS expression .)
    IF              reduce using rule 23 (expression -> expression PLUS expression .)
    FOR             reduce using rule 23 (expression -> expression PLUS expression .)
    (               reduce using rule 23 (expression -> expression PLUS expression .)
    -               reduce using rule 23 (expression -> expression PLUS expression .)
    ABS             reduce using rule 23 (expression -> expression PLUS expression .)
    SIN             reduce using rule 23 (expression -> expression PLUS expression .)
    COS             reduce using rule 23 (expression -> expression PLUS expression .)
    TAN             reduce using rule 23 (expression -> expression PLUS expression .)
    MIN             reduce using rule 23 (expression -> expression PLUS expression .)
    MAX             reduce using rule 23 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 23 (expression -> expression PLUS expression .)
    PRINTLN         reduce using rule 23 (expression -> expression PLUS expression .)
    PRINTF          reduce using rule 23 (expression -> expression PLUS expression .)
    FMT_PRINT       reduce using rule 23 (expression -> expression PLUS expression .)
    FMT_PRINTLN     reduce using rule 23 (expression -> expression PLUS expression .)
    FMT_PRINTF      reduce using rule 23 (expression -> expression PLUS expression .)
    NAME            reduce using rule 23 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 23 (expression -> expression PLUS expression .)
    SQ_STRING       reduce using rule 23 (expression -> expression PLUS expression .)
    DQ_STRING       reduce using rule 23 (expression -> expression PLUS expression .)
    $end            reduce using rule 23 (expression -> expression PLUS expression .)
    )               reduce using rule 23 (expression -> expression PLUS expression .)
    {               reduce using rule 23 (expression -> expression PLUS expression .)
    ;               reduce using rule 23 (expression -> expression PLUS expression .)
    }               reduce using rule 23 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! TIMES           [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 78

    (24) expression -> expression MINUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    PLUS            reduce using rule 24 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 24 (expression -> expression MINUS expression .)
    LT              reduce using rule 24 (expression -> expression MINUS expression .)
    LE              reduce using rule 24 (expression -> expression MINUS expression .)
    EQ              reduce using rule 24 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 24 (expression -> expression MINUS expression .)
    GE              reduce using rule 24 (expression -> expression MINUS expression .)
    GT              reduce using rule 24 (expression -> expression MINUS expression .)
    ,               reduce using rule 24 (expression -> expression MINUS expression .)
    VAR             reduce using rule 24 (expression -> expression MINUS expression .)
    IF              reduce using rule 24 (expression -> expression MINUS expression .)
    FOR             reduce using rule 24 (expression -> expression MINUS expression .)
    (               reduce using rule 24 (expression -> expression MINUS expression .)
    -               reduce using rule 24 (expression -> expression MINUS expression .)
    ABS             reduce using rule 24 (expression -> expression MINUS expression .)
    SIN             reduce using rule 24 (expression -> expression MINUS expression .)
    COS             reduce using rule 24 (expression -> expression MINUS expression .)
    TAN             reduce using rule 24 (expression -> expression MINUS expression .)
    MIN             reduce using rule 24 (expression -> expression MINUS expression .)
    MAX             reduce using rule 24 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 24 (expression -> expression MINUS expression .)
    PRINTLN         reduce using rule 24 (expression -> expression MINUS expression .)
    PRINTF          reduce using rule 24 (expression -> expression MINUS expression .)
    FMT_PRINT       reduce using rule 24 (expression -> expression MINUS expression .)
    FMT_PRINTLN     reduce using rule 24 (expression -> expression MINUS expression .)
    FMT_PRINTF      reduce using rule 24 (expression -> expression MINUS expression .)
    NAME            reduce using rule 24 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 24 (expression -> expression MINUS expression .)
    SQ_STRING       reduce using rule 24 (expression -> expression MINUS expression .)
    DQ_STRING       reduce using rule 24 (expression -> expression MINUS expression .)
    $end            reduce using rule 24 (expression -> expression MINUS expression .)
    )               reduce using rule 24 (expression -> expression MINUS expression .)
    {               reduce using rule 24 (expression -> expression MINUS expression .)
    ;               reduce using rule 24 (expression -> expression MINUS expression .)
    }               reduce using rule 24 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! TIMES           [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 79

    (25) expression -> expression TIMES expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    PLUS            reduce using rule 25 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 25 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 25 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 25 (expression -> expression TIMES expression .)
    MOD             reduce using rule 25 (expression -> expression TIMES expression .)
    LT              reduce using rule 25 (expression -> expression TIMES expression .)
    LE              reduce using rule 25 (expression -> expression TIMES expression .)
    EQ              reduce using rule 25 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 25 (expression -> expression TIMES expression .)
    GE              reduce using rule 25 (expression -> expression TIMES expression .)
    GT              reduce using rule 25 (expression -> expression TIMES expression .)
    ,               reduce using rule 25 (expression -> expression TIMES expression .)
    VAR             reduce using rule 25 (expression -> expression TIMES expression .)
    IF              reduce using rule 25 (expression -> expression TIMES expression .)
    FOR             reduce using rule 25 (expression -> expression TIMES expression .)
    (               reduce using rule 25 (expression -> expression TIMES expression .)
    -               reduce using rule 25 (expression -> expression TIMES expression .)
    ABS             reduce using rule 25 (expression -> expression TIMES expression .)
    SIN             reduce using rule 25 (expression -> expression TIMES expression .)
    COS             reduce using rule 25 (expression -> expression TIMES expression .)
    TAN             reduce using rule 25 (expression -> expression TIMES expression .)
    MIN             reduce using rule 25 (expression -> expression TIMES expression .)
    MAX             reduce using rule 25 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 25 (expression -> expression TIMES expression .)
    PRINTLN         reduce using rule 25 (expression -> expression TIMES expression .)
    PRINTF          reduce using rule 25 (expression -> expression TIMES expression .)
    FMT_PRINT       reduce using rule 25 (expression -> expression TIMES expression .)
    FMT_PRINTLN     reduce using rule 25 (expression -> expression TIMES expression .)
    FMT_PRINTF      reduce using rule 25 (expression -> expression TIMES expression .)
    NAME            reduce using rule 25 (expression -> expression TIMES expression .)
    NUMBER          reduce using rule 25 (expression -> expression TIMES expression .)
    SQ_STRING       reduce using rule 25 (expression -> expression TIMES expression .)
    DQ_STRING       reduce using rule 25 (expression -> expression TIMES expression .)
    $end            reduce using rule 25 (expression -> expression TIMES expression .)
    )               reduce using rule 25 (expression -> expression TIMES expression .)
    {               reduce using rule 25 (expression -> expression TIMES expression .)
    ;               reduce using rule 25 (expression -> expression TIMES expression .)
    }               reduce using rule 25 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! MOD             [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 80

    (26) expression -> expression DIVIDE expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    PLUS            reduce using rule 26 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 26 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 26 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 26 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 26 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 26 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 26 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 26 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 26 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 26 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 26 (expression -> expression DIVIDE expression .)
    ,               reduce using rule 26 (expression -> expression DIVIDE expression .)
    VAR             reduce using rule 26 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 26 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 26 (expression -> expression DIVIDE expression .)
    (               reduce using rule 26 (expression -> expression DIVIDE expression .)
    -               reduce using rule 26 (expression -> expression DIVIDE expression .)
    ABS             reduce using rule 26 (expression -> expression DIVIDE expression .)
    SIN             reduce using rule 26 (expression -> expression DIVIDE expression .)
    COS             reduce using rule 26 (expression -> expression DIVIDE expression .)
    TAN             reduce using rule 26 (expression -> expression DIVIDE expression .)
    MIN             reduce using rule 26 (expression -> expression DIVIDE expression .)
    MAX             reduce using rule 26 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 26 (expression -> expression DIVIDE expression .)
    PRINTLN         reduce using rule 26 (expression -> expression DIVIDE expression .)
    PRINTF          reduce using rule 26 (expression -> expression DIVIDE expression .)
    FMT_PRINT       reduce using rule 26 (expression -> expression DIVIDE expression .)
    FMT_PRINTLN     reduce using rule 26 (expression -> expression DIVIDE expression .)
    FMT_PRINTF      reduce using rule 26 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 26 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 26 (expression -> expression DIVIDE expression .)
    SQ_STRING       reduce using rule 26 (expression -> expression DIVIDE expression .)
    DQ_STRING       reduce using rule 26 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 26 (expression -> expression DIVIDE expression .)
    )               reduce using rule 26 (expression -> expression DIVIDE expression .)
    {               reduce using rule 26 (expression -> expression DIVIDE expression .)
    ;               reduce using rule 26 (expression -> expression DIVIDE expression .)
    }               reduce using rule 26 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! MOD             [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 81

    (27) expression -> expression MOD expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    PLUS            reduce using rule 27 (expression -> expression MOD expression .)
    MINUS           reduce using rule 27 (expression -> expression MOD expression .)
    TIMES           reduce using rule 27 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 27 (expression -> expression MOD expression .)
    MOD             reduce using rule 27 (expression -> expression MOD expression .)
    LT              reduce using rule 27 (expression -> expression MOD expression .)
    LE              reduce using rule 27 (expression -> expression MOD expression .)
    EQ              reduce using rule 27 (expression -> expression MOD expression .)
    NEQ             reduce using rule 27 (expression -> expression MOD expression .)
    GE              reduce using rule 27 (expression -> expression MOD expression .)
    GT              reduce using rule 27 (expression -> expression MOD expression .)
    ,               reduce using rule 27 (expression -> expression MOD expression .)
    VAR             reduce using rule 27 (expression -> expression MOD expression .)
    IF              reduce using rule 27 (expression -> expression MOD expression .)
    FOR             reduce using rule 27 (expression -> expression MOD expression .)
    (               reduce using rule 27 (expression -> expression MOD expression .)
    -               reduce using rule 27 (expression -> expression MOD expression .)
    ABS             reduce using rule 27 (expression -> expression MOD expression .)
    SIN             reduce using rule 27 (expression -> expression MOD expression .)
    COS             reduce using rule 27 (expression -> expression MOD expression .)
    TAN             reduce using rule 27 (expression -> expression MOD expression .)
    MIN             reduce using rule 27 (expression -> expression MOD expression .)
    MAX             reduce using rule 27 (expression -> expression MOD expression .)
    PRINT           reduce using rule 27 (expression -> expression MOD expression .)
    PRINTLN         reduce using rule 27 (expression -> expression MOD expression .)
    PRINTF          reduce using rule 27 (expression -> expression MOD expression .)
    FMT_PRINT       reduce using rule 27 (expression -> expression MOD expression .)
    FMT_PRINTLN     reduce using rule 27 (expression -> expression MOD expression .)
    FMT_PRINTF      reduce using rule 27 (expression -> expression MOD expression .)
    NAME            reduce using rule 27 (expression -> expression MOD expression .)
    NUMBER          reduce using rule 27 (expression -> expression MOD expression .)
    SQ_STRING       reduce using rule 27 (expression -> expression MOD expression .)
    DQ_STRING       reduce using rule 27 (expression -> expression MOD expression .)
    $end            reduce using rule 27 (expression -> expression MOD expression .)
    )               reduce using rule 27 (expression -> expression MOD expression .)
    {               reduce using rule 27 (expression -> expression MOD expression .)
    ;               reduce using rule 27 (expression -> expression MOD expression .)
    }               reduce using rule 27 (expression -> expression MOD expression .)

  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! MOD             [ shift and go to state 44 ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 82

    (28) expression -> expression LT expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    LT              reduce using rule 28 (expression -> expression LT expression .)
    LE              reduce using rule 28 (expression -> expression LT expression .)
    EQ              reduce using rule 28 (expression -> expression LT expression .)
    NEQ             reduce using rule 28 (expression -> expression LT expression .)
    GE              reduce using rule 28 (expression -> expression LT expression .)
    GT              reduce using rule 28 (expression -> expression LT expression .)
    ,               reduce using rule 28 (expression -> expression LT expression .)
    VAR             reduce using rule 28 (expression -> expression LT expression .)
    IF              reduce using rule 28 (expression -> expression LT expression .)
    FOR             reduce using rule 28 (expression -> expression LT expression .)
    (               reduce using rule 28 (expression -> expression LT expression .)
    -               reduce using rule 28 (expression -> expression LT expression .)
    ABS             reduce using rule 28 (expression -> expression LT expression .)
    SIN             reduce using rule 28 (expression -> expression LT expression .)
    COS             reduce using rule 28 (expression -> expression LT expression .)
    TAN             reduce using rule 28 (expression -> expression LT expression .)
    MIN             reduce using rule 28 (expression -> expression LT expression .)
    MAX             reduce using rule 28 (expression -> expression LT expression .)
    PRINT           reduce using rule 28 (expression -> expression LT expression .)
    PRINTLN         reduce using rule 28 (expression -> expression LT expression .)
    PRINTF          reduce using rule 28 (expression -> expression LT expression .)
    FMT_PRINT       reduce using rule 28 (expression -> expression LT expression .)
    FMT_PRINTLN     reduce using rule 28 (expression -> expression LT expression .)
    FMT_PRINTF      reduce using rule 28 (expression -> expression LT expression .)
    NAME            reduce using rule 28 (expression -> expression LT expression .)
    NUMBER          reduce using rule 28 (expression -> expression LT expression .)
    SQ_STRING       reduce using rule 28 (expression -> expression LT expression .)
    DQ_STRING       reduce using rule 28 (expression -> expression LT expression .)
    $end            reduce using rule 28 (expression -> expression LT expression .)
    )               reduce using rule 28 (expression -> expression LT expression .)
    {               reduce using rule 28 (expression -> expression LT expression .)
    ;               reduce using rule 28 (expression -> expression LT expression .)
    }               reduce using rule 28 (expression -> expression LT expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 28 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 28 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 83

    (29) expression -> expression LE expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    LT              reduce using rule 29 (expression -> expression LE expression .)
    LE              reduce using rule 29 (expression -> expression LE expression .)
    EQ              reduce using rule 29 (expression -> expression LE expression .)
    NEQ             reduce using rule 29 (expression -> expression LE expression .)
    GE              reduce using rule 29 (expression -> expression LE expression .)
    GT              reduce using rule 29 (expression -> expression LE expression .)
    ,               reduce using rule 29 (expression -> expression LE expression .)
    VAR             reduce using rule 29 (expression -> expression LE expression .)
    IF              reduce using rule 29 (expression -> expression LE expression .)
    FOR             reduce using rule 29 (expression -> expression LE expression .)
    (               reduce using rule 29 (expression -> expression LE expression .)
    -               reduce using rule 29 (expression -> expression LE expression .)
    ABS             reduce using rule 29 (expression -> expression LE expression .)
    SIN             reduce using rule 29 (expression -> expression LE expression .)
    COS             reduce using rule 29 (expression -> expression LE expression .)
    TAN             reduce using rule 29 (expression -> expression LE expression .)
    MIN             reduce using rule 29 (expression -> expression LE expression .)
    MAX             reduce using rule 29 (expression -> expression LE expression .)
    PRINT           reduce using rule 29 (expression -> expression LE expression .)
    PRINTLN         reduce using rule 29 (expression -> expression LE expression .)
    PRINTF          reduce using rule 29 (expression -> expression LE expression .)
    FMT_PRINT       reduce using rule 29 (expression -> expression LE expression .)
    FMT_PRINTLN     reduce using rule 29 (expression -> expression LE expression .)
    FMT_PRINTF      reduce using rule 29 (expression -> expression LE expression .)
    NAME            reduce using rule 29 (expression -> expression LE expression .)
    NUMBER          reduce using rule 29 (expression -> expression LE expression .)
    SQ_STRING       reduce using rule 29 (expression -> expression LE expression .)
    DQ_STRING       reduce using rule 29 (expression -> expression LE expression .)
    $end            reduce using rule 29 (expression -> expression LE expression .)
    )               reduce using rule 29 (expression -> expression LE expression .)
    {               reduce using rule 29 (expression -> expression LE expression .)
    ;               reduce using rule 29 (expression -> expression LE expression .)
    }               reduce using rule 29 (expression -> expression LE expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 29 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 29 (expression -> expression LE expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 84

    (30) expression -> expression EQ expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    LT              reduce using rule 30 (expression -> expression EQ expression .)
    LE              reduce using rule 30 (expression -> expression EQ expression .)
    EQ              reduce using rule 30 (expression -> expression EQ expression .)
    NEQ             reduce using rule 30 (expression -> expression EQ expression .)
    GE              reduce using rule 30 (expression -> expression EQ expression .)
    GT              reduce using rule 30 (expression -> expression EQ expression .)
    ,               reduce using rule 30 (expression -> expression EQ expression .)
    VAR             reduce using rule 30 (expression -> expression EQ expression .)
    IF              reduce using rule 30 (expression -> expression EQ expression .)
    FOR             reduce using rule 30 (expression -> expression EQ expression .)
    (               reduce using rule 30 (expression -> expression EQ expression .)
    -               reduce using rule 30 (expression -> expression EQ expression .)
    ABS             reduce using rule 30 (expression -> expression EQ expression .)
    SIN             reduce using rule 30 (expression -> expression EQ expression .)
    COS             reduce using rule 30 (expression -> expression EQ expression .)
    TAN             reduce using rule 30 (expression -> expression EQ expression .)
    MIN             reduce using rule 30 (expression -> expression EQ expression .)
    MAX             reduce using rule 30 (expression -> expression EQ expression .)
    PRINT           reduce using rule 30 (expression -> expression EQ expression .)
    PRINTLN         reduce using rule 30 (expression -> expression EQ expression .)
    PRINTF          reduce using rule 30 (expression -> expression EQ expression .)
    FMT_PRINT       reduce using rule 30 (expression -> expression EQ expression .)
    FMT_PRINTLN     reduce using rule 30 (expression -> expression EQ expression .)
    FMT_PRINTF      reduce using rule 30 (expression -> expression EQ expression .)
    NAME            reduce using rule 30 (expression -> expression EQ expression .)
    NUMBER          reduce using rule 30 (expression -> expression EQ expression .)
    SQ_STRING       reduce using rule 30 (expression -> expression EQ expression .)
    DQ_STRING       reduce using rule 30 (expression -> expression EQ expression .)
    $end            reduce using rule 30 (expression -> expression EQ expression .)
    )               reduce using rule 30 (expression -> expression EQ expression .)
    {               reduce using rule 30 (expression -> expression EQ expression .)
    ;               reduce using rule 30 (expression -> expression EQ expression .)
    }               reduce using rule 30 (expression -> expression EQ expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 30 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 30 (expression -> expression EQ expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 85

    (31) expression -> expression NEQ expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    LT              reduce using rule 31 (expression -> expression NEQ expression .)
    LE              reduce using rule 31 (expression -> expression NEQ expression .)
    EQ              reduce using rule 31 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 31 (expression -> expression NEQ expression .)
    GE              reduce using rule 31 (expression -> expression NEQ expression .)
    GT              reduce using rule 31 (expression -> expression NEQ expression .)
    ,               reduce using rule 31 (expression -> expression NEQ expression .)
    VAR             reduce using rule 31 (expression -> expression NEQ expression .)
    IF              reduce using rule 31 (expression -> expression NEQ expression .)
    FOR             reduce using rule 31 (expression -> expression NEQ expression .)
    (               reduce using rule 31 (expression -> expression NEQ expression .)
    -               reduce using rule 31 (expression -> expression NEQ expression .)
    ABS             reduce using rule 31 (expression -> expression NEQ expression .)
    SIN             reduce using rule 31 (expression -> expression NEQ expression .)
    COS             reduce using rule 31 (expression -> expression NEQ expression .)
    TAN             reduce using rule 31 (expression -> expression NEQ expression .)
    MIN             reduce using rule 31 (expression -> expression NEQ expression .)
    MAX             reduce using rule 31 (expression -> expression NEQ expression .)
    PRINT           reduce using rule 31 (expression -> expression NEQ expression .)
    PRINTLN         reduce using rule 31 (expression -> expression NEQ expression .)
    PRINTF          reduce using rule 31 (expression -> expression NEQ expression .)
    FMT_PRINT       reduce using rule 31 (expression -> expression NEQ expression .)
    FMT_PRINTLN     reduce using rule 31 (expression -> expression NEQ expression .)
    FMT_PRINTF      reduce using rule 31 (expression -> expression NEQ expression .)
    NAME            reduce using rule 31 (expression -> expression NEQ expression .)
    NUMBER          reduce using rule 31 (expression -> expression NEQ expression .)
    SQ_STRING       reduce using rule 31 (expression -> expression NEQ expression .)
    DQ_STRING       reduce using rule 31 (expression -> expression NEQ expression .)
    $end            reduce using rule 31 (expression -> expression NEQ expression .)
    )               reduce using rule 31 (expression -> expression NEQ expression .)
    {               reduce using rule 31 (expression -> expression NEQ expression .)
    ;               reduce using rule 31 (expression -> expression NEQ expression .)
    }               reduce using rule 31 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! MOD             [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 86

    (32) expression -> expression GE expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    LT              reduce using rule 32 (expression -> expression GE expression .)
    LE              reduce using rule 32 (expression -> expression GE expression .)
    EQ              reduce using rule 32 (expression -> expression GE expression .)
    NEQ             reduce using rule 32 (expression -> expression GE expression .)
    GE              reduce using rule 32 (expression -> expression GE expression .)
    GT              reduce using rule 32 (expression -> expression GE expression .)
    ,               reduce using rule 32 (expression -> expression GE expression .)
    VAR             reduce using rule 32 (expression -> expression GE expression .)
    IF              reduce using rule 32 (expression -> expression GE expression .)
    FOR             reduce using rule 32 (expression -> expression GE expression .)
    (               reduce using rule 32 (expression -> expression GE expression .)
    -               reduce using rule 32 (expression -> expression GE expression .)
    ABS             reduce using rule 32 (expression -> expression GE expression .)
    SIN             reduce using rule 32 (expression -> expression GE expression .)
    COS             reduce using rule 32 (expression -> expression GE expression .)
    TAN             reduce using rule 32 (expression -> expression GE expression .)
    MIN             reduce using rule 32 (expression -> expression GE expression .)
    MAX             reduce using rule 32 (expression -> expression GE expression .)
    PRINT           reduce using rule 32 (expression -> expression GE expression .)
    PRINTLN         reduce using rule 32 (expression -> expression GE expression .)
    PRINTF          reduce using rule 32 (expression -> expression GE expression .)
    FMT_PRINT       reduce using rule 32 (expression -> expression GE expression .)
    FMT_PRINTLN     reduce using rule 32 (expression -> expression GE expression .)
    FMT_PRINTF      reduce using rule 32 (expression -> expression GE expression .)
    NAME            reduce using rule 32 (expression -> expression GE expression .)
    NUMBER          reduce using rule 32 (expression -> expression GE expression .)
    SQ_STRING       reduce using rule 32 (expression -> expression GE expression .)
    DQ_STRING       reduce using rule 32 (expression -> expression GE expression .)
    $end            reduce using rule 32 (expression -> expression GE expression .)
    )               reduce using rule 32 (expression -> expression GE expression .)
    {               reduce using rule 32 (expression -> expression GE expression .)
    ;               reduce using rule 32 (expression -> expression GE expression .)
    }               reduce using rule 32 (expression -> expression GE expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 32 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 32 (expression -> expression GE expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 87

    (33) expression -> expression GT expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    LT              reduce using rule 33 (expression -> expression GT expression .)
    LE              reduce using rule 33 (expression -> expression GT expression .)
    EQ              reduce using rule 33 (expression -> expression GT expression .)
    NEQ             reduce using rule 33 (expression -> expression GT expression .)
    GE              reduce using rule 33 (expression -> expression GT expression .)
    GT              reduce using rule 33 (expression -> expression GT expression .)
    ,               reduce using rule 33 (expression -> expression GT expression .)
    VAR             reduce using rule 33 (expression -> expression GT expression .)
    IF              reduce using rule 33 (expression -> expression GT expression .)
    FOR             reduce using rule 33 (expression -> expression GT expression .)
    (               reduce using rule 33 (expression -> expression GT expression .)
    -               reduce using rule 33 (expression -> expression GT expression .)
    ABS             reduce using rule 33 (expression -> expression GT expression .)
    SIN             reduce using rule 33 (expression -> expression GT expression .)
    COS             reduce using rule 33 (expression -> expression GT expression .)
    TAN             reduce using rule 33 (expression -> expression GT expression .)
    MIN             reduce using rule 33 (expression -> expression GT expression .)
    MAX             reduce using rule 33 (expression -> expression GT expression .)
    PRINT           reduce using rule 33 (expression -> expression GT expression .)
    PRINTLN         reduce using rule 33 (expression -> expression GT expression .)
    PRINTF          reduce using rule 33 (expression -> expression GT expression .)
    FMT_PRINT       reduce using rule 33 (expression -> expression GT expression .)
    FMT_PRINTLN     reduce using rule 33 (expression -> expression GT expression .)
    FMT_PRINTF      reduce using rule 33 (expression -> expression GT expression .)
    NAME            reduce using rule 33 (expression -> expression GT expression .)
    NUMBER          reduce using rule 33 (expression -> expression GT expression .)
    SQ_STRING       reduce using rule 33 (expression -> expression GT expression .)
    DQ_STRING       reduce using rule 33 (expression -> expression GT expression .)
    $end            reduce using rule 33 (expression -> expression GT expression .)
    )               reduce using rule 33 (expression -> expression GT expression .)
    {               reduce using rule 33 (expression -> expression GT expression .)
    ;               reduce using rule 33 (expression -> expression GT expression .)
    }               reduce using rule 33 (expression -> expression GT expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 33 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 88

    (34) expression -> expression , expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for , resolved as shift
    VAR             reduce using rule 34 (expression -> expression , expression .)
    IF              reduce using rule 34 (expression -> expression , expression .)
    FOR             reduce using rule 34 (expression -> expression , expression .)
    (               reduce using rule 34 (expression -> expression , expression .)
    -               reduce using rule 34 (expression -> expression , expression .)
    ABS             reduce using rule 34 (expression -> expression , expression .)
    SIN             reduce using rule 34 (expression -> expression , expression .)
    COS             reduce using rule 34 (expression -> expression , expression .)
    TAN             reduce using rule 34 (expression -> expression , expression .)
    MIN             reduce using rule 34 (expression -> expression , expression .)
    MAX             reduce using rule 34 (expression -> expression , expression .)
    PRINT           reduce using rule 34 (expression -> expression , expression .)
    PRINTLN         reduce using rule 34 (expression -> expression , expression .)
    PRINTF          reduce using rule 34 (expression -> expression , expression .)
    FMT_PRINT       reduce using rule 34 (expression -> expression , expression .)
    FMT_PRINTLN     reduce using rule 34 (expression -> expression , expression .)
    FMT_PRINTF      reduce using rule 34 (expression -> expression , expression .)
    NAME            reduce using rule 34 (expression -> expression , expression .)
    NUMBER          reduce using rule 34 (expression -> expression , expression .)
    SQ_STRING       reduce using rule 34 (expression -> expression , expression .)
    DQ_STRING       reduce using rule 34 (expression -> expression , expression .)
    $end            reduce using rule 34 (expression -> expression , expression .)
    )               reduce using rule 34 (expression -> expression , expression .)
    {               reduce using rule 34 (expression -> expression , expression .)
    ;               reduce using rule 34 (expression -> expression , expression .)
    }               reduce using rule 34 (expression -> expression , expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51

  ! PLUS            [ reduce using rule 34 (expression -> expression , expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression , expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression , expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression , expression .) ]
  ! MOD             [ reduce using rule 34 (expression -> expression , expression .) ]
  ! LT              [ reduce using rule 34 (expression -> expression , expression .) ]
  ! LE              [ reduce using rule 34 (expression -> expression , expression .) ]
  ! EQ              [ reduce using rule 34 (expression -> expression , expression .) ]
  ! NEQ             [ reduce using rule 34 (expression -> expression , expression .) ]
  ! GE              [ reduce using rule 34 (expression -> expression , expression .) ]
  ! GT              [ reduce using rule 34 (expression -> expression , expression .) ]
  ! ,               [ reduce using rule 34 (expression -> expression , expression .) ]


state 89

    (39) assign -> name = expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for , resolved as shift
    VAR             reduce using rule 39 (assign -> name = expression .)
    IF              reduce using rule 39 (assign -> name = expression .)
    FOR             reduce using rule 39 (assign -> name = expression .)
    (               reduce using rule 39 (assign -> name = expression .)
    -               reduce using rule 39 (assign -> name = expression .)
    ABS             reduce using rule 39 (assign -> name = expression .)
    SIN             reduce using rule 39 (assign -> name = expression .)
    COS             reduce using rule 39 (assign -> name = expression .)
    TAN             reduce using rule 39 (assign -> name = expression .)
    MIN             reduce using rule 39 (assign -> name = expression .)
    MAX             reduce using rule 39 (assign -> name = expression .)
    PRINT           reduce using rule 39 (assign -> name = expression .)
    PRINTLN         reduce using rule 39 (assign -> name = expression .)
    PRINTF          reduce using rule 39 (assign -> name = expression .)
    FMT_PRINT       reduce using rule 39 (assign -> name = expression .)
    FMT_PRINTLN     reduce using rule 39 (assign -> name = expression .)
    FMT_PRINTF      reduce using rule 39 (assign -> name = expression .)
    NAME            reduce using rule 39 (assign -> name = expression .)
    NUMBER          reduce using rule 39 (assign -> name = expression .)
    SQ_STRING       reduce using rule 39 (assign -> name = expression .)
    DQ_STRING       reduce using rule 39 (assign -> name = expression .)
    $end            reduce using rule 39 (assign -> name = expression .)
    {               reduce using rule 39 (assign -> name = expression .)
    ;               reduce using rule 39 (assign -> name = expression .)
    )               reduce using rule 39 (assign -> name = expression .)
    }               reduce using rule 39 (assign -> name = expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51

  ! PLUS            [ reduce using rule 39 (assign -> name = expression .) ]
  ! MINUS           [ reduce using rule 39 (assign -> name = expression .) ]
  ! TIMES           [ reduce using rule 39 (assign -> name = expression .) ]
  ! DIVIDE          [ reduce using rule 39 (assign -> name = expression .) ]
  ! MOD             [ reduce using rule 39 (assign -> name = expression .) ]
  ! LT              [ reduce using rule 39 (assign -> name = expression .) ]
  ! LE              [ reduce using rule 39 (assign -> name = expression .) ]
  ! EQ              [ reduce using rule 39 (assign -> name = expression .) ]
  ! NEQ             [ reduce using rule 39 (assign -> name = expression .) ]
  ! GE              [ reduce using rule 39 (assign -> name = expression .) ]
  ! GT              [ reduce using rule 39 (assign -> name = expression .) ]
  ! ,               [ reduce using rule 39 (assign -> name = expression .) ]


state 90

    (41) assign -> name GT expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    VAR             reduce using rule 41 (assign -> name GT expression .)
    IF              reduce using rule 41 (assign -> name GT expression .)
    FOR             reduce using rule 41 (assign -> name GT expression .)
    (               reduce using rule 41 (assign -> name GT expression .)
    -               reduce using rule 41 (assign -> name GT expression .)
    ABS             reduce using rule 41 (assign -> name GT expression .)
    SIN             reduce using rule 41 (assign -> name GT expression .)
    COS             reduce using rule 41 (assign -> name GT expression .)
    TAN             reduce using rule 41 (assign -> name GT expression .)
    MIN             reduce using rule 41 (assign -> name GT expression .)
    MAX             reduce using rule 41 (assign -> name GT expression .)
    PRINT           reduce using rule 41 (assign -> name GT expression .)
    PRINTLN         reduce using rule 41 (assign -> name GT expression .)
    PRINTF          reduce using rule 41 (assign -> name GT expression .)
    FMT_PRINT       reduce using rule 41 (assign -> name GT expression .)
    FMT_PRINTLN     reduce using rule 41 (assign -> name GT expression .)
    FMT_PRINTF      reduce using rule 41 (assign -> name GT expression .)
    NAME            reduce using rule 41 (assign -> name GT expression .)
    NUMBER          reduce using rule 41 (assign -> name GT expression .)
    SQ_STRING       reduce using rule 41 (assign -> name GT expression .)
    DQ_STRING       reduce using rule 41 (assign -> name GT expression .)
    $end            reduce using rule 41 (assign -> name GT expression .)
    LT              reduce using rule 41 (assign -> name GT expression .)
    LE              reduce using rule 41 (assign -> name GT expression .)
    EQ              reduce using rule 41 (assign -> name GT expression .)
    NEQ             reduce using rule 41 (assign -> name GT expression .)
    GE              reduce using rule 41 (assign -> name GT expression .)
    GT              reduce using rule 41 (assign -> name GT expression .)
    ,               reduce using rule 41 (assign -> name GT expression .)
    {               reduce using rule 41 (assign -> name GT expression .)
    ;               reduce using rule 41 (assign -> name GT expression .)
    )               reduce using rule 41 (assign -> name GT expression .)
    }               reduce using rule 41 (assign -> name GT expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 41 (assign -> name GT expression .) ]
  ! MINUS           [ reduce using rule 41 (assign -> name GT expression .) ]
  ! TIMES           [ reduce using rule 41 (assign -> name GT expression .) ]
  ! DIVIDE          [ reduce using rule 41 (assign -> name GT expression .) ]
  ! MOD             [ reduce using rule 41 (assign -> name GT expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 91

    (42) assign -> name LT expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    VAR             reduce using rule 42 (assign -> name LT expression .)
    IF              reduce using rule 42 (assign -> name LT expression .)
    FOR             reduce using rule 42 (assign -> name LT expression .)
    (               reduce using rule 42 (assign -> name LT expression .)
    -               reduce using rule 42 (assign -> name LT expression .)
    ABS             reduce using rule 42 (assign -> name LT expression .)
    SIN             reduce using rule 42 (assign -> name LT expression .)
    COS             reduce using rule 42 (assign -> name LT expression .)
    TAN             reduce using rule 42 (assign -> name LT expression .)
    MIN             reduce using rule 42 (assign -> name LT expression .)
    MAX             reduce using rule 42 (assign -> name LT expression .)
    PRINT           reduce using rule 42 (assign -> name LT expression .)
    PRINTLN         reduce using rule 42 (assign -> name LT expression .)
    PRINTF          reduce using rule 42 (assign -> name LT expression .)
    FMT_PRINT       reduce using rule 42 (assign -> name LT expression .)
    FMT_PRINTLN     reduce using rule 42 (assign -> name LT expression .)
    FMT_PRINTF      reduce using rule 42 (assign -> name LT expression .)
    NAME            reduce using rule 42 (assign -> name LT expression .)
    NUMBER          reduce using rule 42 (assign -> name LT expression .)
    SQ_STRING       reduce using rule 42 (assign -> name LT expression .)
    DQ_STRING       reduce using rule 42 (assign -> name LT expression .)
    $end            reduce using rule 42 (assign -> name LT expression .)
    LT              reduce using rule 42 (assign -> name LT expression .)
    LE              reduce using rule 42 (assign -> name LT expression .)
    EQ              reduce using rule 42 (assign -> name LT expression .)
    NEQ             reduce using rule 42 (assign -> name LT expression .)
    GE              reduce using rule 42 (assign -> name LT expression .)
    GT              reduce using rule 42 (assign -> name LT expression .)
    ,               reduce using rule 42 (assign -> name LT expression .)
    {               reduce using rule 42 (assign -> name LT expression .)
    ;               reduce using rule 42 (assign -> name LT expression .)
    )               reduce using rule 42 (assign -> name LT expression .)
    }               reduce using rule 42 (assign -> name LT expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 42 (assign -> name LT expression .) ]
  ! MINUS           [ reduce using rule 42 (assign -> name LT expression .) ]
  ! TIMES           [ reduce using rule 42 (assign -> name LT expression .) ]
  ! DIVIDE          [ reduce using rule 42 (assign -> name LT expression .) ]
  ! MOD             [ reduce using rule 42 (assign -> name LT expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 92

    (43) assign -> name LE expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    VAR             reduce using rule 43 (assign -> name LE expression .)
    IF              reduce using rule 43 (assign -> name LE expression .)
    FOR             reduce using rule 43 (assign -> name LE expression .)
    (               reduce using rule 43 (assign -> name LE expression .)
    -               reduce using rule 43 (assign -> name LE expression .)
    ABS             reduce using rule 43 (assign -> name LE expression .)
    SIN             reduce using rule 43 (assign -> name LE expression .)
    COS             reduce using rule 43 (assign -> name LE expression .)
    TAN             reduce using rule 43 (assign -> name LE expression .)
    MIN             reduce using rule 43 (assign -> name LE expression .)
    MAX             reduce using rule 43 (assign -> name LE expression .)
    PRINT           reduce using rule 43 (assign -> name LE expression .)
    PRINTLN         reduce using rule 43 (assign -> name LE expression .)
    PRINTF          reduce using rule 43 (assign -> name LE expression .)
    FMT_PRINT       reduce using rule 43 (assign -> name LE expression .)
    FMT_PRINTLN     reduce using rule 43 (assign -> name LE expression .)
    FMT_PRINTF      reduce using rule 43 (assign -> name LE expression .)
    NAME            reduce using rule 43 (assign -> name LE expression .)
    NUMBER          reduce using rule 43 (assign -> name LE expression .)
    SQ_STRING       reduce using rule 43 (assign -> name LE expression .)
    DQ_STRING       reduce using rule 43 (assign -> name LE expression .)
    $end            reduce using rule 43 (assign -> name LE expression .)
    LT              reduce using rule 43 (assign -> name LE expression .)
    LE              reduce using rule 43 (assign -> name LE expression .)
    EQ              reduce using rule 43 (assign -> name LE expression .)
    NEQ             reduce using rule 43 (assign -> name LE expression .)
    GE              reduce using rule 43 (assign -> name LE expression .)
    GT              reduce using rule 43 (assign -> name LE expression .)
    ,               reduce using rule 43 (assign -> name LE expression .)
    {               reduce using rule 43 (assign -> name LE expression .)
    ;               reduce using rule 43 (assign -> name LE expression .)
    )               reduce using rule 43 (assign -> name LE expression .)
    }               reduce using rule 43 (assign -> name LE expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 43 (assign -> name LE expression .) ]
  ! MINUS           [ reduce using rule 43 (assign -> name LE expression .) ]
  ! TIMES           [ reduce using rule 43 (assign -> name LE expression .) ]
  ! DIVIDE          [ reduce using rule 43 (assign -> name LE expression .) ]
  ! MOD             [ reduce using rule 43 (assign -> name LE expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 93

    (44) assign -> name EQ expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    VAR             reduce using rule 44 (assign -> name EQ expression .)
    IF              reduce using rule 44 (assign -> name EQ expression .)
    FOR             reduce using rule 44 (assign -> name EQ expression .)
    (               reduce using rule 44 (assign -> name EQ expression .)
    -               reduce using rule 44 (assign -> name EQ expression .)
    ABS             reduce using rule 44 (assign -> name EQ expression .)
    SIN             reduce using rule 44 (assign -> name EQ expression .)
    COS             reduce using rule 44 (assign -> name EQ expression .)
    TAN             reduce using rule 44 (assign -> name EQ expression .)
    MIN             reduce using rule 44 (assign -> name EQ expression .)
    MAX             reduce using rule 44 (assign -> name EQ expression .)
    PRINT           reduce using rule 44 (assign -> name EQ expression .)
    PRINTLN         reduce using rule 44 (assign -> name EQ expression .)
    PRINTF          reduce using rule 44 (assign -> name EQ expression .)
    FMT_PRINT       reduce using rule 44 (assign -> name EQ expression .)
    FMT_PRINTLN     reduce using rule 44 (assign -> name EQ expression .)
    FMT_PRINTF      reduce using rule 44 (assign -> name EQ expression .)
    NAME            reduce using rule 44 (assign -> name EQ expression .)
    NUMBER          reduce using rule 44 (assign -> name EQ expression .)
    SQ_STRING       reduce using rule 44 (assign -> name EQ expression .)
    DQ_STRING       reduce using rule 44 (assign -> name EQ expression .)
    $end            reduce using rule 44 (assign -> name EQ expression .)
    LT              reduce using rule 44 (assign -> name EQ expression .)
    LE              reduce using rule 44 (assign -> name EQ expression .)
    EQ              reduce using rule 44 (assign -> name EQ expression .)
    NEQ             reduce using rule 44 (assign -> name EQ expression .)
    GE              reduce using rule 44 (assign -> name EQ expression .)
    GT              reduce using rule 44 (assign -> name EQ expression .)
    ,               reduce using rule 44 (assign -> name EQ expression .)
    {               reduce using rule 44 (assign -> name EQ expression .)
    ;               reduce using rule 44 (assign -> name EQ expression .)
    )               reduce using rule 44 (assign -> name EQ expression .)
    }               reduce using rule 44 (assign -> name EQ expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44

  ! PLUS            [ reduce using rule 44 (assign -> name EQ expression .) ]
  ! MINUS           [ reduce using rule 44 (assign -> name EQ expression .) ]
  ! TIMES           [ reduce using rule 44 (assign -> name EQ expression .) ]
  ! DIVIDE          [ reduce using rule 44 (assign -> name EQ expression .) ]
  ! MOD             [ reduce using rule 44 (assign -> name EQ expression .) ]
  ! LT              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! GE              [ shift and go to state 49 ]
  ! GT              [ shift and go to state 50 ]
  ! ,               [ shift and go to state 51 ]


state 94

    (40) assign -> VAR name = . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    name                           shift and go to state 62
    expression                     shift and go to state 112
    number                         shift and go to state 19
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 95

    (16) if_statement -> IF assign block_statement . ELSE block_statement
    (17) if_statement -> IF assign block_statement .

    ELSE            shift and go to state 113
    VAR             reduce using rule 17 (if_statement -> IF assign block_statement .)
    IF              reduce using rule 17 (if_statement -> IF assign block_statement .)
    FOR             reduce using rule 17 (if_statement -> IF assign block_statement .)
    (               reduce using rule 17 (if_statement -> IF assign block_statement .)
    -               reduce using rule 17 (if_statement -> IF assign block_statement .)
    ABS             reduce using rule 17 (if_statement -> IF assign block_statement .)
    SIN             reduce using rule 17 (if_statement -> IF assign block_statement .)
    COS             reduce using rule 17 (if_statement -> IF assign block_statement .)
    TAN             reduce using rule 17 (if_statement -> IF assign block_statement .)
    MIN             reduce using rule 17 (if_statement -> IF assign block_statement .)
    MAX             reduce using rule 17 (if_statement -> IF assign block_statement .)
    PRINT           reduce using rule 17 (if_statement -> IF assign block_statement .)
    PRINTLN         reduce using rule 17 (if_statement -> IF assign block_statement .)
    PRINTF          reduce using rule 17 (if_statement -> IF assign block_statement .)
    FMT_PRINT       reduce using rule 17 (if_statement -> IF assign block_statement .)
    FMT_PRINTLN     reduce using rule 17 (if_statement -> IF assign block_statement .)
    FMT_PRINTF      reduce using rule 17 (if_statement -> IF assign block_statement .)
    NAME            reduce using rule 17 (if_statement -> IF assign block_statement .)
    NUMBER          reduce using rule 17 (if_statement -> IF assign block_statement .)
    SQ_STRING       reduce using rule 17 (if_statement -> IF assign block_statement .)
    DQ_STRING       reduce using rule 17 (if_statement -> IF assign block_statement .)
    $end            reduce using rule 17 (if_statement -> IF assign block_statement .)
    }               reduce using rule 17 (if_statement -> IF assign block_statement .)
    {               reduce using rule 17 (if_statement -> IF assign block_statement .)


state 96

    (4) block_statement -> { . statement_list }
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (5) statement -> . all_prints
    (6) statement -> . assign
    (7) statement -> . if_statement
    (8) statement -> . for
    (9) statement -> . expression
    (10) all_prints -> . print
    (11) all_prints -> . println
    (12) all_prints -> . printf
    (13) all_prints -> . fmt_print
    (14) all_prints -> . fmt_println
    (15) all_prints -> . fmt_printf
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (16) if_statement -> . IF assign block_statement ELSE block_statement
    (17) if_statement -> . IF assign block_statement
    (18) for -> . FOR assign block_statement
    (19) for -> . FOR assign ; expression ; statement block_statement
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (48) print -> . PRINT ( expression )
    (49) println -> . PRINTLN ( expression )
    (50) printf -> . PRINTF ( expression )
    (51) fmt_print -> . FMT_PRINT ( expression )
    (52) fmt_println -> . FMT_PRINTLN ( expression )
    (53) fmt_printf -> . FMT_PRINTF ( expression )
    (38) name -> . NAME
    (37) number -> . NUMBER
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    VAR             shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    PRINT           shift and go to state 29
    PRINTLN         shift and go to state 30
    PRINTF          shift and go to state 31
    FMT_PRINT       shift and go to state 32
    FMT_PRINTLN     shift and go to state 33
    FMT_PRINTF      shift and go to state 34
    NAME            shift and go to state 35
    NUMBER          shift and go to state 36
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    statement_list                 shift and go to state 114
    statement                      shift and go to state 3
    all_prints                     shift and go to state 4
    assign                         shift and go to state 5
    if_statement                   shift and go to state 6
    for                            shift and go to state 7
    expression                     shift and go to state 8
    print                          shift and go to state 9
    println                        shift and go to state 10
    printf                         shift and go to state 11
    fmt_print                      shift and go to state 12
    fmt_println                    shift and go to state 13
    fmt_printf                     shift and go to state 14
    name                           shift and go to state 15
    number                         shift and go to state 19
    string                         shift and go to state 22

state 97

    (18) for -> FOR assign block_statement .

    VAR             reduce using rule 18 (for -> FOR assign block_statement .)
    IF              reduce using rule 18 (for -> FOR assign block_statement .)
    FOR             reduce using rule 18 (for -> FOR assign block_statement .)
    (               reduce using rule 18 (for -> FOR assign block_statement .)
    -               reduce using rule 18 (for -> FOR assign block_statement .)
    ABS             reduce using rule 18 (for -> FOR assign block_statement .)
    SIN             reduce using rule 18 (for -> FOR assign block_statement .)
    COS             reduce using rule 18 (for -> FOR assign block_statement .)
    TAN             reduce using rule 18 (for -> FOR assign block_statement .)
    MIN             reduce using rule 18 (for -> FOR assign block_statement .)
    MAX             reduce using rule 18 (for -> FOR assign block_statement .)
    PRINT           reduce using rule 18 (for -> FOR assign block_statement .)
    PRINTLN         reduce using rule 18 (for -> FOR assign block_statement .)
    PRINTF          reduce using rule 18 (for -> FOR assign block_statement .)
    FMT_PRINT       reduce using rule 18 (for -> FOR assign block_statement .)
    FMT_PRINTLN     reduce using rule 18 (for -> FOR assign block_statement .)
    FMT_PRINTF      reduce using rule 18 (for -> FOR assign block_statement .)
    NAME            reduce using rule 18 (for -> FOR assign block_statement .)
    NUMBER          reduce using rule 18 (for -> FOR assign block_statement .)
    SQ_STRING       reduce using rule 18 (for -> FOR assign block_statement .)
    DQ_STRING       reduce using rule 18 (for -> FOR assign block_statement .)
    $end            reduce using rule 18 (for -> FOR assign block_statement .)
    }               reduce using rule 18 (for -> FOR assign block_statement .)
    {               reduce using rule 18 (for -> FOR assign block_statement .)


state 98

    (19) for -> FOR assign ; . expression ; statement block_statement
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    assign                         shift and go to state 63
    expression                     shift and go to state 115
    number                         shift and go to state 19
    name                           shift and go to state 62
    string                         shift and go to state 22

state 99

    (35) expression -> ( expression ) .

    PLUS            reduce using rule 35 (expression -> ( expression ) .)
    MINUS           reduce using rule 35 (expression -> ( expression ) .)
    TIMES           reduce using rule 35 (expression -> ( expression ) .)
    DIVIDE          reduce using rule 35 (expression -> ( expression ) .)
    MOD             reduce using rule 35 (expression -> ( expression ) .)
    LT              reduce using rule 35 (expression -> ( expression ) .)
    LE              reduce using rule 35 (expression -> ( expression ) .)
    EQ              reduce using rule 35 (expression -> ( expression ) .)
    NEQ             reduce using rule 35 (expression -> ( expression ) .)
    GE              reduce using rule 35 (expression -> ( expression ) .)
    GT              reduce using rule 35 (expression -> ( expression ) .)
    ,               reduce using rule 35 (expression -> ( expression ) .)
    VAR             reduce using rule 35 (expression -> ( expression ) .)
    IF              reduce using rule 35 (expression -> ( expression ) .)
    FOR             reduce using rule 35 (expression -> ( expression ) .)
    (               reduce using rule 35 (expression -> ( expression ) .)
    -               reduce using rule 35 (expression -> ( expression ) .)
    ABS             reduce using rule 35 (expression -> ( expression ) .)
    SIN             reduce using rule 35 (expression -> ( expression ) .)
    COS             reduce using rule 35 (expression -> ( expression ) .)
    TAN             reduce using rule 35 (expression -> ( expression ) .)
    MIN             reduce using rule 35 (expression -> ( expression ) .)
    MAX             reduce using rule 35 (expression -> ( expression ) .)
    PRINT           reduce using rule 35 (expression -> ( expression ) .)
    PRINTLN         reduce using rule 35 (expression -> ( expression ) .)
    PRINTF          reduce using rule 35 (expression -> ( expression ) .)
    FMT_PRINT       reduce using rule 35 (expression -> ( expression ) .)
    FMT_PRINTLN     reduce using rule 35 (expression -> ( expression ) .)
    FMT_PRINTF      reduce using rule 35 (expression -> ( expression ) .)
    NAME            reduce using rule 35 (expression -> ( expression ) .)
    NUMBER          reduce using rule 35 (expression -> ( expression ) .)
    SQ_STRING       reduce using rule 35 (expression -> ( expression ) .)
    DQ_STRING       reduce using rule 35 (expression -> ( expression ) .)
    $end            reduce using rule 35 (expression -> ( expression ) .)
    )               reduce using rule 35 (expression -> ( expression ) .)
    {               reduce using rule 35 (expression -> ( expression ) .)
    ;               reduce using rule 35 (expression -> ( expression ) .)
    }               reduce using rule 35 (expression -> ( expression ) .)


state 100

    (54) expression -> ABS ( expression . )
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    )               shift and go to state 116
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51


state 101

    (55) expression -> SIN ( expression . )
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    )               shift and go to state 117
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51


state 102

    (56) expression -> COS ( expression . )
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    )               shift and go to state 118
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51


state 103

    (57) expression -> TAN ( expression . )
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    )               shift and go to state 119
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51


state 104

    (58) expression -> MIN ( expression . , expression )
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    ,               shift and go to state 120
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50


state 105

    (59) expression -> MAX ( expression . , expression )
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    ,               shift and go to state 121
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50


state 106

    (48) print -> PRINT ( expression . )
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    )               shift and go to state 122
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51


state 107

    (49) println -> PRINTLN ( expression . )
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    )               shift and go to state 123
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51


state 108

    (50) printf -> PRINTF ( expression . )
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    )               shift and go to state 124
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51


state 109

    (51) fmt_print -> FMT_PRINT ( expression . )
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    )               shift and go to state 125
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51


state 110

    (52) fmt_println -> FMT_PRINTLN ( expression . )
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    )               shift and go to state 126
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51


state 111

    (53) fmt_printf -> FMT_PRINTF ( expression . )
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    )               shift and go to state 127
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51


state 112

    (40) assign -> VAR name = expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for , resolved as shift
    VAR             reduce using rule 40 (assign -> VAR name = expression .)
    IF              reduce using rule 40 (assign -> VAR name = expression .)
    FOR             reduce using rule 40 (assign -> VAR name = expression .)
    (               reduce using rule 40 (assign -> VAR name = expression .)
    -               reduce using rule 40 (assign -> VAR name = expression .)
    ABS             reduce using rule 40 (assign -> VAR name = expression .)
    SIN             reduce using rule 40 (assign -> VAR name = expression .)
    COS             reduce using rule 40 (assign -> VAR name = expression .)
    TAN             reduce using rule 40 (assign -> VAR name = expression .)
    MIN             reduce using rule 40 (assign -> VAR name = expression .)
    MAX             reduce using rule 40 (assign -> VAR name = expression .)
    PRINT           reduce using rule 40 (assign -> VAR name = expression .)
    PRINTLN         reduce using rule 40 (assign -> VAR name = expression .)
    PRINTF          reduce using rule 40 (assign -> VAR name = expression .)
    FMT_PRINT       reduce using rule 40 (assign -> VAR name = expression .)
    FMT_PRINTLN     reduce using rule 40 (assign -> VAR name = expression .)
    FMT_PRINTF      reduce using rule 40 (assign -> VAR name = expression .)
    NAME            reduce using rule 40 (assign -> VAR name = expression .)
    NUMBER          reduce using rule 40 (assign -> VAR name = expression .)
    SQ_STRING       reduce using rule 40 (assign -> VAR name = expression .)
    DQ_STRING       reduce using rule 40 (assign -> VAR name = expression .)
    $end            reduce using rule 40 (assign -> VAR name = expression .)
    {               reduce using rule 40 (assign -> VAR name = expression .)
    ;               reduce using rule 40 (assign -> VAR name = expression .)
    )               reduce using rule 40 (assign -> VAR name = expression .)
    }               reduce using rule 40 (assign -> VAR name = expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51

  ! PLUS            [ reduce using rule 40 (assign -> VAR name = expression .) ]
  ! MINUS           [ reduce using rule 40 (assign -> VAR name = expression .) ]
  ! TIMES           [ reduce using rule 40 (assign -> VAR name = expression .) ]
  ! DIVIDE          [ reduce using rule 40 (assign -> VAR name = expression .) ]
  ! MOD             [ reduce using rule 40 (assign -> VAR name = expression .) ]
  ! LT              [ reduce using rule 40 (assign -> VAR name = expression .) ]
  ! LE              [ reduce using rule 40 (assign -> VAR name = expression .) ]
  ! EQ              [ reduce using rule 40 (assign -> VAR name = expression .) ]
  ! NEQ             [ reduce using rule 40 (assign -> VAR name = expression .) ]
  ! GE              [ reduce using rule 40 (assign -> VAR name = expression .) ]
  ! GT              [ reduce using rule 40 (assign -> VAR name = expression .) ]
  ! ,               [ reduce using rule 40 (assign -> VAR name = expression .) ]


state 113

    (16) if_statement -> IF assign block_statement ELSE . block_statement
    (4) block_statement -> . { statement_list }

    {               shift and go to state 96

    block_statement                shift and go to state 128

state 114

    (4) block_statement -> { statement_list . }
    (2) statement_list -> statement_list . statement
    (5) statement -> . all_prints
    (6) statement -> . assign
    (7) statement -> . if_statement
    (8) statement -> . for
    (9) statement -> . expression
    (10) all_prints -> . print
    (11) all_prints -> . println
    (12) all_prints -> . printf
    (13) all_prints -> . fmt_print
    (14) all_prints -> . fmt_println
    (15) all_prints -> . fmt_printf
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (16) if_statement -> . IF assign block_statement ELSE block_statement
    (17) if_statement -> . IF assign block_statement
    (18) for -> . FOR assign block_statement
    (19) for -> . FOR assign ; expression ; statement block_statement
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (48) print -> . PRINT ( expression )
    (49) println -> . PRINTLN ( expression )
    (50) printf -> . PRINTF ( expression )
    (51) fmt_print -> . FMT_PRINT ( expression )
    (52) fmt_println -> . FMT_PRINTLN ( expression )
    (53) fmt_printf -> . FMT_PRINTF ( expression )
    (38) name -> . NAME
    (37) number -> . NUMBER
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    }               shift and go to state 129
    VAR             shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    PRINT           shift and go to state 29
    PRINTLN         shift and go to state 30
    PRINTF          shift and go to state 31
    FMT_PRINT       shift and go to state 32
    FMT_PRINTLN     shift and go to state 33
    FMT_PRINTF      shift and go to state 34
    NAME            shift and go to state 35
    NUMBER          shift and go to state 36
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    statement                      shift and go to state 39
    all_prints                     shift and go to state 4
    assign                         shift and go to state 5
    if_statement                   shift and go to state 6
    for                            shift and go to state 7
    expression                     shift and go to state 8
    print                          shift and go to state 9
    println                        shift and go to state 10
    printf                         shift and go to state 11
    fmt_print                      shift and go to state 12
    fmt_println                    shift and go to state 13
    fmt_printf                     shift and go to state 14
    name                           shift and go to state 15
    number                         shift and go to state 19
    string                         shift and go to state 22

state 115

    (19) for -> FOR assign ; expression . ; statement block_statement
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

    ;               shift and go to state 130
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51


state 116

    (54) expression -> ABS ( expression ) .

    PLUS            reduce using rule 54 (expression -> ABS ( expression ) .)
    MINUS           reduce using rule 54 (expression -> ABS ( expression ) .)
    TIMES           reduce using rule 54 (expression -> ABS ( expression ) .)
    DIVIDE          reduce using rule 54 (expression -> ABS ( expression ) .)
    MOD             reduce using rule 54 (expression -> ABS ( expression ) .)
    LT              reduce using rule 54 (expression -> ABS ( expression ) .)
    LE              reduce using rule 54 (expression -> ABS ( expression ) .)
    EQ              reduce using rule 54 (expression -> ABS ( expression ) .)
    NEQ             reduce using rule 54 (expression -> ABS ( expression ) .)
    GE              reduce using rule 54 (expression -> ABS ( expression ) .)
    GT              reduce using rule 54 (expression -> ABS ( expression ) .)
    ,               reduce using rule 54 (expression -> ABS ( expression ) .)
    VAR             reduce using rule 54 (expression -> ABS ( expression ) .)
    IF              reduce using rule 54 (expression -> ABS ( expression ) .)
    FOR             reduce using rule 54 (expression -> ABS ( expression ) .)
    (               reduce using rule 54 (expression -> ABS ( expression ) .)
    -               reduce using rule 54 (expression -> ABS ( expression ) .)
    ABS             reduce using rule 54 (expression -> ABS ( expression ) .)
    SIN             reduce using rule 54 (expression -> ABS ( expression ) .)
    COS             reduce using rule 54 (expression -> ABS ( expression ) .)
    TAN             reduce using rule 54 (expression -> ABS ( expression ) .)
    MIN             reduce using rule 54 (expression -> ABS ( expression ) .)
    MAX             reduce using rule 54 (expression -> ABS ( expression ) .)
    PRINT           reduce using rule 54 (expression -> ABS ( expression ) .)
    PRINTLN         reduce using rule 54 (expression -> ABS ( expression ) .)
    PRINTF          reduce using rule 54 (expression -> ABS ( expression ) .)
    FMT_PRINT       reduce using rule 54 (expression -> ABS ( expression ) .)
    FMT_PRINTLN     reduce using rule 54 (expression -> ABS ( expression ) .)
    FMT_PRINTF      reduce using rule 54 (expression -> ABS ( expression ) .)
    NAME            reduce using rule 54 (expression -> ABS ( expression ) .)
    NUMBER          reduce using rule 54 (expression -> ABS ( expression ) .)
    SQ_STRING       reduce using rule 54 (expression -> ABS ( expression ) .)
    DQ_STRING       reduce using rule 54 (expression -> ABS ( expression ) .)
    $end            reduce using rule 54 (expression -> ABS ( expression ) .)
    )               reduce using rule 54 (expression -> ABS ( expression ) .)
    {               reduce using rule 54 (expression -> ABS ( expression ) .)
    ;               reduce using rule 54 (expression -> ABS ( expression ) .)
    }               reduce using rule 54 (expression -> ABS ( expression ) .)


state 117

    (55) expression -> SIN ( expression ) .

    PLUS            reduce using rule 55 (expression -> SIN ( expression ) .)
    MINUS           reduce using rule 55 (expression -> SIN ( expression ) .)
    TIMES           reduce using rule 55 (expression -> SIN ( expression ) .)
    DIVIDE          reduce using rule 55 (expression -> SIN ( expression ) .)
    MOD             reduce using rule 55 (expression -> SIN ( expression ) .)
    LT              reduce using rule 55 (expression -> SIN ( expression ) .)
    LE              reduce using rule 55 (expression -> SIN ( expression ) .)
    EQ              reduce using rule 55 (expression -> SIN ( expression ) .)
    NEQ             reduce using rule 55 (expression -> SIN ( expression ) .)
    GE              reduce using rule 55 (expression -> SIN ( expression ) .)
    GT              reduce using rule 55 (expression -> SIN ( expression ) .)
    ,               reduce using rule 55 (expression -> SIN ( expression ) .)
    VAR             reduce using rule 55 (expression -> SIN ( expression ) .)
    IF              reduce using rule 55 (expression -> SIN ( expression ) .)
    FOR             reduce using rule 55 (expression -> SIN ( expression ) .)
    (               reduce using rule 55 (expression -> SIN ( expression ) .)
    -               reduce using rule 55 (expression -> SIN ( expression ) .)
    ABS             reduce using rule 55 (expression -> SIN ( expression ) .)
    SIN             reduce using rule 55 (expression -> SIN ( expression ) .)
    COS             reduce using rule 55 (expression -> SIN ( expression ) .)
    TAN             reduce using rule 55 (expression -> SIN ( expression ) .)
    MIN             reduce using rule 55 (expression -> SIN ( expression ) .)
    MAX             reduce using rule 55 (expression -> SIN ( expression ) .)
    PRINT           reduce using rule 55 (expression -> SIN ( expression ) .)
    PRINTLN         reduce using rule 55 (expression -> SIN ( expression ) .)
    PRINTF          reduce using rule 55 (expression -> SIN ( expression ) .)
    FMT_PRINT       reduce using rule 55 (expression -> SIN ( expression ) .)
    FMT_PRINTLN     reduce using rule 55 (expression -> SIN ( expression ) .)
    FMT_PRINTF      reduce using rule 55 (expression -> SIN ( expression ) .)
    NAME            reduce using rule 55 (expression -> SIN ( expression ) .)
    NUMBER          reduce using rule 55 (expression -> SIN ( expression ) .)
    SQ_STRING       reduce using rule 55 (expression -> SIN ( expression ) .)
    DQ_STRING       reduce using rule 55 (expression -> SIN ( expression ) .)
    $end            reduce using rule 55 (expression -> SIN ( expression ) .)
    )               reduce using rule 55 (expression -> SIN ( expression ) .)
    {               reduce using rule 55 (expression -> SIN ( expression ) .)
    ;               reduce using rule 55 (expression -> SIN ( expression ) .)
    }               reduce using rule 55 (expression -> SIN ( expression ) .)


state 118

    (56) expression -> COS ( expression ) .

    PLUS            reduce using rule 56 (expression -> COS ( expression ) .)
    MINUS           reduce using rule 56 (expression -> COS ( expression ) .)
    TIMES           reduce using rule 56 (expression -> COS ( expression ) .)
    DIVIDE          reduce using rule 56 (expression -> COS ( expression ) .)
    MOD             reduce using rule 56 (expression -> COS ( expression ) .)
    LT              reduce using rule 56 (expression -> COS ( expression ) .)
    LE              reduce using rule 56 (expression -> COS ( expression ) .)
    EQ              reduce using rule 56 (expression -> COS ( expression ) .)
    NEQ             reduce using rule 56 (expression -> COS ( expression ) .)
    GE              reduce using rule 56 (expression -> COS ( expression ) .)
    GT              reduce using rule 56 (expression -> COS ( expression ) .)
    ,               reduce using rule 56 (expression -> COS ( expression ) .)
    VAR             reduce using rule 56 (expression -> COS ( expression ) .)
    IF              reduce using rule 56 (expression -> COS ( expression ) .)
    FOR             reduce using rule 56 (expression -> COS ( expression ) .)
    (               reduce using rule 56 (expression -> COS ( expression ) .)
    -               reduce using rule 56 (expression -> COS ( expression ) .)
    ABS             reduce using rule 56 (expression -> COS ( expression ) .)
    SIN             reduce using rule 56 (expression -> COS ( expression ) .)
    COS             reduce using rule 56 (expression -> COS ( expression ) .)
    TAN             reduce using rule 56 (expression -> COS ( expression ) .)
    MIN             reduce using rule 56 (expression -> COS ( expression ) .)
    MAX             reduce using rule 56 (expression -> COS ( expression ) .)
    PRINT           reduce using rule 56 (expression -> COS ( expression ) .)
    PRINTLN         reduce using rule 56 (expression -> COS ( expression ) .)
    PRINTF          reduce using rule 56 (expression -> COS ( expression ) .)
    FMT_PRINT       reduce using rule 56 (expression -> COS ( expression ) .)
    FMT_PRINTLN     reduce using rule 56 (expression -> COS ( expression ) .)
    FMT_PRINTF      reduce using rule 56 (expression -> COS ( expression ) .)
    NAME            reduce using rule 56 (expression -> COS ( expression ) .)
    NUMBER          reduce using rule 56 (expression -> COS ( expression ) .)
    SQ_STRING       reduce using rule 56 (expression -> COS ( expression ) .)
    DQ_STRING       reduce using rule 56 (expression -> COS ( expression ) .)
    $end            reduce using rule 56 (expression -> COS ( expression ) .)
    )               reduce using rule 56 (expression -> COS ( expression ) .)
    {               reduce using rule 56 (expression -> COS ( expression ) .)
    ;               reduce using rule 56 (expression -> COS ( expression ) .)
    }               reduce using rule 56 (expression -> COS ( expression ) .)


state 119

    (57) expression -> TAN ( expression ) .

    PLUS            reduce using rule 57 (expression -> TAN ( expression ) .)
    MINUS           reduce using rule 57 (expression -> TAN ( expression ) .)
    TIMES           reduce using rule 57 (expression -> TAN ( expression ) .)
    DIVIDE          reduce using rule 57 (expression -> TAN ( expression ) .)
    MOD             reduce using rule 57 (expression -> TAN ( expression ) .)
    LT              reduce using rule 57 (expression -> TAN ( expression ) .)
    LE              reduce using rule 57 (expression -> TAN ( expression ) .)
    EQ              reduce using rule 57 (expression -> TAN ( expression ) .)
    NEQ             reduce using rule 57 (expression -> TAN ( expression ) .)
    GE              reduce using rule 57 (expression -> TAN ( expression ) .)
    GT              reduce using rule 57 (expression -> TAN ( expression ) .)
    ,               reduce using rule 57 (expression -> TAN ( expression ) .)
    VAR             reduce using rule 57 (expression -> TAN ( expression ) .)
    IF              reduce using rule 57 (expression -> TAN ( expression ) .)
    FOR             reduce using rule 57 (expression -> TAN ( expression ) .)
    (               reduce using rule 57 (expression -> TAN ( expression ) .)
    -               reduce using rule 57 (expression -> TAN ( expression ) .)
    ABS             reduce using rule 57 (expression -> TAN ( expression ) .)
    SIN             reduce using rule 57 (expression -> TAN ( expression ) .)
    COS             reduce using rule 57 (expression -> TAN ( expression ) .)
    TAN             reduce using rule 57 (expression -> TAN ( expression ) .)
    MIN             reduce using rule 57 (expression -> TAN ( expression ) .)
    MAX             reduce using rule 57 (expression -> TAN ( expression ) .)
    PRINT           reduce using rule 57 (expression -> TAN ( expression ) .)
    PRINTLN         reduce using rule 57 (expression -> TAN ( expression ) .)
    PRINTF          reduce using rule 57 (expression -> TAN ( expression ) .)
    FMT_PRINT       reduce using rule 57 (expression -> TAN ( expression ) .)
    FMT_PRINTLN     reduce using rule 57 (expression -> TAN ( expression ) .)
    FMT_PRINTF      reduce using rule 57 (expression -> TAN ( expression ) .)
    NAME            reduce using rule 57 (expression -> TAN ( expression ) .)
    NUMBER          reduce using rule 57 (expression -> TAN ( expression ) .)
    SQ_STRING       reduce using rule 57 (expression -> TAN ( expression ) .)
    DQ_STRING       reduce using rule 57 (expression -> TAN ( expression ) .)
    $end            reduce using rule 57 (expression -> TAN ( expression ) .)
    )               reduce using rule 57 (expression -> TAN ( expression ) .)
    {               reduce using rule 57 (expression -> TAN ( expression ) .)
    ;               reduce using rule 57 (expression -> TAN ( expression ) .)
    }               reduce using rule 57 (expression -> TAN ( expression ) .)


state 120

    (58) expression -> MIN ( expression , . expression )
    (34) expression -> expression , . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 131
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 121

    (59) expression -> MAX ( expression , . expression )
    (34) expression -> expression , . expression
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (37) number -> . NUMBER
    (38) name -> . NAME
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    NUMBER          shift and go to state 36
    NAME            shift and go to state 35
    VAR             shift and go to state 16
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    expression                     shift and go to state 132
    number                         shift and go to state 19
    name                           shift and go to state 62
    assign                         shift and go to state 63
    string                         shift and go to state 22

state 122

    (48) print -> PRINT ( expression ) .

    VAR             reduce using rule 48 (print -> PRINT ( expression ) .)
    IF              reduce using rule 48 (print -> PRINT ( expression ) .)
    FOR             reduce using rule 48 (print -> PRINT ( expression ) .)
    (               reduce using rule 48 (print -> PRINT ( expression ) .)
    -               reduce using rule 48 (print -> PRINT ( expression ) .)
    ABS             reduce using rule 48 (print -> PRINT ( expression ) .)
    SIN             reduce using rule 48 (print -> PRINT ( expression ) .)
    COS             reduce using rule 48 (print -> PRINT ( expression ) .)
    TAN             reduce using rule 48 (print -> PRINT ( expression ) .)
    MIN             reduce using rule 48 (print -> PRINT ( expression ) .)
    MAX             reduce using rule 48 (print -> PRINT ( expression ) .)
    PRINT           reduce using rule 48 (print -> PRINT ( expression ) .)
    PRINTLN         reduce using rule 48 (print -> PRINT ( expression ) .)
    PRINTF          reduce using rule 48 (print -> PRINT ( expression ) .)
    FMT_PRINT       reduce using rule 48 (print -> PRINT ( expression ) .)
    FMT_PRINTLN     reduce using rule 48 (print -> PRINT ( expression ) .)
    FMT_PRINTF      reduce using rule 48 (print -> PRINT ( expression ) .)
    NAME            reduce using rule 48 (print -> PRINT ( expression ) .)
    NUMBER          reduce using rule 48 (print -> PRINT ( expression ) .)
    SQ_STRING       reduce using rule 48 (print -> PRINT ( expression ) .)
    DQ_STRING       reduce using rule 48 (print -> PRINT ( expression ) .)
    $end            reduce using rule 48 (print -> PRINT ( expression ) .)
    }               reduce using rule 48 (print -> PRINT ( expression ) .)
    {               reduce using rule 48 (print -> PRINT ( expression ) .)


state 123

    (49) println -> PRINTLN ( expression ) .

    VAR             reduce using rule 49 (println -> PRINTLN ( expression ) .)
    IF              reduce using rule 49 (println -> PRINTLN ( expression ) .)
    FOR             reduce using rule 49 (println -> PRINTLN ( expression ) .)
    (               reduce using rule 49 (println -> PRINTLN ( expression ) .)
    -               reduce using rule 49 (println -> PRINTLN ( expression ) .)
    ABS             reduce using rule 49 (println -> PRINTLN ( expression ) .)
    SIN             reduce using rule 49 (println -> PRINTLN ( expression ) .)
    COS             reduce using rule 49 (println -> PRINTLN ( expression ) .)
    TAN             reduce using rule 49 (println -> PRINTLN ( expression ) .)
    MIN             reduce using rule 49 (println -> PRINTLN ( expression ) .)
    MAX             reduce using rule 49 (println -> PRINTLN ( expression ) .)
    PRINT           reduce using rule 49 (println -> PRINTLN ( expression ) .)
    PRINTLN         reduce using rule 49 (println -> PRINTLN ( expression ) .)
    PRINTF          reduce using rule 49 (println -> PRINTLN ( expression ) .)
    FMT_PRINT       reduce using rule 49 (println -> PRINTLN ( expression ) .)
    FMT_PRINTLN     reduce using rule 49 (println -> PRINTLN ( expression ) .)
    FMT_PRINTF      reduce using rule 49 (println -> PRINTLN ( expression ) .)
    NAME            reduce using rule 49 (println -> PRINTLN ( expression ) .)
    NUMBER          reduce using rule 49 (println -> PRINTLN ( expression ) .)
    SQ_STRING       reduce using rule 49 (println -> PRINTLN ( expression ) .)
    DQ_STRING       reduce using rule 49 (println -> PRINTLN ( expression ) .)
    $end            reduce using rule 49 (println -> PRINTLN ( expression ) .)
    }               reduce using rule 49 (println -> PRINTLN ( expression ) .)
    {               reduce using rule 49 (println -> PRINTLN ( expression ) .)


state 124

    (50) printf -> PRINTF ( expression ) .

    VAR             reduce using rule 50 (printf -> PRINTF ( expression ) .)
    IF              reduce using rule 50 (printf -> PRINTF ( expression ) .)
    FOR             reduce using rule 50 (printf -> PRINTF ( expression ) .)
    (               reduce using rule 50 (printf -> PRINTF ( expression ) .)
    -               reduce using rule 50 (printf -> PRINTF ( expression ) .)
    ABS             reduce using rule 50 (printf -> PRINTF ( expression ) .)
    SIN             reduce using rule 50 (printf -> PRINTF ( expression ) .)
    COS             reduce using rule 50 (printf -> PRINTF ( expression ) .)
    TAN             reduce using rule 50 (printf -> PRINTF ( expression ) .)
    MIN             reduce using rule 50 (printf -> PRINTF ( expression ) .)
    MAX             reduce using rule 50 (printf -> PRINTF ( expression ) .)
    PRINT           reduce using rule 50 (printf -> PRINTF ( expression ) .)
    PRINTLN         reduce using rule 50 (printf -> PRINTF ( expression ) .)
    PRINTF          reduce using rule 50 (printf -> PRINTF ( expression ) .)
    FMT_PRINT       reduce using rule 50 (printf -> PRINTF ( expression ) .)
    FMT_PRINTLN     reduce using rule 50 (printf -> PRINTF ( expression ) .)
    FMT_PRINTF      reduce using rule 50 (printf -> PRINTF ( expression ) .)
    NAME            reduce using rule 50 (printf -> PRINTF ( expression ) .)
    NUMBER          reduce using rule 50 (printf -> PRINTF ( expression ) .)
    SQ_STRING       reduce using rule 50 (printf -> PRINTF ( expression ) .)
    DQ_STRING       reduce using rule 50 (printf -> PRINTF ( expression ) .)
    $end            reduce using rule 50 (printf -> PRINTF ( expression ) .)
    }               reduce using rule 50 (printf -> PRINTF ( expression ) .)
    {               reduce using rule 50 (printf -> PRINTF ( expression ) .)


state 125

    (51) fmt_print -> FMT_PRINT ( expression ) .

    VAR             reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    IF              reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    FOR             reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    (               reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    -               reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    ABS             reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    SIN             reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    COS             reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    TAN             reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    MIN             reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    MAX             reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    PRINT           reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    PRINTLN         reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    PRINTF          reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    FMT_PRINT       reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    FMT_PRINTLN     reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    FMT_PRINTF      reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    NAME            reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    NUMBER          reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    SQ_STRING       reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    DQ_STRING       reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    $end            reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    }               reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)
    {               reduce using rule 51 (fmt_print -> FMT_PRINT ( expression ) .)


state 126

    (52) fmt_println -> FMT_PRINTLN ( expression ) .

    VAR             reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    IF              reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    FOR             reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    (               reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    -               reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    ABS             reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    SIN             reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    COS             reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    TAN             reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    MIN             reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    MAX             reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    PRINT           reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    PRINTLN         reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    PRINTF          reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    FMT_PRINT       reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    FMT_PRINTLN     reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    FMT_PRINTF      reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    NAME            reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    NUMBER          reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    SQ_STRING       reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    DQ_STRING       reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    $end            reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    }               reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)
    {               reduce using rule 52 (fmt_println -> FMT_PRINTLN ( expression ) .)


state 127

    (53) fmt_printf -> FMT_PRINTF ( expression ) .

    VAR             reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    IF              reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    FOR             reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    (               reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    -               reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    ABS             reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    SIN             reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    COS             reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    TAN             reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    MIN             reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    MAX             reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    PRINT           reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    PRINTLN         reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    PRINTF          reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    FMT_PRINT       reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    FMT_PRINTLN     reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    FMT_PRINTF      reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    NAME            reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    NUMBER          reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    SQ_STRING       reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    DQ_STRING       reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    $end            reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    }               reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)
    {               reduce using rule 53 (fmt_printf -> FMT_PRINTF ( expression ) .)


state 128

    (16) if_statement -> IF assign block_statement ELSE block_statement .

    VAR             reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    IF              reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    FOR             reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    (               reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    -               reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    ABS             reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    SIN             reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    COS             reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    TAN             reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    MIN             reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    MAX             reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    PRINT           reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    PRINTLN         reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    PRINTF          reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    FMT_PRINT       reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    FMT_PRINTLN     reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    FMT_PRINTF      reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    NAME            reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    NUMBER          reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    SQ_STRING       reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    DQ_STRING       reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    $end            reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    }               reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    {               reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)


state 129

    (4) block_statement -> { statement_list } .

    ELSE            reduce using rule 4 (block_statement -> { statement_list } .)
    VAR             reduce using rule 4 (block_statement -> { statement_list } .)
    IF              reduce using rule 4 (block_statement -> { statement_list } .)
    FOR             reduce using rule 4 (block_statement -> { statement_list } .)
    (               reduce using rule 4 (block_statement -> { statement_list } .)
    -               reduce using rule 4 (block_statement -> { statement_list } .)
    ABS             reduce using rule 4 (block_statement -> { statement_list } .)
    SIN             reduce using rule 4 (block_statement -> { statement_list } .)
    COS             reduce using rule 4 (block_statement -> { statement_list } .)
    TAN             reduce using rule 4 (block_statement -> { statement_list } .)
    MIN             reduce using rule 4 (block_statement -> { statement_list } .)
    MAX             reduce using rule 4 (block_statement -> { statement_list } .)
    PRINT           reduce using rule 4 (block_statement -> { statement_list } .)
    PRINTLN         reduce using rule 4 (block_statement -> { statement_list } .)
    PRINTF          reduce using rule 4 (block_statement -> { statement_list } .)
    FMT_PRINT       reduce using rule 4 (block_statement -> { statement_list } .)
    FMT_PRINTLN     reduce using rule 4 (block_statement -> { statement_list } .)
    FMT_PRINTF      reduce using rule 4 (block_statement -> { statement_list } .)
    NAME            reduce using rule 4 (block_statement -> { statement_list } .)
    NUMBER          reduce using rule 4 (block_statement -> { statement_list } .)
    SQ_STRING       reduce using rule 4 (block_statement -> { statement_list } .)
    DQ_STRING       reduce using rule 4 (block_statement -> { statement_list } .)
    $end            reduce using rule 4 (block_statement -> { statement_list } .)
    }               reduce using rule 4 (block_statement -> { statement_list } .)
    {               reduce using rule 4 (block_statement -> { statement_list } .)


state 130

    (19) for -> FOR assign ; expression ; . statement block_statement
    (5) statement -> . all_prints
    (6) statement -> . assign
    (7) statement -> . if_statement
    (8) statement -> . for
    (9) statement -> . expression
    (10) all_prints -> . print
    (11) all_prints -> . println
    (12) all_prints -> . printf
    (13) all_prints -> . fmt_print
    (14) all_prints -> . fmt_println
    (15) all_prints -> . fmt_printf
    (39) assign -> . name = expression
    (40) assign -> . VAR name = expression
    (41) assign -> . name GT expression
    (42) assign -> . name LT expression
    (43) assign -> . name LE expression
    (44) assign -> . name EQ expression
    (16) if_statement -> . IF assign block_statement ELSE block_statement
    (17) if_statement -> . IF assign block_statement
    (18) for -> . FOR assign block_statement
    (19) for -> . FOR assign ; expression ; statement block_statement
    (20) expression -> . number
    (21) expression -> . name
    (22) expression -> . assign
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MOD expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (30) expression -> . expression EQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression GE expression
    (33) expression -> . expression GT expression
    (34) expression -> . expression , expression
    (35) expression -> . ( expression )
    (36) expression -> . - expression
    (45) expression -> . string
    (54) expression -> . ABS ( expression )
    (55) expression -> . SIN ( expression )
    (56) expression -> . COS ( expression )
    (57) expression -> . TAN ( expression )
    (58) expression -> . MIN ( expression , expression )
    (59) expression -> . MAX ( expression , expression )
    (48) print -> . PRINT ( expression )
    (49) println -> . PRINTLN ( expression )
    (50) printf -> . PRINTF ( expression )
    (51) fmt_print -> . FMT_PRINT ( expression )
    (52) fmt_println -> . FMT_PRINTLN ( expression )
    (53) fmt_printf -> . FMT_PRINTF ( expression )
    (38) name -> . NAME
    (37) number -> . NUMBER
    (46) string -> . SQ_STRING
    (47) string -> . DQ_STRING

    VAR             shift and go to state 16
    IF              shift and go to state 17
    FOR             shift and go to state 18
    (               shift and go to state 20
    -               shift and go to state 21
    ABS             shift and go to state 23
    SIN             shift and go to state 24
    COS             shift and go to state 25
    TAN             shift and go to state 26
    MIN             shift and go to state 27
    MAX             shift and go to state 28
    PRINT           shift and go to state 29
    PRINTLN         shift and go to state 30
    PRINTF          shift and go to state 31
    FMT_PRINT       shift and go to state 32
    FMT_PRINTLN     shift and go to state 33
    FMT_PRINTF      shift and go to state 34
    NAME            shift and go to state 35
    NUMBER          shift and go to state 36
    SQ_STRING       shift and go to state 37
    DQ_STRING       shift and go to state 38

    assign                         shift and go to state 5
    expression                     shift and go to state 8
    statement                      shift and go to state 133
    all_prints                     shift and go to state 4
    if_statement                   shift and go to state 6
    for                            shift and go to state 7
    print                          shift and go to state 9
    println                        shift and go to state 10
    printf                         shift and go to state 11
    fmt_print                      shift and go to state 12
    fmt_println                    shift and go to state 13
    fmt_printf                     shift and go to state 14
    name                           shift and go to state 15
    number                         shift and go to state 19
    string                         shift and go to state 22

state 131

    (58) expression -> MIN ( expression , expression . )
    (34) expression -> expression , expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for , resolved as shift
    )               shift and go to state 134
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51

  ! ,               [ reduce using rule 34 (expression -> expression , expression .) ]
  ! PLUS            [ reduce using rule 34 (expression -> expression , expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression , expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression , expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression , expression .) ]
  ! MOD             [ reduce using rule 34 (expression -> expression , expression .) ]
  ! LT              [ reduce using rule 34 (expression -> expression , expression .) ]
  ! LE              [ reduce using rule 34 (expression -> expression , expression .) ]
  ! EQ              [ reduce using rule 34 (expression -> expression , expression .) ]
  ! NEQ             [ reduce using rule 34 (expression -> expression , expression .) ]
  ! GE              [ reduce using rule 34 (expression -> expression , expression .) ]
  ! GT              [ reduce using rule 34 (expression -> expression , expression .) ]


state 132

    (59) expression -> MAX ( expression , expression . )
    (34) expression -> expression , expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MOD expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (30) expression -> expression . EQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . GE expression
    (33) expression -> expression . GT expression
    (34) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for , resolved as shift
    )               shift and go to state 135
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MOD             shift and go to state 44
    LT              shift and go to state 45
    LE              shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    GE              shift and go to state 49
    GT              shift and go to state 50
    ,               shift and go to state 51

  ! ,               [ reduce using rule 34 (expression -> expression , expression .) ]
  ! PLUS            [ reduce using rule 34 (expression -> expression , expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression , expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression , expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression , expression .) ]
  ! MOD             [ reduce using rule 34 (expression -> expression , expression .) ]
  ! LT              [ reduce using rule 34 (expression -> expression , expression .) ]
  ! LE              [ reduce using rule 34 (expression -> expression , expression .) ]
  ! EQ              [ reduce using rule 34 (expression -> expression , expression .) ]
  ! NEQ             [ reduce using rule 34 (expression -> expression , expression .) ]
  ! GE              [ reduce using rule 34 (expression -> expression , expression .) ]
  ! GT              [ reduce using rule 34 (expression -> expression , expression .) ]


state 133

    (19) for -> FOR assign ; expression ; statement . block_statement
    (4) block_statement -> . { statement_list }

    {               shift and go to state 96

    block_statement                shift and go to state 136

state 134

    (58) expression -> MIN ( expression , expression ) .

    PLUS            reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    MINUS           reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    TIMES           reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    DIVIDE          reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    MOD             reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    LT              reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    LE              reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    EQ              reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    NEQ             reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    GE              reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    GT              reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    ,               reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    VAR             reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    IF              reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    FOR             reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    (               reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    -               reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    ABS             reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    SIN             reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    COS             reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    TAN             reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    MIN             reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    MAX             reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    PRINT           reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    PRINTLN         reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    PRINTF          reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    FMT_PRINT       reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    FMT_PRINTLN     reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    FMT_PRINTF      reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    NAME            reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    NUMBER          reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    SQ_STRING       reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    DQ_STRING       reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    $end            reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    )               reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    {               reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    ;               reduce using rule 58 (expression -> MIN ( expression , expression ) .)
    }               reduce using rule 58 (expression -> MIN ( expression , expression ) .)


state 135

    (59) expression -> MAX ( expression , expression ) .

    PLUS            reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    MINUS           reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    TIMES           reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    DIVIDE          reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    MOD             reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    LT              reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    LE              reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    EQ              reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    NEQ             reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    GE              reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    GT              reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    ,               reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    VAR             reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    IF              reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    FOR             reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    (               reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    -               reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    ABS             reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    SIN             reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    COS             reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    TAN             reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    MIN             reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    MAX             reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    PRINT           reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    PRINTLN         reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    PRINTF          reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    FMT_PRINT       reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    FMT_PRINTLN     reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    FMT_PRINTF      reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    NAME            reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    NUMBER          reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    SQ_STRING       reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    DQ_STRING       reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    $end            reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    )               reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    {               reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    ;               reduce using rule 59 (expression -> MAX ( expression , expression ) .)
    }               reduce using rule 59 (expression -> MAX ( expression , expression ) .)


state 136

    (19) for -> FOR assign ; expression ; statement block_statement .

    VAR             reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    IF              reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    FOR             reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    (               reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    -               reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    ABS             reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    SIN             reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    COS             reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    TAN             reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    MIN             reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    MAX             reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    PRINT           reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    PRINTLN         reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    PRINTF          reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    FMT_PRINT       reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    FMT_PRINTLN     reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    FMT_PRINTF      reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    NAME            reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    NUMBER          reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    SQ_STRING       reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    DQ_STRING       reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    $end            reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    }               reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)
    {               reduce using rule 19 (for -> FOR assign ; expression ; statement block_statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LT in state 15 resolved as shift
WARNING: shift/reduce conflict for LE in state 15 resolved as shift
WARNING: shift/reduce conflict for EQ in state 15 resolved as shift
WARNING: shift/reduce conflict for GT in state 15 resolved as shift
WARNING: shift/reduce conflict for GT in state 62 resolved as shift
WARNING: shift/reduce conflict for LT in state 62 resolved as shift
WARNING: shift/reduce conflict for LE in state 62 resolved as shift
WARNING: shift/reduce conflict for EQ in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 88 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 88 resolved as shift
WARNING: shift/reduce conflict for MOD in state 88 resolved as shift
WARNING: shift/reduce conflict for LT in state 88 resolved as shift
WARNING: shift/reduce conflict for LE in state 88 resolved as shift
WARNING: shift/reduce conflict for EQ in state 88 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 88 resolved as shift
WARNING: shift/reduce conflict for GE in state 88 resolved as shift
WARNING: shift/reduce conflict for GT in state 88 resolved as shift
WARNING: shift/reduce conflict for , in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 89 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 89 resolved as shift
WARNING: shift/reduce conflict for MOD in state 89 resolved as shift
WARNING: shift/reduce conflict for LT in state 89 resolved as shift
WARNING: shift/reduce conflict for LE in state 89 resolved as shift
WARNING: shift/reduce conflict for EQ in state 89 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 89 resolved as shift
WARNING: shift/reduce conflict for GE in state 89 resolved as shift
WARNING: shift/reduce conflict for GT in state 89 resolved as shift
WARNING: shift/reduce conflict for , in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 112 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 112 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 112 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 112 resolved as shift
WARNING: shift/reduce conflict for MOD in state 112 resolved as shift
WARNING: shift/reduce conflict for LT in state 112 resolved as shift
WARNING: shift/reduce conflict for LE in state 112 resolved as shift
WARNING: shift/reduce conflict for EQ in state 112 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 112 resolved as shift
WARNING: shift/reduce conflict for GE in state 112 resolved as shift
WARNING: shift/reduce conflict for GT in state 112 resolved as shift
WARNING: shift/reduce conflict for , in state 112 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 131 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 131 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 131 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 131 resolved as shift
WARNING: shift/reduce conflict for MOD in state 131 resolved as shift
WARNING: shift/reduce conflict for LT in state 131 resolved as shift
WARNING: shift/reduce conflict for LE in state 131 resolved as shift
WARNING: shift/reduce conflict for EQ in state 131 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 131 resolved as shift
WARNING: shift/reduce conflict for GE in state 131 resolved as shift
WARNING: shift/reduce conflict for GT in state 131 resolved as shift
WARNING: shift/reduce conflict for , in state 131 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 132 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 132 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 132 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 132 resolved as shift
WARNING: shift/reduce conflict for MOD in state 132 resolved as shift
WARNING: shift/reduce conflict for LT in state 132 resolved as shift
WARNING: shift/reduce conflict for LE in state 132 resolved as shift
WARNING: shift/reduce conflict for EQ in state 132 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 132 resolved as shift
WARNING: shift/reduce conflict for GE in state 132 resolved as shift
WARNING: shift/reduce conflict for GT in state 132 resolved as shift
WARNING: shift/reduce conflict for , in state 132 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (statement -> assign)
WARNING: rejected rule (expression -> assign) in state 5
