Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FALSE
    TRUE
    UMINUS

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     block_statement -> { statement_list }
Rule 5     statement -> all_prints
Rule 6     statement -> assign
Rule 7     statement -> if_statement
Rule 8     statement -> for
Rule 9     statement -> expression
Rule 10    all_prints -> print
Rule 11    all_prints -> println
Rule 12    all_prints -> printf
Rule 13    all_prints -> fmt_print
Rule 14    all_prints -> fmt_println
Rule 15    all_prints -> fmt_printf
Rule 16    if_statement -> IF assign block_statement ELSE block_statement
Rule 17    for -> FOR assign block_statement
Rule 18    expression -> number
Rule 19    expression -> name
Rule 20    expression -> assign
Rule 21    expression -> expression PLUS expression
Rule 22    expression -> expression MINUS expression
Rule 23    expression -> expression TIMES expression
Rule 24    expression -> expression DIVIDE expression
Rule 25    expression -> expression MOD expression
Rule 26    expression -> expression LT expression
Rule 27    expression -> expression LE expression
Rule 28    expression -> expression EQ expression
Rule 29    expression -> expression NEQ expression
Rule 30    expression -> expression GE expression
Rule 31    expression -> expression GT expression
Rule 32    expression -> expression , expression
Rule 33    expression -> ( expression )
Rule 34    expression -> - expression
Rule 35    number -> NUMBER
Rule 36    name -> NAME
Rule 37    assign -> name = expression
Rule 38    assign -> name GT expression
Rule 39    assign -> name LT expression
Rule 40    expression -> string
Rule 41    string -> SQ_STRING
Rule 42    string -> DQ_STRING
Rule 43    print -> PRINT ( expression )
Rule 44    println -> PRINTLN ( expression )
Rule 45    printf -> PRINTF ( expression )
Rule 46    fmt_print -> FMT_PRINT ( expression )
Rule 47    fmt_println -> FMT_PRINTLN ( expression )
Rule 48    fmt_printf -> FMT_PRINTF ( expression )
Rule 49    expression -> ABS ( expression )
Rule 50    expression -> SIN ( expression )
Rule 51    expression -> COS ( expression )
Rule 52    expression -> TAN ( expression )
Rule 53    expression -> MIN ( expression , expression )
Rule 54    expression -> MAX ( expression , expression )

Terminals, with rules where they appear

(                    : 33 43 44 45 46 47 48 49 50 51 52 53 54
)                    : 33 43 44 45 46 47 48 49 50 51 52 53 54
,                    : 32 53 54
-                    : 34
=                    : 37
ABS                  : 49
COS                  : 51
DIVIDE               : 24
DQ_STRING            : 42
ELSE                 : 16
EQ                   : 28
FALSE                : 
FMT_PRINT            : 46
FMT_PRINTF           : 48
FMT_PRINTLN          : 47
FOR                  : 17
GE                   : 30
GT                   : 31 38
IF                   : 16
LE                   : 27
LT                   : 26 39
MAX                  : 54
MIN                  : 53
MINUS                : 22
MOD                  : 25
NAME                 : 36
NEQ                  : 29
NUMBER               : 35
PLUS                 : 21
PRINT                : 43
PRINTF               : 45
PRINTLN              : 44
SIN                  : 50
SQ_STRING            : 41
TAN                  : 52
TIMES                : 23
TRUE                 : 
UMINUS               : 
error                : 
{                    : 4
}                    : 4

Nonterminals, with rules where they appear

all_prints           : 5
assign               : 6 16 17 20
block_statement      : 16 16 17
expression           : 9 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 34 37 38 39 43 44 45 46 47 48 49 50 51 52 53 53 54 54
fmt_print            : 13
fmt_printf           : 15
fmt_println          : 14
for                  : 8
if_statement         : 7
name                 : 19 37 38 39
number               : 18
print                : 10
printf               : 12
println              : 11
program              : 0
statement            : 2 3
statement_list       : 1 2 4
string               : 40

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (5) statement -> . all_prints
    (6) statement -> . assign
    (7) statement -> . if_statement
    (8) statement -> . for
    (9) statement -> . expression
    (10) all_prints -> . print
    (11) all_prints -> . println
    (12) all_prints -> . printf
    (13) all_prints -> . fmt_print
    (14) all_prints -> . fmt_println
    (15) all_prints -> . fmt_printf
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (16) if_statement -> . IF assign block_statement ELSE block_statement
    (17) for -> . FOR assign block_statement
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (43) print -> . PRINT ( expression )
    (44) println -> . PRINTLN ( expression )
    (45) printf -> . PRINTF ( expression )
    (46) fmt_print -> . FMT_PRINT ( expression )
    (47) fmt_println -> . FMT_PRINTLN ( expression )
    (48) fmt_printf -> . FMT_PRINTF ( expression )
    (36) name -> . NAME
    (35) number -> . NUMBER
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    IF              shift and go to state 16
    FOR             shift and go to state 17
    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    PRINT           shift and go to state 28
    PRINTLN         shift and go to state 29
    PRINTF          shift and go to state 30
    FMT_PRINT       shift and go to state 31
    FMT_PRINTLN     shift and go to state 32
    FMT_PRINTF      shift and go to state 33
    NAME            shift and go to state 34
    NUMBER          shift and go to state 35
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    all_prints                     shift and go to state 4
    assign                         shift and go to state 5
    if_statement                   shift and go to state 6
    for                            shift and go to state 7
    expression                     shift and go to state 8
    print                          shift and go to state 9
    println                        shift and go to state 10
    printf                         shift and go to state 11
    fmt_print                      shift and go to state 12
    fmt_println                    shift and go to state 13
    fmt_printf                     shift and go to state 14
    name                           shift and go to state 15
    number                         shift and go to state 18
    string                         shift and go to state 21

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (5) statement -> . all_prints
    (6) statement -> . assign
    (7) statement -> . if_statement
    (8) statement -> . for
    (9) statement -> . expression
    (10) all_prints -> . print
    (11) all_prints -> . println
    (12) all_prints -> . printf
    (13) all_prints -> . fmt_print
    (14) all_prints -> . fmt_println
    (15) all_prints -> . fmt_printf
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (16) if_statement -> . IF assign block_statement ELSE block_statement
    (17) for -> . FOR assign block_statement
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (43) print -> . PRINT ( expression )
    (44) println -> . PRINTLN ( expression )
    (45) printf -> . PRINTF ( expression )
    (46) fmt_print -> . FMT_PRINT ( expression )
    (47) fmt_println -> . FMT_PRINTLN ( expression )
    (48) fmt_printf -> . FMT_PRINTF ( expression )
    (36) name -> . NAME
    (35) number -> . NUMBER
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    $end            reduce using rule 1 (program -> statement_list .)
    IF              shift and go to state 16
    FOR             shift and go to state 17
    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    PRINT           shift and go to state 28
    PRINTLN         shift and go to state 29
    PRINTF          shift and go to state 30
    FMT_PRINT       shift and go to state 31
    FMT_PRINTLN     shift and go to state 32
    FMT_PRINTF      shift and go to state 33
    NAME            shift and go to state 34
    NUMBER          shift and go to state 35
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    statement                      shift and go to state 38
    all_prints                     shift and go to state 4
    assign                         shift and go to state 5
    if_statement                   shift and go to state 6
    for                            shift and go to state 7
    expression                     shift and go to state 8
    print                          shift and go to state 9
    println                        shift and go to state 10
    printf                         shift and go to state 11
    fmt_print                      shift and go to state 12
    fmt_println                    shift and go to state 13
    fmt_printf                     shift and go to state 14
    name                           shift and go to state 15
    number                         shift and go to state 18
    string                         shift and go to state 21

state 3

    (3) statement_list -> statement .

    IF              reduce using rule 3 (statement_list -> statement .)
    FOR             reduce using rule 3 (statement_list -> statement .)
    (               reduce using rule 3 (statement_list -> statement .)
    -               reduce using rule 3 (statement_list -> statement .)
    ABS             reduce using rule 3 (statement_list -> statement .)
    SIN             reduce using rule 3 (statement_list -> statement .)
    COS             reduce using rule 3 (statement_list -> statement .)
    TAN             reduce using rule 3 (statement_list -> statement .)
    MIN             reduce using rule 3 (statement_list -> statement .)
    MAX             reduce using rule 3 (statement_list -> statement .)
    PRINT           reduce using rule 3 (statement_list -> statement .)
    PRINTLN         reduce using rule 3 (statement_list -> statement .)
    PRINTF          reduce using rule 3 (statement_list -> statement .)
    FMT_PRINT       reduce using rule 3 (statement_list -> statement .)
    FMT_PRINTLN     reduce using rule 3 (statement_list -> statement .)
    FMT_PRINTF      reduce using rule 3 (statement_list -> statement .)
    NAME            reduce using rule 3 (statement_list -> statement .)
    NUMBER          reduce using rule 3 (statement_list -> statement .)
    SQ_STRING       reduce using rule 3 (statement_list -> statement .)
    DQ_STRING       reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    }               reduce using rule 3 (statement_list -> statement .)


state 4

    (5) statement -> all_prints .

    IF              reduce using rule 5 (statement -> all_prints .)
    FOR             reduce using rule 5 (statement -> all_prints .)
    (               reduce using rule 5 (statement -> all_prints .)
    -               reduce using rule 5 (statement -> all_prints .)
    ABS             reduce using rule 5 (statement -> all_prints .)
    SIN             reduce using rule 5 (statement -> all_prints .)
    COS             reduce using rule 5 (statement -> all_prints .)
    TAN             reduce using rule 5 (statement -> all_prints .)
    MIN             reduce using rule 5 (statement -> all_prints .)
    MAX             reduce using rule 5 (statement -> all_prints .)
    PRINT           reduce using rule 5 (statement -> all_prints .)
    PRINTLN         reduce using rule 5 (statement -> all_prints .)
    PRINTF          reduce using rule 5 (statement -> all_prints .)
    FMT_PRINT       reduce using rule 5 (statement -> all_prints .)
    FMT_PRINTLN     reduce using rule 5 (statement -> all_prints .)
    FMT_PRINTF      reduce using rule 5 (statement -> all_prints .)
    NAME            reduce using rule 5 (statement -> all_prints .)
    NUMBER          reduce using rule 5 (statement -> all_prints .)
    SQ_STRING       reduce using rule 5 (statement -> all_prints .)
    DQ_STRING       reduce using rule 5 (statement -> all_prints .)
    $end            reduce using rule 5 (statement -> all_prints .)
    }               reduce using rule 5 (statement -> all_prints .)


state 5

    (6) statement -> assign .
    (20) expression -> assign .

  ! reduce/reduce conflict for IF resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for FOR resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for ( resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for - resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for ABS resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for SIN resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for COS resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for TAN resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for MIN resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for MAX resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for PRINT resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for PRINTF resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for FMT_PRINT resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for FMT_PRINTLN resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for FMT_PRINTF resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for NAME resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for NUMBER resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for SQ_STRING resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for DQ_STRING resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for $end resolved using rule 6 (statement -> assign .)
  ! reduce/reduce conflict for } resolved using rule 6 (statement -> assign .)
    IF              reduce using rule 6 (statement -> assign .)
    FOR             reduce using rule 6 (statement -> assign .)
    (               reduce using rule 6 (statement -> assign .)
    -               reduce using rule 6 (statement -> assign .)
    ABS             reduce using rule 6 (statement -> assign .)
    SIN             reduce using rule 6 (statement -> assign .)
    COS             reduce using rule 6 (statement -> assign .)
    TAN             reduce using rule 6 (statement -> assign .)
    MIN             reduce using rule 6 (statement -> assign .)
    MAX             reduce using rule 6 (statement -> assign .)
    PRINT           reduce using rule 6 (statement -> assign .)
    PRINTLN         reduce using rule 6 (statement -> assign .)
    PRINTF          reduce using rule 6 (statement -> assign .)
    FMT_PRINT       reduce using rule 6 (statement -> assign .)
    FMT_PRINTLN     reduce using rule 6 (statement -> assign .)
    FMT_PRINTF      reduce using rule 6 (statement -> assign .)
    NAME            reduce using rule 6 (statement -> assign .)
    NUMBER          reduce using rule 6 (statement -> assign .)
    SQ_STRING       reduce using rule 6 (statement -> assign .)
    DQ_STRING       reduce using rule 6 (statement -> assign .)
    $end            reduce using rule 6 (statement -> assign .)
    }               reduce using rule 6 (statement -> assign .)
    PLUS            reduce using rule 20 (expression -> assign .)
    MINUS           reduce using rule 20 (expression -> assign .)
    TIMES           reduce using rule 20 (expression -> assign .)
    DIVIDE          reduce using rule 20 (expression -> assign .)
    MOD             reduce using rule 20 (expression -> assign .)
    LT              reduce using rule 20 (expression -> assign .)
    LE              reduce using rule 20 (expression -> assign .)
    EQ              reduce using rule 20 (expression -> assign .)
    NEQ             reduce using rule 20 (expression -> assign .)
    GE              reduce using rule 20 (expression -> assign .)
    GT              reduce using rule 20 (expression -> assign .)
    ,               reduce using rule 20 (expression -> assign .)

  ! IF              [ reduce using rule 20 (expression -> assign .) ]
  ! FOR             [ reduce using rule 20 (expression -> assign .) ]
  ! (               [ reduce using rule 20 (expression -> assign .) ]
  ! -               [ reduce using rule 20 (expression -> assign .) ]
  ! ABS             [ reduce using rule 20 (expression -> assign .) ]
  ! SIN             [ reduce using rule 20 (expression -> assign .) ]
  ! COS             [ reduce using rule 20 (expression -> assign .) ]
  ! TAN             [ reduce using rule 20 (expression -> assign .) ]
  ! MIN             [ reduce using rule 20 (expression -> assign .) ]
  ! MAX             [ reduce using rule 20 (expression -> assign .) ]
  ! PRINT           [ reduce using rule 20 (expression -> assign .) ]
  ! PRINTLN         [ reduce using rule 20 (expression -> assign .) ]
  ! PRINTF          [ reduce using rule 20 (expression -> assign .) ]
  ! FMT_PRINT       [ reduce using rule 20 (expression -> assign .) ]
  ! FMT_PRINTLN     [ reduce using rule 20 (expression -> assign .) ]
  ! FMT_PRINTF      [ reduce using rule 20 (expression -> assign .) ]
  ! NAME            [ reduce using rule 20 (expression -> assign .) ]
  ! NUMBER          [ reduce using rule 20 (expression -> assign .) ]
  ! SQ_STRING       [ reduce using rule 20 (expression -> assign .) ]
  ! DQ_STRING       [ reduce using rule 20 (expression -> assign .) ]
  ! $end            [ reduce using rule 20 (expression -> assign .) ]
  ! }               [ reduce using rule 20 (expression -> assign .) ]


state 6

    (7) statement -> if_statement .

    IF              reduce using rule 7 (statement -> if_statement .)
    FOR             reduce using rule 7 (statement -> if_statement .)
    (               reduce using rule 7 (statement -> if_statement .)
    -               reduce using rule 7 (statement -> if_statement .)
    ABS             reduce using rule 7 (statement -> if_statement .)
    SIN             reduce using rule 7 (statement -> if_statement .)
    COS             reduce using rule 7 (statement -> if_statement .)
    TAN             reduce using rule 7 (statement -> if_statement .)
    MIN             reduce using rule 7 (statement -> if_statement .)
    MAX             reduce using rule 7 (statement -> if_statement .)
    PRINT           reduce using rule 7 (statement -> if_statement .)
    PRINTLN         reduce using rule 7 (statement -> if_statement .)
    PRINTF          reduce using rule 7 (statement -> if_statement .)
    FMT_PRINT       reduce using rule 7 (statement -> if_statement .)
    FMT_PRINTLN     reduce using rule 7 (statement -> if_statement .)
    FMT_PRINTF      reduce using rule 7 (statement -> if_statement .)
    NAME            reduce using rule 7 (statement -> if_statement .)
    NUMBER          reduce using rule 7 (statement -> if_statement .)
    SQ_STRING       reduce using rule 7 (statement -> if_statement .)
    DQ_STRING       reduce using rule 7 (statement -> if_statement .)
    $end            reduce using rule 7 (statement -> if_statement .)
    }               reduce using rule 7 (statement -> if_statement .)


state 7

    (8) statement -> for .

    IF              reduce using rule 8 (statement -> for .)
    FOR             reduce using rule 8 (statement -> for .)
    (               reduce using rule 8 (statement -> for .)
    -               reduce using rule 8 (statement -> for .)
    ABS             reduce using rule 8 (statement -> for .)
    SIN             reduce using rule 8 (statement -> for .)
    COS             reduce using rule 8 (statement -> for .)
    TAN             reduce using rule 8 (statement -> for .)
    MIN             reduce using rule 8 (statement -> for .)
    MAX             reduce using rule 8 (statement -> for .)
    PRINT           reduce using rule 8 (statement -> for .)
    PRINTLN         reduce using rule 8 (statement -> for .)
    PRINTF          reduce using rule 8 (statement -> for .)
    FMT_PRINT       reduce using rule 8 (statement -> for .)
    FMT_PRINTLN     reduce using rule 8 (statement -> for .)
    FMT_PRINTF      reduce using rule 8 (statement -> for .)
    NAME            reduce using rule 8 (statement -> for .)
    NUMBER          reduce using rule 8 (statement -> for .)
    SQ_STRING       reduce using rule 8 (statement -> for .)
    DQ_STRING       reduce using rule 8 (statement -> for .)
    $end            reduce using rule 8 (statement -> for .)
    }               reduce using rule 8 (statement -> for .)


state 8

    (9) statement -> expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    IF              reduce using rule 9 (statement -> expression .)
    FOR             reduce using rule 9 (statement -> expression .)
    (               reduce using rule 9 (statement -> expression .)
    -               reduce using rule 9 (statement -> expression .)
    ABS             reduce using rule 9 (statement -> expression .)
    SIN             reduce using rule 9 (statement -> expression .)
    COS             reduce using rule 9 (statement -> expression .)
    TAN             reduce using rule 9 (statement -> expression .)
    MIN             reduce using rule 9 (statement -> expression .)
    MAX             reduce using rule 9 (statement -> expression .)
    PRINT           reduce using rule 9 (statement -> expression .)
    PRINTLN         reduce using rule 9 (statement -> expression .)
    PRINTF          reduce using rule 9 (statement -> expression .)
    FMT_PRINT       reduce using rule 9 (statement -> expression .)
    FMT_PRINTLN     reduce using rule 9 (statement -> expression .)
    FMT_PRINTF      reduce using rule 9 (statement -> expression .)
    NAME            reduce using rule 9 (statement -> expression .)
    NUMBER          reduce using rule 9 (statement -> expression .)
    SQ_STRING       reduce using rule 9 (statement -> expression .)
    DQ_STRING       reduce using rule 9 (statement -> expression .)
    $end            reduce using rule 9 (statement -> expression .)
    }               reduce using rule 9 (statement -> expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50


state 9

    (10) all_prints -> print .

    IF              reduce using rule 10 (all_prints -> print .)
    FOR             reduce using rule 10 (all_prints -> print .)
    (               reduce using rule 10 (all_prints -> print .)
    -               reduce using rule 10 (all_prints -> print .)
    ABS             reduce using rule 10 (all_prints -> print .)
    SIN             reduce using rule 10 (all_prints -> print .)
    COS             reduce using rule 10 (all_prints -> print .)
    TAN             reduce using rule 10 (all_prints -> print .)
    MIN             reduce using rule 10 (all_prints -> print .)
    MAX             reduce using rule 10 (all_prints -> print .)
    PRINT           reduce using rule 10 (all_prints -> print .)
    PRINTLN         reduce using rule 10 (all_prints -> print .)
    PRINTF          reduce using rule 10 (all_prints -> print .)
    FMT_PRINT       reduce using rule 10 (all_prints -> print .)
    FMT_PRINTLN     reduce using rule 10 (all_prints -> print .)
    FMT_PRINTF      reduce using rule 10 (all_prints -> print .)
    NAME            reduce using rule 10 (all_prints -> print .)
    NUMBER          reduce using rule 10 (all_prints -> print .)
    SQ_STRING       reduce using rule 10 (all_prints -> print .)
    DQ_STRING       reduce using rule 10 (all_prints -> print .)
    $end            reduce using rule 10 (all_prints -> print .)
    }               reduce using rule 10 (all_prints -> print .)


state 10

    (11) all_prints -> println .

    IF              reduce using rule 11 (all_prints -> println .)
    FOR             reduce using rule 11 (all_prints -> println .)
    (               reduce using rule 11 (all_prints -> println .)
    -               reduce using rule 11 (all_prints -> println .)
    ABS             reduce using rule 11 (all_prints -> println .)
    SIN             reduce using rule 11 (all_prints -> println .)
    COS             reduce using rule 11 (all_prints -> println .)
    TAN             reduce using rule 11 (all_prints -> println .)
    MIN             reduce using rule 11 (all_prints -> println .)
    MAX             reduce using rule 11 (all_prints -> println .)
    PRINT           reduce using rule 11 (all_prints -> println .)
    PRINTLN         reduce using rule 11 (all_prints -> println .)
    PRINTF          reduce using rule 11 (all_prints -> println .)
    FMT_PRINT       reduce using rule 11 (all_prints -> println .)
    FMT_PRINTLN     reduce using rule 11 (all_prints -> println .)
    FMT_PRINTF      reduce using rule 11 (all_prints -> println .)
    NAME            reduce using rule 11 (all_prints -> println .)
    NUMBER          reduce using rule 11 (all_prints -> println .)
    SQ_STRING       reduce using rule 11 (all_prints -> println .)
    DQ_STRING       reduce using rule 11 (all_prints -> println .)
    $end            reduce using rule 11 (all_prints -> println .)
    }               reduce using rule 11 (all_prints -> println .)


state 11

    (12) all_prints -> printf .

    IF              reduce using rule 12 (all_prints -> printf .)
    FOR             reduce using rule 12 (all_prints -> printf .)
    (               reduce using rule 12 (all_prints -> printf .)
    -               reduce using rule 12 (all_prints -> printf .)
    ABS             reduce using rule 12 (all_prints -> printf .)
    SIN             reduce using rule 12 (all_prints -> printf .)
    COS             reduce using rule 12 (all_prints -> printf .)
    TAN             reduce using rule 12 (all_prints -> printf .)
    MIN             reduce using rule 12 (all_prints -> printf .)
    MAX             reduce using rule 12 (all_prints -> printf .)
    PRINT           reduce using rule 12 (all_prints -> printf .)
    PRINTLN         reduce using rule 12 (all_prints -> printf .)
    PRINTF          reduce using rule 12 (all_prints -> printf .)
    FMT_PRINT       reduce using rule 12 (all_prints -> printf .)
    FMT_PRINTLN     reduce using rule 12 (all_prints -> printf .)
    FMT_PRINTF      reduce using rule 12 (all_prints -> printf .)
    NAME            reduce using rule 12 (all_prints -> printf .)
    NUMBER          reduce using rule 12 (all_prints -> printf .)
    SQ_STRING       reduce using rule 12 (all_prints -> printf .)
    DQ_STRING       reduce using rule 12 (all_prints -> printf .)
    $end            reduce using rule 12 (all_prints -> printf .)
    }               reduce using rule 12 (all_prints -> printf .)


state 12

    (13) all_prints -> fmt_print .

    IF              reduce using rule 13 (all_prints -> fmt_print .)
    FOR             reduce using rule 13 (all_prints -> fmt_print .)
    (               reduce using rule 13 (all_prints -> fmt_print .)
    -               reduce using rule 13 (all_prints -> fmt_print .)
    ABS             reduce using rule 13 (all_prints -> fmt_print .)
    SIN             reduce using rule 13 (all_prints -> fmt_print .)
    COS             reduce using rule 13 (all_prints -> fmt_print .)
    TAN             reduce using rule 13 (all_prints -> fmt_print .)
    MIN             reduce using rule 13 (all_prints -> fmt_print .)
    MAX             reduce using rule 13 (all_prints -> fmt_print .)
    PRINT           reduce using rule 13 (all_prints -> fmt_print .)
    PRINTLN         reduce using rule 13 (all_prints -> fmt_print .)
    PRINTF          reduce using rule 13 (all_prints -> fmt_print .)
    FMT_PRINT       reduce using rule 13 (all_prints -> fmt_print .)
    FMT_PRINTLN     reduce using rule 13 (all_prints -> fmt_print .)
    FMT_PRINTF      reduce using rule 13 (all_prints -> fmt_print .)
    NAME            reduce using rule 13 (all_prints -> fmt_print .)
    NUMBER          reduce using rule 13 (all_prints -> fmt_print .)
    SQ_STRING       reduce using rule 13 (all_prints -> fmt_print .)
    DQ_STRING       reduce using rule 13 (all_prints -> fmt_print .)
    $end            reduce using rule 13 (all_prints -> fmt_print .)
    }               reduce using rule 13 (all_prints -> fmt_print .)


state 13

    (14) all_prints -> fmt_println .

    IF              reduce using rule 14 (all_prints -> fmt_println .)
    FOR             reduce using rule 14 (all_prints -> fmt_println .)
    (               reduce using rule 14 (all_prints -> fmt_println .)
    -               reduce using rule 14 (all_prints -> fmt_println .)
    ABS             reduce using rule 14 (all_prints -> fmt_println .)
    SIN             reduce using rule 14 (all_prints -> fmt_println .)
    COS             reduce using rule 14 (all_prints -> fmt_println .)
    TAN             reduce using rule 14 (all_prints -> fmt_println .)
    MIN             reduce using rule 14 (all_prints -> fmt_println .)
    MAX             reduce using rule 14 (all_prints -> fmt_println .)
    PRINT           reduce using rule 14 (all_prints -> fmt_println .)
    PRINTLN         reduce using rule 14 (all_prints -> fmt_println .)
    PRINTF          reduce using rule 14 (all_prints -> fmt_println .)
    FMT_PRINT       reduce using rule 14 (all_prints -> fmt_println .)
    FMT_PRINTLN     reduce using rule 14 (all_prints -> fmt_println .)
    FMT_PRINTF      reduce using rule 14 (all_prints -> fmt_println .)
    NAME            reduce using rule 14 (all_prints -> fmt_println .)
    NUMBER          reduce using rule 14 (all_prints -> fmt_println .)
    SQ_STRING       reduce using rule 14 (all_prints -> fmt_println .)
    DQ_STRING       reduce using rule 14 (all_prints -> fmt_println .)
    $end            reduce using rule 14 (all_prints -> fmt_println .)
    }               reduce using rule 14 (all_prints -> fmt_println .)


state 14

    (15) all_prints -> fmt_printf .

    IF              reduce using rule 15 (all_prints -> fmt_printf .)
    FOR             reduce using rule 15 (all_prints -> fmt_printf .)
    (               reduce using rule 15 (all_prints -> fmt_printf .)
    -               reduce using rule 15 (all_prints -> fmt_printf .)
    ABS             reduce using rule 15 (all_prints -> fmt_printf .)
    SIN             reduce using rule 15 (all_prints -> fmt_printf .)
    COS             reduce using rule 15 (all_prints -> fmt_printf .)
    TAN             reduce using rule 15 (all_prints -> fmt_printf .)
    MIN             reduce using rule 15 (all_prints -> fmt_printf .)
    MAX             reduce using rule 15 (all_prints -> fmt_printf .)
    PRINT           reduce using rule 15 (all_prints -> fmt_printf .)
    PRINTLN         reduce using rule 15 (all_prints -> fmt_printf .)
    PRINTF          reduce using rule 15 (all_prints -> fmt_printf .)
    FMT_PRINT       reduce using rule 15 (all_prints -> fmt_printf .)
    FMT_PRINTLN     reduce using rule 15 (all_prints -> fmt_printf .)
    FMT_PRINTF      reduce using rule 15 (all_prints -> fmt_printf .)
    NAME            reduce using rule 15 (all_prints -> fmt_printf .)
    NUMBER          reduce using rule 15 (all_prints -> fmt_printf .)
    SQ_STRING       reduce using rule 15 (all_prints -> fmt_printf .)
    DQ_STRING       reduce using rule 15 (all_prints -> fmt_printf .)
    $end            reduce using rule 15 (all_prints -> fmt_printf .)
    }               reduce using rule 15 (all_prints -> fmt_printf .)


state 15

    (37) assign -> name . = expression
    (38) assign -> name . GT expression
    (39) assign -> name . LT expression
    (19) expression -> name .

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
    =               shift and go to state 51
    GT              shift and go to state 52
    LT              shift and go to state 53
    PLUS            reduce using rule 19 (expression -> name .)
    MINUS           reduce using rule 19 (expression -> name .)
    TIMES           reduce using rule 19 (expression -> name .)
    DIVIDE          reduce using rule 19 (expression -> name .)
    MOD             reduce using rule 19 (expression -> name .)
    LE              reduce using rule 19 (expression -> name .)
    EQ              reduce using rule 19 (expression -> name .)
    NEQ             reduce using rule 19 (expression -> name .)
    GE              reduce using rule 19 (expression -> name .)
    ,               reduce using rule 19 (expression -> name .)
    IF              reduce using rule 19 (expression -> name .)
    FOR             reduce using rule 19 (expression -> name .)
    (               reduce using rule 19 (expression -> name .)
    -               reduce using rule 19 (expression -> name .)
    ABS             reduce using rule 19 (expression -> name .)
    SIN             reduce using rule 19 (expression -> name .)
    COS             reduce using rule 19 (expression -> name .)
    TAN             reduce using rule 19 (expression -> name .)
    MIN             reduce using rule 19 (expression -> name .)
    MAX             reduce using rule 19 (expression -> name .)
    PRINT           reduce using rule 19 (expression -> name .)
    PRINTLN         reduce using rule 19 (expression -> name .)
    PRINTF          reduce using rule 19 (expression -> name .)
    FMT_PRINT       reduce using rule 19 (expression -> name .)
    FMT_PRINTLN     reduce using rule 19 (expression -> name .)
    FMT_PRINTF      reduce using rule 19 (expression -> name .)
    NAME            reduce using rule 19 (expression -> name .)
    NUMBER          reduce using rule 19 (expression -> name .)
    SQ_STRING       reduce using rule 19 (expression -> name .)
    DQ_STRING       reduce using rule 19 (expression -> name .)
    $end            reduce using rule 19 (expression -> name .)
    }               reduce using rule 19 (expression -> name .)

  ! LT              [ reduce using rule 19 (expression -> name .) ]
  ! GT              [ reduce using rule 19 (expression -> name .) ]


state 16

    (16) if_statement -> IF . assign block_statement ELSE block_statement
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (36) name -> . NAME

    NAME            shift and go to state 34

    assign                         shift and go to state 54
    name                           shift and go to state 55

state 17

    (17) for -> FOR . assign block_statement
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (36) name -> . NAME

    NAME            shift and go to state 34

    assign                         shift and go to state 56
    name                           shift and go to state 55

state 18

    (18) expression -> number .

    PLUS            reduce using rule 18 (expression -> number .)
    MINUS           reduce using rule 18 (expression -> number .)
    TIMES           reduce using rule 18 (expression -> number .)
    DIVIDE          reduce using rule 18 (expression -> number .)
    MOD             reduce using rule 18 (expression -> number .)
    LT              reduce using rule 18 (expression -> number .)
    LE              reduce using rule 18 (expression -> number .)
    EQ              reduce using rule 18 (expression -> number .)
    NEQ             reduce using rule 18 (expression -> number .)
    GE              reduce using rule 18 (expression -> number .)
    GT              reduce using rule 18 (expression -> number .)
    ,               reduce using rule 18 (expression -> number .)
    IF              reduce using rule 18 (expression -> number .)
    FOR             reduce using rule 18 (expression -> number .)
    (               reduce using rule 18 (expression -> number .)
    -               reduce using rule 18 (expression -> number .)
    ABS             reduce using rule 18 (expression -> number .)
    SIN             reduce using rule 18 (expression -> number .)
    COS             reduce using rule 18 (expression -> number .)
    TAN             reduce using rule 18 (expression -> number .)
    MIN             reduce using rule 18 (expression -> number .)
    MAX             reduce using rule 18 (expression -> number .)
    PRINT           reduce using rule 18 (expression -> number .)
    PRINTLN         reduce using rule 18 (expression -> number .)
    PRINTF          reduce using rule 18 (expression -> number .)
    FMT_PRINT       reduce using rule 18 (expression -> number .)
    FMT_PRINTLN     reduce using rule 18 (expression -> number .)
    FMT_PRINTF      reduce using rule 18 (expression -> number .)
    NAME            reduce using rule 18 (expression -> number .)
    NUMBER          reduce using rule 18 (expression -> number .)
    SQ_STRING       reduce using rule 18 (expression -> number .)
    DQ_STRING       reduce using rule 18 (expression -> number .)
    $end            reduce using rule 18 (expression -> number .)
    )               reduce using rule 18 (expression -> number .)
    {               reduce using rule 18 (expression -> number .)
    }               reduce using rule 18 (expression -> number .)


state 19

    (33) expression -> ( . expression )
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 57
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 20

    (34) expression -> - . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 60
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 21

    (40) expression -> string .

    PLUS            reduce using rule 40 (expression -> string .)
    MINUS           reduce using rule 40 (expression -> string .)
    TIMES           reduce using rule 40 (expression -> string .)
    DIVIDE          reduce using rule 40 (expression -> string .)
    MOD             reduce using rule 40 (expression -> string .)
    LT              reduce using rule 40 (expression -> string .)
    LE              reduce using rule 40 (expression -> string .)
    EQ              reduce using rule 40 (expression -> string .)
    NEQ             reduce using rule 40 (expression -> string .)
    GE              reduce using rule 40 (expression -> string .)
    GT              reduce using rule 40 (expression -> string .)
    ,               reduce using rule 40 (expression -> string .)
    IF              reduce using rule 40 (expression -> string .)
    FOR             reduce using rule 40 (expression -> string .)
    (               reduce using rule 40 (expression -> string .)
    -               reduce using rule 40 (expression -> string .)
    ABS             reduce using rule 40 (expression -> string .)
    SIN             reduce using rule 40 (expression -> string .)
    COS             reduce using rule 40 (expression -> string .)
    TAN             reduce using rule 40 (expression -> string .)
    MIN             reduce using rule 40 (expression -> string .)
    MAX             reduce using rule 40 (expression -> string .)
    PRINT           reduce using rule 40 (expression -> string .)
    PRINTLN         reduce using rule 40 (expression -> string .)
    PRINTF          reduce using rule 40 (expression -> string .)
    FMT_PRINT       reduce using rule 40 (expression -> string .)
    FMT_PRINTLN     reduce using rule 40 (expression -> string .)
    FMT_PRINTF      reduce using rule 40 (expression -> string .)
    NAME            reduce using rule 40 (expression -> string .)
    NUMBER          reduce using rule 40 (expression -> string .)
    SQ_STRING       reduce using rule 40 (expression -> string .)
    DQ_STRING       reduce using rule 40 (expression -> string .)
    $end            reduce using rule 40 (expression -> string .)
    )               reduce using rule 40 (expression -> string .)
    {               reduce using rule 40 (expression -> string .)
    }               reduce using rule 40 (expression -> string .)


state 22

    (49) expression -> ABS . ( expression )

    (               shift and go to state 61


state 23

    (50) expression -> SIN . ( expression )

    (               shift and go to state 62


state 24

    (51) expression -> COS . ( expression )

    (               shift and go to state 63


state 25

    (52) expression -> TAN . ( expression )

    (               shift and go to state 64


state 26

    (53) expression -> MIN . ( expression , expression )

    (               shift and go to state 65


state 27

    (54) expression -> MAX . ( expression , expression )

    (               shift and go to state 66


state 28

    (43) print -> PRINT . ( expression )

    (               shift and go to state 67


state 29

    (44) println -> PRINTLN . ( expression )

    (               shift and go to state 68


state 30

    (45) printf -> PRINTF . ( expression )

    (               shift and go to state 69


state 31

    (46) fmt_print -> FMT_PRINT . ( expression )

    (               shift and go to state 70


state 32

    (47) fmt_println -> FMT_PRINTLN . ( expression )

    (               shift and go to state 71


state 33

    (48) fmt_printf -> FMT_PRINTF . ( expression )

    (               shift and go to state 72


state 34

    (36) name -> NAME .

    =               reduce using rule 36 (name -> NAME .)
    GT              reduce using rule 36 (name -> NAME .)
    LT              reduce using rule 36 (name -> NAME .)
    PLUS            reduce using rule 36 (name -> NAME .)
    MINUS           reduce using rule 36 (name -> NAME .)
    TIMES           reduce using rule 36 (name -> NAME .)
    DIVIDE          reduce using rule 36 (name -> NAME .)
    MOD             reduce using rule 36 (name -> NAME .)
    LE              reduce using rule 36 (name -> NAME .)
    EQ              reduce using rule 36 (name -> NAME .)
    NEQ             reduce using rule 36 (name -> NAME .)
    GE              reduce using rule 36 (name -> NAME .)
    ,               reduce using rule 36 (name -> NAME .)
    IF              reduce using rule 36 (name -> NAME .)
    FOR             reduce using rule 36 (name -> NAME .)
    (               reduce using rule 36 (name -> NAME .)
    -               reduce using rule 36 (name -> NAME .)
    ABS             reduce using rule 36 (name -> NAME .)
    SIN             reduce using rule 36 (name -> NAME .)
    COS             reduce using rule 36 (name -> NAME .)
    TAN             reduce using rule 36 (name -> NAME .)
    MIN             reduce using rule 36 (name -> NAME .)
    MAX             reduce using rule 36 (name -> NAME .)
    PRINT           reduce using rule 36 (name -> NAME .)
    PRINTLN         reduce using rule 36 (name -> NAME .)
    PRINTF          reduce using rule 36 (name -> NAME .)
    FMT_PRINT       reduce using rule 36 (name -> NAME .)
    FMT_PRINTLN     reduce using rule 36 (name -> NAME .)
    FMT_PRINTF      reduce using rule 36 (name -> NAME .)
    NAME            reduce using rule 36 (name -> NAME .)
    NUMBER          reduce using rule 36 (name -> NAME .)
    SQ_STRING       reduce using rule 36 (name -> NAME .)
    DQ_STRING       reduce using rule 36 (name -> NAME .)
    $end            reduce using rule 36 (name -> NAME .)
    )               reduce using rule 36 (name -> NAME .)
    {               reduce using rule 36 (name -> NAME .)
    }               reduce using rule 36 (name -> NAME .)


state 35

    (35) number -> NUMBER .

    PLUS            reduce using rule 35 (number -> NUMBER .)
    MINUS           reduce using rule 35 (number -> NUMBER .)
    TIMES           reduce using rule 35 (number -> NUMBER .)
    DIVIDE          reduce using rule 35 (number -> NUMBER .)
    MOD             reduce using rule 35 (number -> NUMBER .)
    LT              reduce using rule 35 (number -> NUMBER .)
    LE              reduce using rule 35 (number -> NUMBER .)
    EQ              reduce using rule 35 (number -> NUMBER .)
    NEQ             reduce using rule 35 (number -> NUMBER .)
    GE              reduce using rule 35 (number -> NUMBER .)
    GT              reduce using rule 35 (number -> NUMBER .)
    ,               reduce using rule 35 (number -> NUMBER .)
    IF              reduce using rule 35 (number -> NUMBER .)
    FOR             reduce using rule 35 (number -> NUMBER .)
    (               reduce using rule 35 (number -> NUMBER .)
    -               reduce using rule 35 (number -> NUMBER .)
    ABS             reduce using rule 35 (number -> NUMBER .)
    SIN             reduce using rule 35 (number -> NUMBER .)
    COS             reduce using rule 35 (number -> NUMBER .)
    TAN             reduce using rule 35 (number -> NUMBER .)
    MIN             reduce using rule 35 (number -> NUMBER .)
    MAX             reduce using rule 35 (number -> NUMBER .)
    PRINT           reduce using rule 35 (number -> NUMBER .)
    PRINTLN         reduce using rule 35 (number -> NUMBER .)
    PRINTF          reduce using rule 35 (number -> NUMBER .)
    FMT_PRINT       reduce using rule 35 (number -> NUMBER .)
    FMT_PRINTLN     reduce using rule 35 (number -> NUMBER .)
    FMT_PRINTF      reduce using rule 35 (number -> NUMBER .)
    NAME            reduce using rule 35 (number -> NUMBER .)
    NUMBER          reduce using rule 35 (number -> NUMBER .)
    SQ_STRING       reduce using rule 35 (number -> NUMBER .)
    DQ_STRING       reduce using rule 35 (number -> NUMBER .)
    $end            reduce using rule 35 (number -> NUMBER .)
    )               reduce using rule 35 (number -> NUMBER .)
    {               reduce using rule 35 (number -> NUMBER .)
    }               reduce using rule 35 (number -> NUMBER .)


state 36

    (41) string -> SQ_STRING .

    PLUS            reduce using rule 41 (string -> SQ_STRING .)
    MINUS           reduce using rule 41 (string -> SQ_STRING .)
    TIMES           reduce using rule 41 (string -> SQ_STRING .)
    DIVIDE          reduce using rule 41 (string -> SQ_STRING .)
    MOD             reduce using rule 41 (string -> SQ_STRING .)
    LT              reduce using rule 41 (string -> SQ_STRING .)
    LE              reduce using rule 41 (string -> SQ_STRING .)
    EQ              reduce using rule 41 (string -> SQ_STRING .)
    NEQ             reduce using rule 41 (string -> SQ_STRING .)
    GE              reduce using rule 41 (string -> SQ_STRING .)
    GT              reduce using rule 41 (string -> SQ_STRING .)
    ,               reduce using rule 41 (string -> SQ_STRING .)
    IF              reduce using rule 41 (string -> SQ_STRING .)
    FOR             reduce using rule 41 (string -> SQ_STRING .)
    (               reduce using rule 41 (string -> SQ_STRING .)
    -               reduce using rule 41 (string -> SQ_STRING .)
    ABS             reduce using rule 41 (string -> SQ_STRING .)
    SIN             reduce using rule 41 (string -> SQ_STRING .)
    COS             reduce using rule 41 (string -> SQ_STRING .)
    TAN             reduce using rule 41 (string -> SQ_STRING .)
    MIN             reduce using rule 41 (string -> SQ_STRING .)
    MAX             reduce using rule 41 (string -> SQ_STRING .)
    PRINT           reduce using rule 41 (string -> SQ_STRING .)
    PRINTLN         reduce using rule 41 (string -> SQ_STRING .)
    PRINTF          reduce using rule 41 (string -> SQ_STRING .)
    FMT_PRINT       reduce using rule 41 (string -> SQ_STRING .)
    FMT_PRINTLN     reduce using rule 41 (string -> SQ_STRING .)
    FMT_PRINTF      reduce using rule 41 (string -> SQ_STRING .)
    NAME            reduce using rule 41 (string -> SQ_STRING .)
    NUMBER          reduce using rule 41 (string -> SQ_STRING .)
    SQ_STRING       reduce using rule 41 (string -> SQ_STRING .)
    DQ_STRING       reduce using rule 41 (string -> SQ_STRING .)
    $end            reduce using rule 41 (string -> SQ_STRING .)
    )               reduce using rule 41 (string -> SQ_STRING .)
    {               reduce using rule 41 (string -> SQ_STRING .)
    }               reduce using rule 41 (string -> SQ_STRING .)


state 37

    (42) string -> DQ_STRING .

    PLUS            reduce using rule 42 (string -> DQ_STRING .)
    MINUS           reduce using rule 42 (string -> DQ_STRING .)
    TIMES           reduce using rule 42 (string -> DQ_STRING .)
    DIVIDE          reduce using rule 42 (string -> DQ_STRING .)
    MOD             reduce using rule 42 (string -> DQ_STRING .)
    LT              reduce using rule 42 (string -> DQ_STRING .)
    LE              reduce using rule 42 (string -> DQ_STRING .)
    EQ              reduce using rule 42 (string -> DQ_STRING .)
    NEQ             reduce using rule 42 (string -> DQ_STRING .)
    GE              reduce using rule 42 (string -> DQ_STRING .)
    GT              reduce using rule 42 (string -> DQ_STRING .)
    ,               reduce using rule 42 (string -> DQ_STRING .)
    IF              reduce using rule 42 (string -> DQ_STRING .)
    FOR             reduce using rule 42 (string -> DQ_STRING .)
    (               reduce using rule 42 (string -> DQ_STRING .)
    -               reduce using rule 42 (string -> DQ_STRING .)
    ABS             reduce using rule 42 (string -> DQ_STRING .)
    SIN             reduce using rule 42 (string -> DQ_STRING .)
    COS             reduce using rule 42 (string -> DQ_STRING .)
    TAN             reduce using rule 42 (string -> DQ_STRING .)
    MIN             reduce using rule 42 (string -> DQ_STRING .)
    MAX             reduce using rule 42 (string -> DQ_STRING .)
    PRINT           reduce using rule 42 (string -> DQ_STRING .)
    PRINTLN         reduce using rule 42 (string -> DQ_STRING .)
    PRINTF          reduce using rule 42 (string -> DQ_STRING .)
    FMT_PRINT       reduce using rule 42 (string -> DQ_STRING .)
    FMT_PRINTLN     reduce using rule 42 (string -> DQ_STRING .)
    FMT_PRINTF      reduce using rule 42 (string -> DQ_STRING .)
    NAME            reduce using rule 42 (string -> DQ_STRING .)
    NUMBER          reduce using rule 42 (string -> DQ_STRING .)
    SQ_STRING       reduce using rule 42 (string -> DQ_STRING .)
    DQ_STRING       reduce using rule 42 (string -> DQ_STRING .)
    $end            reduce using rule 42 (string -> DQ_STRING .)
    )               reduce using rule 42 (string -> DQ_STRING .)
    {               reduce using rule 42 (string -> DQ_STRING .)
    }               reduce using rule 42 (string -> DQ_STRING .)


state 38

    (2) statement_list -> statement_list statement .

    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    (               reduce using rule 2 (statement_list -> statement_list statement .)
    -               reduce using rule 2 (statement_list -> statement_list statement .)
    ABS             reduce using rule 2 (statement_list -> statement_list statement .)
    SIN             reduce using rule 2 (statement_list -> statement_list statement .)
    COS             reduce using rule 2 (statement_list -> statement_list statement .)
    TAN             reduce using rule 2 (statement_list -> statement_list statement .)
    MIN             reduce using rule 2 (statement_list -> statement_list statement .)
    MAX             reduce using rule 2 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    PRINTLN         reduce using rule 2 (statement_list -> statement_list statement .)
    PRINTF          reduce using rule 2 (statement_list -> statement_list statement .)
    FMT_PRINT       reduce using rule 2 (statement_list -> statement_list statement .)
    FMT_PRINTLN     reduce using rule 2 (statement_list -> statement_list statement .)
    FMT_PRINTF      reduce using rule 2 (statement_list -> statement_list statement .)
    NAME            reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement_list statement .)
    SQ_STRING       reduce using rule 2 (statement_list -> statement_list statement .)
    DQ_STRING       reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    }               reduce using rule 2 (statement_list -> statement_list statement .)


state 39

    (21) expression -> expression PLUS . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 73
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 40

    (22) expression -> expression MINUS . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 74
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 41

    (23) expression -> expression TIMES . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 75
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 42

    (24) expression -> expression DIVIDE . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 76
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 43

    (25) expression -> expression MOD . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 77
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 44

    (26) expression -> expression LT . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 78
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 45

    (27) expression -> expression LE . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 79
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 46

    (28) expression -> expression EQ . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 80
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 47

    (29) expression -> expression NEQ . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 81
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 48

    (30) expression -> expression GE . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 82
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 49

    (31) expression -> expression GT . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 83
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 50

    (32) expression -> expression , . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 84
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 51

    (37) assign -> name = . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    name                           shift and go to state 58
    expression                     shift and go to state 85
    number                         shift and go to state 18
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 52

    (38) assign -> name GT . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    name                           shift and go to state 58
    expression                     shift and go to state 86
    number                         shift and go to state 18
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 53

    (39) assign -> name LT . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    name                           shift and go to state 58
    expression                     shift and go to state 87
    number                         shift and go to state 18
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 54

    (16) if_statement -> IF assign . block_statement ELSE block_statement
    (4) block_statement -> . { statement_list }

    {               shift and go to state 89

    block_statement                shift and go to state 88

state 55

    (37) assign -> name . = expression
    (38) assign -> name . GT expression
    (39) assign -> name . LT expression

    =               shift and go to state 51
    GT              shift and go to state 52
    LT              shift and go to state 53


state 56

    (17) for -> FOR assign . block_statement
    (4) block_statement -> . { statement_list }

    {               shift and go to state 89

    block_statement                shift and go to state 90

state 57

    (33) expression -> ( expression . )
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    )               shift and go to state 91
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50


state 58

    (19) expression -> name .
    (37) assign -> name . = expression
    (38) assign -> name . GT expression
    (39) assign -> name . LT expression

  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
    )               reduce using rule 19 (expression -> name .)
    PLUS            reduce using rule 19 (expression -> name .)
    MINUS           reduce using rule 19 (expression -> name .)
    TIMES           reduce using rule 19 (expression -> name .)
    DIVIDE          reduce using rule 19 (expression -> name .)
    MOD             reduce using rule 19 (expression -> name .)
    LE              reduce using rule 19 (expression -> name .)
    EQ              reduce using rule 19 (expression -> name .)
    NEQ             reduce using rule 19 (expression -> name .)
    GE              reduce using rule 19 (expression -> name .)
    ,               reduce using rule 19 (expression -> name .)
    IF              reduce using rule 19 (expression -> name .)
    FOR             reduce using rule 19 (expression -> name .)
    (               reduce using rule 19 (expression -> name .)
    -               reduce using rule 19 (expression -> name .)
    ABS             reduce using rule 19 (expression -> name .)
    SIN             reduce using rule 19 (expression -> name .)
    COS             reduce using rule 19 (expression -> name .)
    TAN             reduce using rule 19 (expression -> name .)
    MIN             reduce using rule 19 (expression -> name .)
    MAX             reduce using rule 19 (expression -> name .)
    PRINT           reduce using rule 19 (expression -> name .)
    PRINTLN         reduce using rule 19 (expression -> name .)
    PRINTF          reduce using rule 19 (expression -> name .)
    FMT_PRINT       reduce using rule 19 (expression -> name .)
    FMT_PRINTLN     reduce using rule 19 (expression -> name .)
    FMT_PRINTF      reduce using rule 19 (expression -> name .)
    NAME            reduce using rule 19 (expression -> name .)
    NUMBER          reduce using rule 19 (expression -> name .)
    SQ_STRING       reduce using rule 19 (expression -> name .)
    DQ_STRING       reduce using rule 19 (expression -> name .)
    $end            reduce using rule 19 (expression -> name .)
    {               reduce using rule 19 (expression -> name .)
    }               reduce using rule 19 (expression -> name .)
    =               shift and go to state 51
    GT              shift and go to state 52
    LT              shift and go to state 53

  ! LT              [ reduce using rule 19 (expression -> name .) ]
  ! GT              [ reduce using rule 19 (expression -> name .) ]


state 59

    (20) expression -> assign .

    )               reduce using rule 20 (expression -> assign .)
    PLUS            reduce using rule 20 (expression -> assign .)
    MINUS           reduce using rule 20 (expression -> assign .)
    TIMES           reduce using rule 20 (expression -> assign .)
    DIVIDE          reduce using rule 20 (expression -> assign .)
    MOD             reduce using rule 20 (expression -> assign .)
    LT              reduce using rule 20 (expression -> assign .)
    LE              reduce using rule 20 (expression -> assign .)
    EQ              reduce using rule 20 (expression -> assign .)
    NEQ             reduce using rule 20 (expression -> assign .)
    GE              reduce using rule 20 (expression -> assign .)
    GT              reduce using rule 20 (expression -> assign .)
    ,               reduce using rule 20 (expression -> assign .)
    IF              reduce using rule 20 (expression -> assign .)
    FOR             reduce using rule 20 (expression -> assign .)
    (               reduce using rule 20 (expression -> assign .)
    -               reduce using rule 20 (expression -> assign .)
    ABS             reduce using rule 20 (expression -> assign .)
    SIN             reduce using rule 20 (expression -> assign .)
    COS             reduce using rule 20 (expression -> assign .)
    TAN             reduce using rule 20 (expression -> assign .)
    MIN             reduce using rule 20 (expression -> assign .)
    MAX             reduce using rule 20 (expression -> assign .)
    PRINT           reduce using rule 20 (expression -> assign .)
    PRINTLN         reduce using rule 20 (expression -> assign .)
    PRINTF          reduce using rule 20 (expression -> assign .)
    FMT_PRINT       reduce using rule 20 (expression -> assign .)
    FMT_PRINTLN     reduce using rule 20 (expression -> assign .)
    FMT_PRINTF      reduce using rule 20 (expression -> assign .)
    NAME            reduce using rule 20 (expression -> assign .)
    NUMBER          reduce using rule 20 (expression -> assign .)
    SQ_STRING       reduce using rule 20 (expression -> assign .)
    DQ_STRING       reduce using rule 20 (expression -> assign .)
    $end            reduce using rule 20 (expression -> assign .)
    {               reduce using rule 20 (expression -> assign .)
    }               reduce using rule 20 (expression -> assign .)


state 60

    (34) expression -> - expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    PLUS            reduce using rule 34 (expression -> - expression .)
    MINUS           reduce using rule 34 (expression -> - expression .)
    TIMES           reduce using rule 34 (expression -> - expression .)
    DIVIDE          reduce using rule 34 (expression -> - expression .)
    MOD             reduce using rule 34 (expression -> - expression .)
    LT              reduce using rule 34 (expression -> - expression .)
    LE              reduce using rule 34 (expression -> - expression .)
    EQ              reduce using rule 34 (expression -> - expression .)
    NEQ             reduce using rule 34 (expression -> - expression .)
    GE              reduce using rule 34 (expression -> - expression .)
    GT              reduce using rule 34 (expression -> - expression .)
    ,               reduce using rule 34 (expression -> - expression .)
    IF              reduce using rule 34 (expression -> - expression .)
    FOR             reduce using rule 34 (expression -> - expression .)
    (               reduce using rule 34 (expression -> - expression .)
    -               reduce using rule 34 (expression -> - expression .)
    ABS             reduce using rule 34 (expression -> - expression .)
    SIN             reduce using rule 34 (expression -> - expression .)
    COS             reduce using rule 34 (expression -> - expression .)
    TAN             reduce using rule 34 (expression -> - expression .)
    MIN             reduce using rule 34 (expression -> - expression .)
    MAX             reduce using rule 34 (expression -> - expression .)
    PRINT           reduce using rule 34 (expression -> - expression .)
    PRINTLN         reduce using rule 34 (expression -> - expression .)
    PRINTF          reduce using rule 34 (expression -> - expression .)
    FMT_PRINT       reduce using rule 34 (expression -> - expression .)
    FMT_PRINTLN     reduce using rule 34 (expression -> - expression .)
    FMT_PRINTF      reduce using rule 34 (expression -> - expression .)
    NAME            reduce using rule 34 (expression -> - expression .)
    NUMBER          reduce using rule 34 (expression -> - expression .)
    SQ_STRING       reduce using rule 34 (expression -> - expression .)
    DQ_STRING       reduce using rule 34 (expression -> - expression .)
    $end            reduce using rule 34 (expression -> - expression .)
    )               reduce using rule 34 (expression -> - expression .)
    {               reduce using rule 34 (expression -> - expression .)
    }               reduce using rule 34 (expression -> - expression .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! MOD             [ shift and go to state 43 ]
  ! LT              [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]
  ! NEQ             [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! ,               [ shift and go to state 50 ]


state 61

    (49) expression -> ABS ( . expression )
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 92
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 62

    (50) expression -> SIN ( . expression )
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 93
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 63

    (51) expression -> COS ( . expression )
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 94
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 64

    (52) expression -> TAN ( . expression )
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 95
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 65

    (53) expression -> MIN ( . expression , expression )
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 96
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 66

    (54) expression -> MAX ( . expression , expression )
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 97
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 67

    (43) print -> PRINT ( . expression )
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 98
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 68

    (44) println -> PRINTLN ( . expression )
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 99
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 69

    (45) printf -> PRINTF ( . expression )
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 100
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 70

    (46) fmt_print -> FMT_PRINT ( . expression )
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 101
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 71

    (47) fmt_println -> FMT_PRINTLN ( . expression )
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 102
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 72

    (48) fmt_printf -> FMT_PRINTF ( . expression )
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 103
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 73

    (21) expression -> expression PLUS expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    PLUS            reduce using rule 21 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 21 (expression -> expression PLUS expression .)
    LT              reduce using rule 21 (expression -> expression PLUS expression .)
    LE              reduce using rule 21 (expression -> expression PLUS expression .)
    EQ              reduce using rule 21 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 21 (expression -> expression PLUS expression .)
    GE              reduce using rule 21 (expression -> expression PLUS expression .)
    GT              reduce using rule 21 (expression -> expression PLUS expression .)
    ,               reduce using rule 21 (expression -> expression PLUS expression .)
    IF              reduce using rule 21 (expression -> expression PLUS expression .)
    FOR             reduce using rule 21 (expression -> expression PLUS expression .)
    (               reduce using rule 21 (expression -> expression PLUS expression .)
    -               reduce using rule 21 (expression -> expression PLUS expression .)
    ABS             reduce using rule 21 (expression -> expression PLUS expression .)
    SIN             reduce using rule 21 (expression -> expression PLUS expression .)
    COS             reduce using rule 21 (expression -> expression PLUS expression .)
    TAN             reduce using rule 21 (expression -> expression PLUS expression .)
    MIN             reduce using rule 21 (expression -> expression PLUS expression .)
    MAX             reduce using rule 21 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 21 (expression -> expression PLUS expression .)
    PRINTLN         reduce using rule 21 (expression -> expression PLUS expression .)
    PRINTF          reduce using rule 21 (expression -> expression PLUS expression .)
    FMT_PRINT       reduce using rule 21 (expression -> expression PLUS expression .)
    FMT_PRINTLN     reduce using rule 21 (expression -> expression PLUS expression .)
    FMT_PRINTF      reduce using rule 21 (expression -> expression PLUS expression .)
    NAME            reduce using rule 21 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 21 (expression -> expression PLUS expression .)
    SQ_STRING       reduce using rule 21 (expression -> expression PLUS expression .)
    DQ_STRING       reduce using rule 21 (expression -> expression PLUS expression .)
    $end            reduce using rule 21 (expression -> expression PLUS expression .)
    )               reduce using rule 21 (expression -> expression PLUS expression .)
    {               reduce using rule 21 (expression -> expression PLUS expression .)
    }               reduce using rule 21 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43

  ! TIMES           [ reduce using rule 21 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 21 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! LT              [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]
  ! NEQ             [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! ,               [ shift and go to state 50 ]


state 74

    (22) expression -> expression MINUS expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    PLUS            reduce using rule 22 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 22 (expression -> expression MINUS expression .)
    LT              reduce using rule 22 (expression -> expression MINUS expression .)
    LE              reduce using rule 22 (expression -> expression MINUS expression .)
    EQ              reduce using rule 22 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 22 (expression -> expression MINUS expression .)
    GE              reduce using rule 22 (expression -> expression MINUS expression .)
    GT              reduce using rule 22 (expression -> expression MINUS expression .)
    ,               reduce using rule 22 (expression -> expression MINUS expression .)
    IF              reduce using rule 22 (expression -> expression MINUS expression .)
    FOR             reduce using rule 22 (expression -> expression MINUS expression .)
    (               reduce using rule 22 (expression -> expression MINUS expression .)
    -               reduce using rule 22 (expression -> expression MINUS expression .)
    ABS             reduce using rule 22 (expression -> expression MINUS expression .)
    SIN             reduce using rule 22 (expression -> expression MINUS expression .)
    COS             reduce using rule 22 (expression -> expression MINUS expression .)
    TAN             reduce using rule 22 (expression -> expression MINUS expression .)
    MIN             reduce using rule 22 (expression -> expression MINUS expression .)
    MAX             reduce using rule 22 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 22 (expression -> expression MINUS expression .)
    PRINTLN         reduce using rule 22 (expression -> expression MINUS expression .)
    PRINTF          reduce using rule 22 (expression -> expression MINUS expression .)
    FMT_PRINT       reduce using rule 22 (expression -> expression MINUS expression .)
    FMT_PRINTLN     reduce using rule 22 (expression -> expression MINUS expression .)
    FMT_PRINTF      reduce using rule 22 (expression -> expression MINUS expression .)
    NAME            reduce using rule 22 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 22 (expression -> expression MINUS expression .)
    SQ_STRING       reduce using rule 22 (expression -> expression MINUS expression .)
    DQ_STRING       reduce using rule 22 (expression -> expression MINUS expression .)
    $end            reduce using rule 22 (expression -> expression MINUS expression .)
    )               reduce using rule 22 (expression -> expression MINUS expression .)
    {               reduce using rule 22 (expression -> expression MINUS expression .)
    }               reduce using rule 22 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43

  ! TIMES           [ reduce using rule 22 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 22 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! LT              [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]
  ! NEQ             [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! ,               [ shift and go to state 50 ]


state 75

    (23) expression -> expression TIMES expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    PLUS            reduce using rule 23 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 23 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 23 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 23 (expression -> expression TIMES expression .)
    MOD             reduce using rule 23 (expression -> expression TIMES expression .)
    LT              reduce using rule 23 (expression -> expression TIMES expression .)
    LE              reduce using rule 23 (expression -> expression TIMES expression .)
    EQ              reduce using rule 23 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 23 (expression -> expression TIMES expression .)
    GE              reduce using rule 23 (expression -> expression TIMES expression .)
    GT              reduce using rule 23 (expression -> expression TIMES expression .)
    ,               reduce using rule 23 (expression -> expression TIMES expression .)
    IF              reduce using rule 23 (expression -> expression TIMES expression .)
    FOR             reduce using rule 23 (expression -> expression TIMES expression .)
    (               reduce using rule 23 (expression -> expression TIMES expression .)
    -               reduce using rule 23 (expression -> expression TIMES expression .)
    ABS             reduce using rule 23 (expression -> expression TIMES expression .)
    SIN             reduce using rule 23 (expression -> expression TIMES expression .)
    COS             reduce using rule 23 (expression -> expression TIMES expression .)
    TAN             reduce using rule 23 (expression -> expression TIMES expression .)
    MIN             reduce using rule 23 (expression -> expression TIMES expression .)
    MAX             reduce using rule 23 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 23 (expression -> expression TIMES expression .)
    PRINTLN         reduce using rule 23 (expression -> expression TIMES expression .)
    PRINTF          reduce using rule 23 (expression -> expression TIMES expression .)
    FMT_PRINT       reduce using rule 23 (expression -> expression TIMES expression .)
    FMT_PRINTLN     reduce using rule 23 (expression -> expression TIMES expression .)
    FMT_PRINTF      reduce using rule 23 (expression -> expression TIMES expression .)
    NAME            reduce using rule 23 (expression -> expression TIMES expression .)
    NUMBER          reduce using rule 23 (expression -> expression TIMES expression .)
    SQ_STRING       reduce using rule 23 (expression -> expression TIMES expression .)
    DQ_STRING       reduce using rule 23 (expression -> expression TIMES expression .)
    $end            reduce using rule 23 (expression -> expression TIMES expression .)
    )               reduce using rule 23 (expression -> expression TIMES expression .)
    {               reduce using rule 23 (expression -> expression TIMES expression .)
    }               reduce using rule 23 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! MOD             [ shift and go to state 43 ]
  ! LT              [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]
  ! NEQ             [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! ,               [ shift and go to state 50 ]


state 76

    (24) expression -> expression DIVIDE expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    PLUS            reduce using rule 24 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 24 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 24 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 24 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 24 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 24 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 24 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 24 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 24 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 24 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 24 (expression -> expression DIVIDE expression .)
    ,               reduce using rule 24 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 24 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 24 (expression -> expression DIVIDE expression .)
    (               reduce using rule 24 (expression -> expression DIVIDE expression .)
    -               reduce using rule 24 (expression -> expression DIVIDE expression .)
    ABS             reduce using rule 24 (expression -> expression DIVIDE expression .)
    SIN             reduce using rule 24 (expression -> expression DIVIDE expression .)
    COS             reduce using rule 24 (expression -> expression DIVIDE expression .)
    TAN             reduce using rule 24 (expression -> expression DIVIDE expression .)
    MIN             reduce using rule 24 (expression -> expression DIVIDE expression .)
    MAX             reduce using rule 24 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 24 (expression -> expression DIVIDE expression .)
    PRINTLN         reduce using rule 24 (expression -> expression DIVIDE expression .)
    PRINTF          reduce using rule 24 (expression -> expression DIVIDE expression .)
    FMT_PRINT       reduce using rule 24 (expression -> expression DIVIDE expression .)
    FMT_PRINTLN     reduce using rule 24 (expression -> expression DIVIDE expression .)
    FMT_PRINTF      reduce using rule 24 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 24 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 24 (expression -> expression DIVIDE expression .)
    SQ_STRING       reduce using rule 24 (expression -> expression DIVIDE expression .)
    DQ_STRING       reduce using rule 24 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 24 (expression -> expression DIVIDE expression .)
    )               reduce using rule 24 (expression -> expression DIVIDE expression .)
    {               reduce using rule 24 (expression -> expression DIVIDE expression .)
    }               reduce using rule 24 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! MOD             [ shift and go to state 43 ]
  ! LT              [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]
  ! NEQ             [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! ,               [ shift and go to state 50 ]


state 77

    (25) expression -> expression MOD expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    PLUS            reduce using rule 25 (expression -> expression MOD expression .)
    MINUS           reduce using rule 25 (expression -> expression MOD expression .)
    TIMES           reduce using rule 25 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 25 (expression -> expression MOD expression .)
    MOD             reduce using rule 25 (expression -> expression MOD expression .)
    LT              reduce using rule 25 (expression -> expression MOD expression .)
    LE              reduce using rule 25 (expression -> expression MOD expression .)
    EQ              reduce using rule 25 (expression -> expression MOD expression .)
    NEQ             reduce using rule 25 (expression -> expression MOD expression .)
    GE              reduce using rule 25 (expression -> expression MOD expression .)
    GT              reduce using rule 25 (expression -> expression MOD expression .)
    ,               reduce using rule 25 (expression -> expression MOD expression .)
    IF              reduce using rule 25 (expression -> expression MOD expression .)
    FOR             reduce using rule 25 (expression -> expression MOD expression .)
    (               reduce using rule 25 (expression -> expression MOD expression .)
    -               reduce using rule 25 (expression -> expression MOD expression .)
    ABS             reduce using rule 25 (expression -> expression MOD expression .)
    SIN             reduce using rule 25 (expression -> expression MOD expression .)
    COS             reduce using rule 25 (expression -> expression MOD expression .)
    TAN             reduce using rule 25 (expression -> expression MOD expression .)
    MIN             reduce using rule 25 (expression -> expression MOD expression .)
    MAX             reduce using rule 25 (expression -> expression MOD expression .)
    PRINT           reduce using rule 25 (expression -> expression MOD expression .)
    PRINTLN         reduce using rule 25 (expression -> expression MOD expression .)
    PRINTF          reduce using rule 25 (expression -> expression MOD expression .)
    FMT_PRINT       reduce using rule 25 (expression -> expression MOD expression .)
    FMT_PRINTLN     reduce using rule 25 (expression -> expression MOD expression .)
    FMT_PRINTF      reduce using rule 25 (expression -> expression MOD expression .)
    NAME            reduce using rule 25 (expression -> expression MOD expression .)
    NUMBER          reduce using rule 25 (expression -> expression MOD expression .)
    SQ_STRING       reduce using rule 25 (expression -> expression MOD expression .)
    DQ_STRING       reduce using rule 25 (expression -> expression MOD expression .)
    $end            reduce using rule 25 (expression -> expression MOD expression .)
    )               reduce using rule 25 (expression -> expression MOD expression .)
    {               reduce using rule 25 (expression -> expression MOD expression .)
    }               reduce using rule 25 (expression -> expression MOD expression .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]
  ! MOD             [ shift and go to state 43 ]
  ! LT              [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]
  ! NEQ             [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! ,               [ shift and go to state 50 ]


state 78

    (26) expression -> expression LT expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    LT              reduce using rule 26 (expression -> expression LT expression .)
    LE              reduce using rule 26 (expression -> expression LT expression .)
    EQ              reduce using rule 26 (expression -> expression LT expression .)
    NEQ             reduce using rule 26 (expression -> expression LT expression .)
    GE              reduce using rule 26 (expression -> expression LT expression .)
    GT              reduce using rule 26 (expression -> expression LT expression .)
    ,               reduce using rule 26 (expression -> expression LT expression .)
    IF              reduce using rule 26 (expression -> expression LT expression .)
    FOR             reduce using rule 26 (expression -> expression LT expression .)
    (               reduce using rule 26 (expression -> expression LT expression .)
    -               reduce using rule 26 (expression -> expression LT expression .)
    ABS             reduce using rule 26 (expression -> expression LT expression .)
    SIN             reduce using rule 26 (expression -> expression LT expression .)
    COS             reduce using rule 26 (expression -> expression LT expression .)
    TAN             reduce using rule 26 (expression -> expression LT expression .)
    MIN             reduce using rule 26 (expression -> expression LT expression .)
    MAX             reduce using rule 26 (expression -> expression LT expression .)
    PRINT           reduce using rule 26 (expression -> expression LT expression .)
    PRINTLN         reduce using rule 26 (expression -> expression LT expression .)
    PRINTF          reduce using rule 26 (expression -> expression LT expression .)
    FMT_PRINT       reduce using rule 26 (expression -> expression LT expression .)
    FMT_PRINTLN     reduce using rule 26 (expression -> expression LT expression .)
    FMT_PRINTF      reduce using rule 26 (expression -> expression LT expression .)
    NAME            reduce using rule 26 (expression -> expression LT expression .)
    NUMBER          reduce using rule 26 (expression -> expression LT expression .)
    SQ_STRING       reduce using rule 26 (expression -> expression LT expression .)
    DQ_STRING       reduce using rule 26 (expression -> expression LT expression .)
    $end            reduce using rule 26 (expression -> expression LT expression .)
    )               reduce using rule 26 (expression -> expression LT expression .)
    {               reduce using rule 26 (expression -> expression LT expression .)
    }               reduce using rule 26 (expression -> expression LT expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43

  ! PLUS            [ reduce using rule 26 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 26 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]
  ! NEQ             [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! ,               [ shift and go to state 50 ]


state 79

    (27) expression -> expression LE expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    LT              reduce using rule 27 (expression -> expression LE expression .)
    LE              reduce using rule 27 (expression -> expression LE expression .)
    EQ              reduce using rule 27 (expression -> expression LE expression .)
    NEQ             reduce using rule 27 (expression -> expression LE expression .)
    GE              reduce using rule 27 (expression -> expression LE expression .)
    GT              reduce using rule 27 (expression -> expression LE expression .)
    ,               reduce using rule 27 (expression -> expression LE expression .)
    IF              reduce using rule 27 (expression -> expression LE expression .)
    FOR             reduce using rule 27 (expression -> expression LE expression .)
    (               reduce using rule 27 (expression -> expression LE expression .)
    -               reduce using rule 27 (expression -> expression LE expression .)
    ABS             reduce using rule 27 (expression -> expression LE expression .)
    SIN             reduce using rule 27 (expression -> expression LE expression .)
    COS             reduce using rule 27 (expression -> expression LE expression .)
    TAN             reduce using rule 27 (expression -> expression LE expression .)
    MIN             reduce using rule 27 (expression -> expression LE expression .)
    MAX             reduce using rule 27 (expression -> expression LE expression .)
    PRINT           reduce using rule 27 (expression -> expression LE expression .)
    PRINTLN         reduce using rule 27 (expression -> expression LE expression .)
    PRINTF          reduce using rule 27 (expression -> expression LE expression .)
    FMT_PRINT       reduce using rule 27 (expression -> expression LE expression .)
    FMT_PRINTLN     reduce using rule 27 (expression -> expression LE expression .)
    FMT_PRINTF      reduce using rule 27 (expression -> expression LE expression .)
    NAME            reduce using rule 27 (expression -> expression LE expression .)
    NUMBER          reduce using rule 27 (expression -> expression LE expression .)
    SQ_STRING       reduce using rule 27 (expression -> expression LE expression .)
    DQ_STRING       reduce using rule 27 (expression -> expression LE expression .)
    $end            reduce using rule 27 (expression -> expression LE expression .)
    )               reduce using rule 27 (expression -> expression LE expression .)
    {               reduce using rule 27 (expression -> expression LE expression .)
    }               reduce using rule 27 (expression -> expression LE expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43

  ! PLUS            [ reduce using rule 27 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 27 (expression -> expression LE expression .) ]
  ! LT              [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]
  ! NEQ             [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! ,               [ shift and go to state 50 ]


state 80

    (28) expression -> expression EQ expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    LT              reduce using rule 28 (expression -> expression EQ expression .)
    LE              reduce using rule 28 (expression -> expression EQ expression .)
    EQ              reduce using rule 28 (expression -> expression EQ expression .)
    NEQ             reduce using rule 28 (expression -> expression EQ expression .)
    GE              reduce using rule 28 (expression -> expression EQ expression .)
    GT              reduce using rule 28 (expression -> expression EQ expression .)
    ,               reduce using rule 28 (expression -> expression EQ expression .)
    IF              reduce using rule 28 (expression -> expression EQ expression .)
    FOR             reduce using rule 28 (expression -> expression EQ expression .)
    (               reduce using rule 28 (expression -> expression EQ expression .)
    -               reduce using rule 28 (expression -> expression EQ expression .)
    ABS             reduce using rule 28 (expression -> expression EQ expression .)
    SIN             reduce using rule 28 (expression -> expression EQ expression .)
    COS             reduce using rule 28 (expression -> expression EQ expression .)
    TAN             reduce using rule 28 (expression -> expression EQ expression .)
    MIN             reduce using rule 28 (expression -> expression EQ expression .)
    MAX             reduce using rule 28 (expression -> expression EQ expression .)
    PRINT           reduce using rule 28 (expression -> expression EQ expression .)
    PRINTLN         reduce using rule 28 (expression -> expression EQ expression .)
    PRINTF          reduce using rule 28 (expression -> expression EQ expression .)
    FMT_PRINT       reduce using rule 28 (expression -> expression EQ expression .)
    FMT_PRINTLN     reduce using rule 28 (expression -> expression EQ expression .)
    FMT_PRINTF      reduce using rule 28 (expression -> expression EQ expression .)
    NAME            reduce using rule 28 (expression -> expression EQ expression .)
    NUMBER          reduce using rule 28 (expression -> expression EQ expression .)
    SQ_STRING       reduce using rule 28 (expression -> expression EQ expression .)
    DQ_STRING       reduce using rule 28 (expression -> expression EQ expression .)
    $end            reduce using rule 28 (expression -> expression EQ expression .)
    )               reduce using rule 28 (expression -> expression EQ expression .)
    {               reduce using rule 28 (expression -> expression EQ expression .)
    }               reduce using rule 28 (expression -> expression EQ expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43

  ! PLUS            [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! LT              [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]
  ! NEQ             [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! ,               [ shift and go to state 50 ]


state 81

    (29) expression -> expression NEQ expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    LT              reduce using rule 29 (expression -> expression NEQ expression .)
    LE              reduce using rule 29 (expression -> expression NEQ expression .)
    EQ              reduce using rule 29 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 29 (expression -> expression NEQ expression .)
    GE              reduce using rule 29 (expression -> expression NEQ expression .)
    GT              reduce using rule 29 (expression -> expression NEQ expression .)
    ,               reduce using rule 29 (expression -> expression NEQ expression .)
    IF              reduce using rule 29 (expression -> expression NEQ expression .)
    FOR             reduce using rule 29 (expression -> expression NEQ expression .)
    (               reduce using rule 29 (expression -> expression NEQ expression .)
    -               reduce using rule 29 (expression -> expression NEQ expression .)
    ABS             reduce using rule 29 (expression -> expression NEQ expression .)
    SIN             reduce using rule 29 (expression -> expression NEQ expression .)
    COS             reduce using rule 29 (expression -> expression NEQ expression .)
    TAN             reduce using rule 29 (expression -> expression NEQ expression .)
    MIN             reduce using rule 29 (expression -> expression NEQ expression .)
    MAX             reduce using rule 29 (expression -> expression NEQ expression .)
    PRINT           reduce using rule 29 (expression -> expression NEQ expression .)
    PRINTLN         reduce using rule 29 (expression -> expression NEQ expression .)
    PRINTF          reduce using rule 29 (expression -> expression NEQ expression .)
    FMT_PRINT       reduce using rule 29 (expression -> expression NEQ expression .)
    FMT_PRINTLN     reduce using rule 29 (expression -> expression NEQ expression .)
    FMT_PRINTF      reduce using rule 29 (expression -> expression NEQ expression .)
    NAME            reduce using rule 29 (expression -> expression NEQ expression .)
    NUMBER          reduce using rule 29 (expression -> expression NEQ expression .)
    SQ_STRING       reduce using rule 29 (expression -> expression NEQ expression .)
    DQ_STRING       reduce using rule 29 (expression -> expression NEQ expression .)
    $end            reduce using rule 29 (expression -> expression NEQ expression .)
    )               reduce using rule 29 (expression -> expression NEQ expression .)
    {               reduce using rule 29 (expression -> expression NEQ expression .)
    }               reduce using rule 29 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43

  ! PLUS            [ reduce using rule 29 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression NEQ expression .) ]
  ! MOD             [ reduce using rule 29 (expression -> expression NEQ expression .) ]
  ! LT              [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]
  ! NEQ             [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! ,               [ shift and go to state 50 ]


state 82

    (30) expression -> expression GE expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    LT              reduce using rule 30 (expression -> expression GE expression .)
    LE              reduce using rule 30 (expression -> expression GE expression .)
    EQ              reduce using rule 30 (expression -> expression GE expression .)
    NEQ             reduce using rule 30 (expression -> expression GE expression .)
    GE              reduce using rule 30 (expression -> expression GE expression .)
    GT              reduce using rule 30 (expression -> expression GE expression .)
    ,               reduce using rule 30 (expression -> expression GE expression .)
    IF              reduce using rule 30 (expression -> expression GE expression .)
    FOR             reduce using rule 30 (expression -> expression GE expression .)
    (               reduce using rule 30 (expression -> expression GE expression .)
    -               reduce using rule 30 (expression -> expression GE expression .)
    ABS             reduce using rule 30 (expression -> expression GE expression .)
    SIN             reduce using rule 30 (expression -> expression GE expression .)
    COS             reduce using rule 30 (expression -> expression GE expression .)
    TAN             reduce using rule 30 (expression -> expression GE expression .)
    MIN             reduce using rule 30 (expression -> expression GE expression .)
    MAX             reduce using rule 30 (expression -> expression GE expression .)
    PRINT           reduce using rule 30 (expression -> expression GE expression .)
    PRINTLN         reduce using rule 30 (expression -> expression GE expression .)
    PRINTF          reduce using rule 30 (expression -> expression GE expression .)
    FMT_PRINT       reduce using rule 30 (expression -> expression GE expression .)
    FMT_PRINTLN     reduce using rule 30 (expression -> expression GE expression .)
    FMT_PRINTF      reduce using rule 30 (expression -> expression GE expression .)
    NAME            reduce using rule 30 (expression -> expression GE expression .)
    NUMBER          reduce using rule 30 (expression -> expression GE expression .)
    SQ_STRING       reduce using rule 30 (expression -> expression GE expression .)
    DQ_STRING       reduce using rule 30 (expression -> expression GE expression .)
    $end            reduce using rule 30 (expression -> expression GE expression .)
    )               reduce using rule 30 (expression -> expression GE expression .)
    {               reduce using rule 30 (expression -> expression GE expression .)
    }               reduce using rule 30 (expression -> expression GE expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43

  ! PLUS            [ reduce using rule 30 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 30 (expression -> expression GE expression .) ]
  ! LT              [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]
  ! NEQ             [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! ,               [ shift and go to state 50 ]


state 83

    (31) expression -> expression GT expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    LT              reduce using rule 31 (expression -> expression GT expression .)
    LE              reduce using rule 31 (expression -> expression GT expression .)
    EQ              reduce using rule 31 (expression -> expression GT expression .)
    NEQ             reduce using rule 31 (expression -> expression GT expression .)
    GE              reduce using rule 31 (expression -> expression GT expression .)
    GT              reduce using rule 31 (expression -> expression GT expression .)
    ,               reduce using rule 31 (expression -> expression GT expression .)
    IF              reduce using rule 31 (expression -> expression GT expression .)
    FOR             reduce using rule 31 (expression -> expression GT expression .)
    (               reduce using rule 31 (expression -> expression GT expression .)
    -               reduce using rule 31 (expression -> expression GT expression .)
    ABS             reduce using rule 31 (expression -> expression GT expression .)
    SIN             reduce using rule 31 (expression -> expression GT expression .)
    COS             reduce using rule 31 (expression -> expression GT expression .)
    TAN             reduce using rule 31 (expression -> expression GT expression .)
    MIN             reduce using rule 31 (expression -> expression GT expression .)
    MAX             reduce using rule 31 (expression -> expression GT expression .)
    PRINT           reduce using rule 31 (expression -> expression GT expression .)
    PRINTLN         reduce using rule 31 (expression -> expression GT expression .)
    PRINTF          reduce using rule 31 (expression -> expression GT expression .)
    FMT_PRINT       reduce using rule 31 (expression -> expression GT expression .)
    FMT_PRINTLN     reduce using rule 31 (expression -> expression GT expression .)
    FMT_PRINTF      reduce using rule 31 (expression -> expression GT expression .)
    NAME            reduce using rule 31 (expression -> expression GT expression .)
    NUMBER          reduce using rule 31 (expression -> expression GT expression .)
    SQ_STRING       reduce using rule 31 (expression -> expression GT expression .)
    DQ_STRING       reduce using rule 31 (expression -> expression GT expression .)
    $end            reduce using rule 31 (expression -> expression GT expression .)
    )               reduce using rule 31 (expression -> expression GT expression .)
    {               reduce using rule 31 (expression -> expression GT expression .)
    }               reduce using rule 31 (expression -> expression GT expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43

  ! PLUS            [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 31 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]
  ! NEQ             [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! ,               [ shift and go to state 50 ]


state 84

    (32) expression -> expression , expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for , resolved as shift
    IF              reduce using rule 32 (expression -> expression , expression .)
    FOR             reduce using rule 32 (expression -> expression , expression .)
    (               reduce using rule 32 (expression -> expression , expression .)
    -               reduce using rule 32 (expression -> expression , expression .)
    ABS             reduce using rule 32 (expression -> expression , expression .)
    SIN             reduce using rule 32 (expression -> expression , expression .)
    COS             reduce using rule 32 (expression -> expression , expression .)
    TAN             reduce using rule 32 (expression -> expression , expression .)
    MIN             reduce using rule 32 (expression -> expression , expression .)
    MAX             reduce using rule 32 (expression -> expression , expression .)
    PRINT           reduce using rule 32 (expression -> expression , expression .)
    PRINTLN         reduce using rule 32 (expression -> expression , expression .)
    PRINTF          reduce using rule 32 (expression -> expression , expression .)
    FMT_PRINT       reduce using rule 32 (expression -> expression , expression .)
    FMT_PRINTLN     reduce using rule 32 (expression -> expression , expression .)
    FMT_PRINTF      reduce using rule 32 (expression -> expression , expression .)
    NAME            reduce using rule 32 (expression -> expression , expression .)
    NUMBER          reduce using rule 32 (expression -> expression , expression .)
    SQ_STRING       reduce using rule 32 (expression -> expression , expression .)
    DQ_STRING       reduce using rule 32 (expression -> expression , expression .)
    $end            reduce using rule 32 (expression -> expression , expression .)
    )               reduce using rule 32 (expression -> expression , expression .)
    {               reduce using rule 32 (expression -> expression , expression .)
    }               reduce using rule 32 (expression -> expression , expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50

  ! PLUS            [ reduce using rule 32 (expression -> expression , expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression , expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression , expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression , expression .) ]
  ! MOD             [ reduce using rule 32 (expression -> expression , expression .) ]
  ! LT              [ reduce using rule 32 (expression -> expression , expression .) ]
  ! LE              [ reduce using rule 32 (expression -> expression , expression .) ]
  ! EQ              [ reduce using rule 32 (expression -> expression , expression .) ]
  ! NEQ             [ reduce using rule 32 (expression -> expression , expression .) ]
  ! GE              [ reduce using rule 32 (expression -> expression , expression .) ]
  ! GT              [ reduce using rule 32 (expression -> expression , expression .) ]
  ! ,               [ reduce using rule 32 (expression -> expression , expression .) ]


state 85

    (37) assign -> name = expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for , resolved as shift
    IF              reduce using rule 37 (assign -> name = expression .)
    FOR             reduce using rule 37 (assign -> name = expression .)
    (               reduce using rule 37 (assign -> name = expression .)
    -               reduce using rule 37 (assign -> name = expression .)
    ABS             reduce using rule 37 (assign -> name = expression .)
    SIN             reduce using rule 37 (assign -> name = expression .)
    COS             reduce using rule 37 (assign -> name = expression .)
    TAN             reduce using rule 37 (assign -> name = expression .)
    MIN             reduce using rule 37 (assign -> name = expression .)
    MAX             reduce using rule 37 (assign -> name = expression .)
    PRINT           reduce using rule 37 (assign -> name = expression .)
    PRINTLN         reduce using rule 37 (assign -> name = expression .)
    PRINTF          reduce using rule 37 (assign -> name = expression .)
    FMT_PRINT       reduce using rule 37 (assign -> name = expression .)
    FMT_PRINTLN     reduce using rule 37 (assign -> name = expression .)
    FMT_PRINTF      reduce using rule 37 (assign -> name = expression .)
    NAME            reduce using rule 37 (assign -> name = expression .)
    NUMBER          reduce using rule 37 (assign -> name = expression .)
    SQ_STRING       reduce using rule 37 (assign -> name = expression .)
    DQ_STRING       reduce using rule 37 (assign -> name = expression .)
    $end            reduce using rule 37 (assign -> name = expression .)
    {               reduce using rule 37 (assign -> name = expression .)
    )               reduce using rule 37 (assign -> name = expression .)
    }               reduce using rule 37 (assign -> name = expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50

  ! PLUS            [ reduce using rule 37 (assign -> name = expression .) ]
  ! MINUS           [ reduce using rule 37 (assign -> name = expression .) ]
  ! TIMES           [ reduce using rule 37 (assign -> name = expression .) ]
  ! DIVIDE          [ reduce using rule 37 (assign -> name = expression .) ]
  ! MOD             [ reduce using rule 37 (assign -> name = expression .) ]
  ! LT              [ reduce using rule 37 (assign -> name = expression .) ]
  ! LE              [ reduce using rule 37 (assign -> name = expression .) ]
  ! EQ              [ reduce using rule 37 (assign -> name = expression .) ]
  ! NEQ             [ reduce using rule 37 (assign -> name = expression .) ]
  ! GE              [ reduce using rule 37 (assign -> name = expression .) ]
  ! GT              [ reduce using rule 37 (assign -> name = expression .) ]
  ! ,               [ reduce using rule 37 (assign -> name = expression .) ]


state 86

    (38) assign -> name GT expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    IF              reduce using rule 38 (assign -> name GT expression .)
    FOR             reduce using rule 38 (assign -> name GT expression .)
    (               reduce using rule 38 (assign -> name GT expression .)
    -               reduce using rule 38 (assign -> name GT expression .)
    ABS             reduce using rule 38 (assign -> name GT expression .)
    SIN             reduce using rule 38 (assign -> name GT expression .)
    COS             reduce using rule 38 (assign -> name GT expression .)
    TAN             reduce using rule 38 (assign -> name GT expression .)
    MIN             reduce using rule 38 (assign -> name GT expression .)
    MAX             reduce using rule 38 (assign -> name GT expression .)
    PRINT           reduce using rule 38 (assign -> name GT expression .)
    PRINTLN         reduce using rule 38 (assign -> name GT expression .)
    PRINTF          reduce using rule 38 (assign -> name GT expression .)
    FMT_PRINT       reduce using rule 38 (assign -> name GT expression .)
    FMT_PRINTLN     reduce using rule 38 (assign -> name GT expression .)
    FMT_PRINTF      reduce using rule 38 (assign -> name GT expression .)
    NAME            reduce using rule 38 (assign -> name GT expression .)
    NUMBER          reduce using rule 38 (assign -> name GT expression .)
    SQ_STRING       reduce using rule 38 (assign -> name GT expression .)
    DQ_STRING       reduce using rule 38 (assign -> name GT expression .)
    $end            reduce using rule 38 (assign -> name GT expression .)
    LT              reduce using rule 38 (assign -> name GT expression .)
    LE              reduce using rule 38 (assign -> name GT expression .)
    EQ              reduce using rule 38 (assign -> name GT expression .)
    NEQ             reduce using rule 38 (assign -> name GT expression .)
    GE              reduce using rule 38 (assign -> name GT expression .)
    GT              reduce using rule 38 (assign -> name GT expression .)
    ,               reduce using rule 38 (assign -> name GT expression .)
    {               reduce using rule 38 (assign -> name GT expression .)
    )               reduce using rule 38 (assign -> name GT expression .)
    }               reduce using rule 38 (assign -> name GT expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43

  ! PLUS            [ reduce using rule 38 (assign -> name GT expression .) ]
  ! MINUS           [ reduce using rule 38 (assign -> name GT expression .) ]
  ! TIMES           [ reduce using rule 38 (assign -> name GT expression .) ]
  ! DIVIDE          [ reduce using rule 38 (assign -> name GT expression .) ]
  ! MOD             [ reduce using rule 38 (assign -> name GT expression .) ]
  ! LT              [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]
  ! NEQ             [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! ,               [ shift and go to state 50 ]


state 87

    (39) assign -> name LT expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    IF              reduce using rule 39 (assign -> name LT expression .)
    FOR             reduce using rule 39 (assign -> name LT expression .)
    (               reduce using rule 39 (assign -> name LT expression .)
    -               reduce using rule 39 (assign -> name LT expression .)
    ABS             reduce using rule 39 (assign -> name LT expression .)
    SIN             reduce using rule 39 (assign -> name LT expression .)
    COS             reduce using rule 39 (assign -> name LT expression .)
    TAN             reduce using rule 39 (assign -> name LT expression .)
    MIN             reduce using rule 39 (assign -> name LT expression .)
    MAX             reduce using rule 39 (assign -> name LT expression .)
    PRINT           reduce using rule 39 (assign -> name LT expression .)
    PRINTLN         reduce using rule 39 (assign -> name LT expression .)
    PRINTF          reduce using rule 39 (assign -> name LT expression .)
    FMT_PRINT       reduce using rule 39 (assign -> name LT expression .)
    FMT_PRINTLN     reduce using rule 39 (assign -> name LT expression .)
    FMT_PRINTF      reduce using rule 39 (assign -> name LT expression .)
    NAME            reduce using rule 39 (assign -> name LT expression .)
    NUMBER          reduce using rule 39 (assign -> name LT expression .)
    SQ_STRING       reduce using rule 39 (assign -> name LT expression .)
    DQ_STRING       reduce using rule 39 (assign -> name LT expression .)
    $end            reduce using rule 39 (assign -> name LT expression .)
    LT              reduce using rule 39 (assign -> name LT expression .)
    LE              reduce using rule 39 (assign -> name LT expression .)
    EQ              reduce using rule 39 (assign -> name LT expression .)
    NEQ             reduce using rule 39 (assign -> name LT expression .)
    GE              reduce using rule 39 (assign -> name LT expression .)
    GT              reduce using rule 39 (assign -> name LT expression .)
    ,               reduce using rule 39 (assign -> name LT expression .)
    {               reduce using rule 39 (assign -> name LT expression .)
    )               reduce using rule 39 (assign -> name LT expression .)
    }               reduce using rule 39 (assign -> name LT expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43

  ! PLUS            [ reduce using rule 39 (assign -> name LT expression .) ]
  ! MINUS           [ reduce using rule 39 (assign -> name LT expression .) ]
  ! TIMES           [ reduce using rule 39 (assign -> name LT expression .) ]
  ! DIVIDE          [ reduce using rule 39 (assign -> name LT expression .) ]
  ! MOD             [ reduce using rule 39 (assign -> name LT expression .) ]
  ! LT              [ shift and go to state 44 ]
  ! LE              [ shift and go to state 45 ]
  ! EQ              [ shift and go to state 46 ]
  ! NEQ             [ shift and go to state 47 ]
  ! GE              [ shift and go to state 48 ]
  ! GT              [ shift and go to state 49 ]
  ! ,               [ shift and go to state 50 ]


state 88

    (16) if_statement -> IF assign block_statement . ELSE block_statement

    ELSE            shift and go to state 104


state 89

    (4) block_statement -> { . statement_list }
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (5) statement -> . all_prints
    (6) statement -> . assign
    (7) statement -> . if_statement
    (8) statement -> . for
    (9) statement -> . expression
    (10) all_prints -> . print
    (11) all_prints -> . println
    (12) all_prints -> . printf
    (13) all_prints -> . fmt_print
    (14) all_prints -> . fmt_println
    (15) all_prints -> . fmt_printf
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (16) if_statement -> . IF assign block_statement ELSE block_statement
    (17) for -> . FOR assign block_statement
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (43) print -> . PRINT ( expression )
    (44) println -> . PRINTLN ( expression )
    (45) printf -> . PRINTF ( expression )
    (46) fmt_print -> . FMT_PRINT ( expression )
    (47) fmt_println -> . FMT_PRINTLN ( expression )
    (48) fmt_printf -> . FMT_PRINTF ( expression )
    (36) name -> . NAME
    (35) number -> . NUMBER
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    IF              shift and go to state 16
    FOR             shift and go to state 17
    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    PRINT           shift and go to state 28
    PRINTLN         shift and go to state 29
    PRINTF          shift and go to state 30
    FMT_PRINT       shift and go to state 31
    FMT_PRINTLN     shift and go to state 32
    FMT_PRINTF      shift and go to state 33
    NAME            shift and go to state 34
    NUMBER          shift and go to state 35
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    statement_list                 shift and go to state 105
    statement                      shift and go to state 3
    all_prints                     shift and go to state 4
    assign                         shift and go to state 5
    if_statement                   shift and go to state 6
    for                            shift and go to state 7
    expression                     shift and go to state 8
    print                          shift and go to state 9
    println                        shift and go to state 10
    printf                         shift and go to state 11
    fmt_print                      shift and go to state 12
    fmt_println                    shift and go to state 13
    fmt_printf                     shift and go to state 14
    name                           shift and go to state 15
    number                         shift and go to state 18
    string                         shift and go to state 21

state 90

    (17) for -> FOR assign block_statement .

    IF              reduce using rule 17 (for -> FOR assign block_statement .)
    FOR             reduce using rule 17 (for -> FOR assign block_statement .)
    (               reduce using rule 17 (for -> FOR assign block_statement .)
    -               reduce using rule 17 (for -> FOR assign block_statement .)
    ABS             reduce using rule 17 (for -> FOR assign block_statement .)
    SIN             reduce using rule 17 (for -> FOR assign block_statement .)
    COS             reduce using rule 17 (for -> FOR assign block_statement .)
    TAN             reduce using rule 17 (for -> FOR assign block_statement .)
    MIN             reduce using rule 17 (for -> FOR assign block_statement .)
    MAX             reduce using rule 17 (for -> FOR assign block_statement .)
    PRINT           reduce using rule 17 (for -> FOR assign block_statement .)
    PRINTLN         reduce using rule 17 (for -> FOR assign block_statement .)
    PRINTF          reduce using rule 17 (for -> FOR assign block_statement .)
    FMT_PRINT       reduce using rule 17 (for -> FOR assign block_statement .)
    FMT_PRINTLN     reduce using rule 17 (for -> FOR assign block_statement .)
    FMT_PRINTF      reduce using rule 17 (for -> FOR assign block_statement .)
    NAME            reduce using rule 17 (for -> FOR assign block_statement .)
    NUMBER          reduce using rule 17 (for -> FOR assign block_statement .)
    SQ_STRING       reduce using rule 17 (for -> FOR assign block_statement .)
    DQ_STRING       reduce using rule 17 (for -> FOR assign block_statement .)
    $end            reduce using rule 17 (for -> FOR assign block_statement .)
    }               reduce using rule 17 (for -> FOR assign block_statement .)


state 91

    (33) expression -> ( expression ) .

    PLUS            reduce using rule 33 (expression -> ( expression ) .)
    MINUS           reduce using rule 33 (expression -> ( expression ) .)
    TIMES           reduce using rule 33 (expression -> ( expression ) .)
    DIVIDE          reduce using rule 33 (expression -> ( expression ) .)
    MOD             reduce using rule 33 (expression -> ( expression ) .)
    LT              reduce using rule 33 (expression -> ( expression ) .)
    LE              reduce using rule 33 (expression -> ( expression ) .)
    EQ              reduce using rule 33 (expression -> ( expression ) .)
    NEQ             reduce using rule 33 (expression -> ( expression ) .)
    GE              reduce using rule 33 (expression -> ( expression ) .)
    GT              reduce using rule 33 (expression -> ( expression ) .)
    ,               reduce using rule 33 (expression -> ( expression ) .)
    IF              reduce using rule 33 (expression -> ( expression ) .)
    FOR             reduce using rule 33 (expression -> ( expression ) .)
    (               reduce using rule 33 (expression -> ( expression ) .)
    -               reduce using rule 33 (expression -> ( expression ) .)
    ABS             reduce using rule 33 (expression -> ( expression ) .)
    SIN             reduce using rule 33 (expression -> ( expression ) .)
    COS             reduce using rule 33 (expression -> ( expression ) .)
    TAN             reduce using rule 33 (expression -> ( expression ) .)
    MIN             reduce using rule 33 (expression -> ( expression ) .)
    MAX             reduce using rule 33 (expression -> ( expression ) .)
    PRINT           reduce using rule 33 (expression -> ( expression ) .)
    PRINTLN         reduce using rule 33 (expression -> ( expression ) .)
    PRINTF          reduce using rule 33 (expression -> ( expression ) .)
    FMT_PRINT       reduce using rule 33 (expression -> ( expression ) .)
    FMT_PRINTLN     reduce using rule 33 (expression -> ( expression ) .)
    FMT_PRINTF      reduce using rule 33 (expression -> ( expression ) .)
    NAME            reduce using rule 33 (expression -> ( expression ) .)
    NUMBER          reduce using rule 33 (expression -> ( expression ) .)
    SQ_STRING       reduce using rule 33 (expression -> ( expression ) .)
    DQ_STRING       reduce using rule 33 (expression -> ( expression ) .)
    $end            reduce using rule 33 (expression -> ( expression ) .)
    )               reduce using rule 33 (expression -> ( expression ) .)
    {               reduce using rule 33 (expression -> ( expression ) .)
    }               reduce using rule 33 (expression -> ( expression ) .)


state 92

    (49) expression -> ABS ( expression . )
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    )               shift and go to state 106
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50


state 93

    (50) expression -> SIN ( expression . )
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    )               shift and go to state 107
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50


state 94

    (51) expression -> COS ( expression . )
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    )               shift and go to state 108
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50


state 95

    (52) expression -> TAN ( expression . )
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    )               shift and go to state 109
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50


state 96

    (53) expression -> MIN ( expression . , expression )
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    ,               shift and go to state 110
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49


state 97

    (54) expression -> MAX ( expression . , expression )
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    ,               shift and go to state 111
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49


state 98

    (43) print -> PRINT ( expression . )
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    )               shift and go to state 112
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50


state 99

    (44) println -> PRINTLN ( expression . )
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    )               shift and go to state 113
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50


state 100

    (45) printf -> PRINTF ( expression . )
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    )               shift and go to state 114
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50


state 101

    (46) fmt_print -> FMT_PRINT ( expression . )
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    )               shift and go to state 115
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50


state 102

    (47) fmt_println -> FMT_PRINTLN ( expression . )
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    )               shift and go to state 116
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50


state 103

    (48) fmt_printf -> FMT_PRINTF ( expression . )
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

    )               shift and go to state 117
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50


state 104

    (16) if_statement -> IF assign block_statement ELSE . block_statement
    (4) block_statement -> . { statement_list }

    {               shift and go to state 89

    block_statement                shift and go to state 118

state 105

    (4) block_statement -> { statement_list . }
    (2) statement_list -> statement_list . statement
    (5) statement -> . all_prints
    (6) statement -> . assign
    (7) statement -> . if_statement
    (8) statement -> . for
    (9) statement -> . expression
    (10) all_prints -> . print
    (11) all_prints -> . println
    (12) all_prints -> . printf
    (13) all_prints -> . fmt_print
    (14) all_prints -> . fmt_println
    (15) all_prints -> . fmt_printf
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (16) if_statement -> . IF assign block_statement ELSE block_statement
    (17) for -> . FOR assign block_statement
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (43) print -> . PRINT ( expression )
    (44) println -> . PRINTLN ( expression )
    (45) printf -> . PRINTF ( expression )
    (46) fmt_print -> . FMT_PRINT ( expression )
    (47) fmt_println -> . FMT_PRINTLN ( expression )
    (48) fmt_printf -> . FMT_PRINTF ( expression )
    (36) name -> . NAME
    (35) number -> . NUMBER
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    }               shift and go to state 119
    IF              shift and go to state 16
    FOR             shift and go to state 17
    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    PRINT           shift and go to state 28
    PRINTLN         shift and go to state 29
    PRINTF          shift and go to state 30
    FMT_PRINT       shift and go to state 31
    FMT_PRINTLN     shift and go to state 32
    FMT_PRINTF      shift and go to state 33
    NAME            shift and go to state 34
    NUMBER          shift and go to state 35
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    statement                      shift and go to state 38
    all_prints                     shift and go to state 4
    assign                         shift and go to state 5
    if_statement                   shift and go to state 6
    for                            shift and go to state 7
    expression                     shift and go to state 8
    print                          shift and go to state 9
    println                        shift and go to state 10
    printf                         shift and go to state 11
    fmt_print                      shift and go to state 12
    fmt_println                    shift and go to state 13
    fmt_printf                     shift and go to state 14
    name                           shift and go to state 15
    number                         shift and go to state 18
    string                         shift and go to state 21

state 106

    (49) expression -> ABS ( expression ) .

    PLUS            reduce using rule 49 (expression -> ABS ( expression ) .)
    MINUS           reduce using rule 49 (expression -> ABS ( expression ) .)
    TIMES           reduce using rule 49 (expression -> ABS ( expression ) .)
    DIVIDE          reduce using rule 49 (expression -> ABS ( expression ) .)
    MOD             reduce using rule 49 (expression -> ABS ( expression ) .)
    LT              reduce using rule 49 (expression -> ABS ( expression ) .)
    LE              reduce using rule 49 (expression -> ABS ( expression ) .)
    EQ              reduce using rule 49 (expression -> ABS ( expression ) .)
    NEQ             reduce using rule 49 (expression -> ABS ( expression ) .)
    GE              reduce using rule 49 (expression -> ABS ( expression ) .)
    GT              reduce using rule 49 (expression -> ABS ( expression ) .)
    ,               reduce using rule 49 (expression -> ABS ( expression ) .)
    IF              reduce using rule 49 (expression -> ABS ( expression ) .)
    FOR             reduce using rule 49 (expression -> ABS ( expression ) .)
    (               reduce using rule 49 (expression -> ABS ( expression ) .)
    -               reduce using rule 49 (expression -> ABS ( expression ) .)
    ABS             reduce using rule 49 (expression -> ABS ( expression ) .)
    SIN             reduce using rule 49 (expression -> ABS ( expression ) .)
    COS             reduce using rule 49 (expression -> ABS ( expression ) .)
    TAN             reduce using rule 49 (expression -> ABS ( expression ) .)
    MIN             reduce using rule 49 (expression -> ABS ( expression ) .)
    MAX             reduce using rule 49 (expression -> ABS ( expression ) .)
    PRINT           reduce using rule 49 (expression -> ABS ( expression ) .)
    PRINTLN         reduce using rule 49 (expression -> ABS ( expression ) .)
    PRINTF          reduce using rule 49 (expression -> ABS ( expression ) .)
    FMT_PRINT       reduce using rule 49 (expression -> ABS ( expression ) .)
    FMT_PRINTLN     reduce using rule 49 (expression -> ABS ( expression ) .)
    FMT_PRINTF      reduce using rule 49 (expression -> ABS ( expression ) .)
    NAME            reduce using rule 49 (expression -> ABS ( expression ) .)
    NUMBER          reduce using rule 49 (expression -> ABS ( expression ) .)
    SQ_STRING       reduce using rule 49 (expression -> ABS ( expression ) .)
    DQ_STRING       reduce using rule 49 (expression -> ABS ( expression ) .)
    $end            reduce using rule 49 (expression -> ABS ( expression ) .)
    )               reduce using rule 49 (expression -> ABS ( expression ) .)
    {               reduce using rule 49 (expression -> ABS ( expression ) .)
    }               reduce using rule 49 (expression -> ABS ( expression ) .)


state 107

    (50) expression -> SIN ( expression ) .

    PLUS            reduce using rule 50 (expression -> SIN ( expression ) .)
    MINUS           reduce using rule 50 (expression -> SIN ( expression ) .)
    TIMES           reduce using rule 50 (expression -> SIN ( expression ) .)
    DIVIDE          reduce using rule 50 (expression -> SIN ( expression ) .)
    MOD             reduce using rule 50 (expression -> SIN ( expression ) .)
    LT              reduce using rule 50 (expression -> SIN ( expression ) .)
    LE              reduce using rule 50 (expression -> SIN ( expression ) .)
    EQ              reduce using rule 50 (expression -> SIN ( expression ) .)
    NEQ             reduce using rule 50 (expression -> SIN ( expression ) .)
    GE              reduce using rule 50 (expression -> SIN ( expression ) .)
    GT              reduce using rule 50 (expression -> SIN ( expression ) .)
    ,               reduce using rule 50 (expression -> SIN ( expression ) .)
    IF              reduce using rule 50 (expression -> SIN ( expression ) .)
    FOR             reduce using rule 50 (expression -> SIN ( expression ) .)
    (               reduce using rule 50 (expression -> SIN ( expression ) .)
    -               reduce using rule 50 (expression -> SIN ( expression ) .)
    ABS             reduce using rule 50 (expression -> SIN ( expression ) .)
    SIN             reduce using rule 50 (expression -> SIN ( expression ) .)
    COS             reduce using rule 50 (expression -> SIN ( expression ) .)
    TAN             reduce using rule 50 (expression -> SIN ( expression ) .)
    MIN             reduce using rule 50 (expression -> SIN ( expression ) .)
    MAX             reduce using rule 50 (expression -> SIN ( expression ) .)
    PRINT           reduce using rule 50 (expression -> SIN ( expression ) .)
    PRINTLN         reduce using rule 50 (expression -> SIN ( expression ) .)
    PRINTF          reduce using rule 50 (expression -> SIN ( expression ) .)
    FMT_PRINT       reduce using rule 50 (expression -> SIN ( expression ) .)
    FMT_PRINTLN     reduce using rule 50 (expression -> SIN ( expression ) .)
    FMT_PRINTF      reduce using rule 50 (expression -> SIN ( expression ) .)
    NAME            reduce using rule 50 (expression -> SIN ( expression ) .)
    NUMBER          reduce using rule 50 (expression -> SIN ( expression ) .)
    SQ_STRING       reduce using rule 50 (expression -> SIN ( expression ) .)
    DQ_STRING       reduce using rule 50 (expression -> SIN ( expression ) .)
    $end            reduce using rule 50 (expression -> SIN ( expression ) .)
    )               reduce using rule 50 (expression -> SIN ( expression ) .)
    {               reduce using rule 50 (expression -> SIN ( expression ) .)
    }               reduce using rule 50 (expression -> SIN ( expression ) .)


state 108

    (51) expression -> COS ( expression ) .

    PLUS            reduce using rule 51 (expression -> COS ( expression ) .)
    MINUS           reduce using rule 51 (expression -> COS ( expression ) .)
    TIMES           reduce using rule 51 (expression -> COS ( expression ) .)
    DIVIDE          reduce using rule 51 (expression -> COS ( expression ) .)
    MOD             reduce using rule 51 (expression -> COS ( expression ) .)
    LT              reduce using rule 51 (expression -> COS ( expression ) .)
    LE              reduce using rule 51 (expression -> COS ( expression ) .)
    EQ              reduce using rule 51 (expression -> COS ( expression ) .)
    NEQ             reduce using rule 51 (expression -> COS ( expression ) .)
    GE              reduce using rule 51 (expression -> COS ( expression ) .)
    GT              reduce using rule 51 (expression -> COS ( expression ) .)
    ,               reduce using rule 51 (expression -> COS ( expression ) .)
    IF              reduce using rule 51 (expression -> COS ( expression ) .)
    FOR             reduce using rule 51 (expression -> COS ( expression ) .)
    (               reduce using rule 51 (expression -> COS ( expression ) .)
    -               reduce using rule 51 (expression -> COS ( expression ) .)
    ABS             reduce using rule 51 (expression -> COS ( expression ) .)
    SIN             reduce using rule 51 (expression -> COS ( expression ) .)
    COS             reduce using rule 51 (expression -> COS ( expression ) .)
    TAN             reduce using rule 51 (expression -> COS ( expression ) .)
    MIN             reduce using rule 51 (expression -> COS ( expression ) .)
    MAX             reduce using rule 51 (expression -> COS ( expression ) .)
    PRINT           reduce using rule 51 (expression -> COS ( expression ) .)
    PRINTLN         reduce using rule 51 (expression -> COS ( expression ) .)
    PRINTF          reduce using rule 51 (expression -> COS ( expression ) .)
    FMT_PRINT       reduce using rule 51 (expression -> COS ( expression ) .)
    FMT_PRINTLN     reduce using rule 51 (expression -> COS ( expression ) .)
    FMT_PRINTF      reduce using rule 51 (expression -> COS ( expression ) .)
    NAME            reduce using rule 51 (expression -> COS ( expression ) .)
    NUMBER          reduce using rule 51 (expression -> COS ( expression ) .)
    SQ_STRING       reduce using rule 51 (expression -> COS ( expression ) .)
    DQ_STRING       reduce using rule 51 (expression -> COS ( expression ) .)
    $end            reduce using rule 51 (expression -> COS ( expression ) .)
    )               reduce using rule 51 (expression -> COS ( expression ) .)
    {               reduce using rule 51 (expression -> COS ( expression ) .)
    }               reduce using rule 51 (expression -> COS ( expression ) .)


state 109

    (52) expression -> TAN ( expression ) .

    PLUS            reduce using rule 52 (expression -> TAN ( expression ) .)
    MINUS           reduce using rule 52 (expression -> TAN ( expression ) .)
    TIMES           reduce using rule 52 (expression -> TAN ( expression ) .)
    DIVIDE          reduce using rule 52 (expression -> TAN ( expression ) .)
    MOD             reduce using rule 52 (expression -> TAN ( expression ) .)
    LT              reduce using rule 52 (expression -> TAN ( expression ) .)
    LE              reduce using rule 52 (expression -> TAN ( expression ) .)
    EQ              reduce using rule 52 (expression -> TAN ( expression ) .)
    NEQ             reduce using rule 52 (expression -> TAN ( expression ) .)
    GE              reduce using rule 52 (expression -> TAN ( expression ) .)
    GT              reduce using rule 52 (expression -> TAN ( expression ) .)
    ,               reduce using rule 52 (expression -> TAN ( expression ) .)
    IF              reduce using rule 52 (expression -> TAN ( expression ) .)
    FOR             reduce using rule 52 (expression -> TAN ( expression ) .)
    (               reduce using rule 52 (expression -> TAN ( expression ) .)
    -               reduce using rule 52 (expression -> TAN ( expression ) .)
    ABS             reduce using rule 52 (expression -> TAN ( expression ) .)
    SIN             reduce using rule 52 (expression -> TAN ( expression ) .)
    COS             reduce using rule 52 (expression -> TAN ( expression ) .)
    TAN             reduce using rule 52 (expression -> TAN ( expression ) .)
    MIN             reduce using rule 52 (expression -> TAN ( expression ) .)
    MAX             reduce using rule 52 (expression -> TAN ( expression ) .)
    PRINT           reduce using rule 52 (expression -> TAN ( expression ) .)
    PRINTLN         reduce using rule 52 (expression -> TAN ( expression ) .)
    PRINTF          reduce using rule 52 (expression -> TAN ( expression ) .)
    FMT_PRINT       reduce using rule 52 (expression -> TAN ( expression ) .)
    FMT_PRINTLN     reduce using rule 52 (expression -> TAN ( expression ) .)
    FMT_PRINTF      reduce using rule 52 (expression -> TAN ( expression ) .)
    NAME            reduce using rule 52 (expression -> TAN ( expression ) .)
    NUMBER          reduce using rule 52 (expression -> TAN ( expression ) .)
    SQ_STRING       reduce using rule 52 (expression -> TAN ( expression ) .)
    DQ_STRING       reduce using rule 52 (expression -> TAN ( expression ) .)
    $end            reduce using rule 52 (expression -> TAN ( expression ) .)
    )               reduce using rule 52 (expression -> TAN ( expression ) .)
    {               reduce using rule 52 (expression -> TAN ( expression ) .)
    }               reduce using rule 52 (expression -> TAN ( expression ) .)


state 110

    (53) expression -> MIN ( expression , . expression )
    (32) expression -> expression , . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 120
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 111

    (54) expression -> MAX ( expression , . expression )
    (32) expression -> expression , . expression
    (18) expression -> . number
    (19) expression -> . name
    (20) expression -> . assign
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression MINUS expression
    (23) expression -> . expression TIMES expression
    (24) expression -> . expression DIVIDE expression
    (25) expression -> . expression MOD expression
    (26) expression -> . expression LT expression
    (27) expression -> . expression LE expression
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NEQ expression
    (30) expression -> . expression GE expression
    (31) expression -> . expression GT expression
    (32) expression -> . expression , expression
    (33) expression -> . ( expression )
    (34) expression -> . - expression
    (40) expression -> . string
    (49) expression -> . ABS ( expression )
    (50) expression -> . SIN ( expression )
    (51) expression -> . COS ( expression )
    (52) expression -> . TAN ( expression )
    (53) expression -> . MIN ( expression , expression )
    (54) expression -> . MAX ( expression , expression )
    (35) number -> . NUMBER
    (36) name -> . NAME
    (37) assign -> . name = expression
    (38) assign -> . name GT expression
    (39) assign -> . name LT expression
    (41) string -> . SQ_STRING
    (42) string -> . DQ_STRING

    (               shift and go to state 19
    -               shift and go to state 20
    ABS             shift and go to state 22
    SIN             shift and go to state 23
    COS             shift and go to state 24
    TAN             shift and go to state 25
    MIN             shift and go to state 26
    MAX             shift and go to state 27
    NUMBER          shift and go to state 35
    NAME            shift and go to state 34
    SQ_STRING       shift and go to state 36
    DQ_STRING       shift and go to state 37

    expression                     shift and go to state 121
    number                         shift and go to state 18
    name                           shift and go to state 58
    assign                         shift and go to state 59
    string                         shift and go to state 21

state 112

    (43) print -> PRINT ( expression ) .

    IF              reduce using rule 43 (print -> PRINT ( expression ) .)
    FOR             reduce using rule 43 (print -> PRINT ( expression ) .)
    (               reduce using rule 43 (print -> PRINT ( expression ) .)
    -               reduce using rule 43 (print -> PRINT ( expression ) .)
    ABS             reduce using rule 43 (print -> PRINT ( expression ) .)
    SIN             reduce using rule 43 (print -> PRINT ( expression ) .)
    COS             reduce using rule 43 (print -> PRINT ( expression ) .)
    TAN             reduce using rule 43 (print -> PRINT ( expression ) .)
    MIN             reduce using rule 43 (print -> PRINT ( expression ) .)
    MAX             reduce using rule 43 (print -> PRINT ( expression ) .)
    PRINT           reduce using rule 43 (print -> PRINT ( expression ) .)
    PRINTLN         reduce using rule 43 (print -> PRINT ( expression ) .)
    PRINTF          reduce using rule 43 (print -> PRINT ( expression ) .)
    FMT_PRINT       reduce using rule 43 (print -> PRINT ( expression ) .)
    FMT_PRINTLN     reduce using rule 43 (print -> PRINT ( expression ) .)
    FMT_PRINTF      reduce using rule 43 (print -> PRINT ( expression ) .)
    NAME            reduce using rule 43 (print -> PRINT ( expression ) .)
    NUMBER          reduce using rule 43 (print -> PRINT ( expression ) .)
    SQ_STRING       reduce using rule 43 (print -> PRINT ( expression ) .)
    DQ_STRING       reduce using rule 43 (print -> PRINT ( expression ) .)
    $end            reduce using rule 43 (print -> PRINT ( expression ) .)
    }               reduce using rule 43 (print -> PRINT ( expression ) .)


state 113

    (44) println -> PRINTLN ( expression ) .

    IF              reduce using rule 44 (println -> PRINTLN ( expression ) .)
    FOR             reduce using rule 44 (println -> PRINTLN ( expression ) .)
    (               reduce using rule 44 (println -> PRINTLN ( expression ) .)
    -               reduce using rule 44 (println -> PRINTLN ( expression ) .)
    ABS             reduce using rule 44 (println -> PRINTLN ( expression ) .)
    SIN             reduce using rule 44 (println -> PRINTLN ( expression ) .)
    COS             reduce using rule 44 (println -> PRINTLN ( expression ) .)
    TAN             reduce using rule 44 (println -> PRINTLN ( expression ) .)
    MIN             reduce using rule 44 (println -> PRINTLN ( expression ) .)
    MAX             reduce using rule 44 (println -> PRINTLN ( expression ) .)
    PRINT           reduce using rule 44 (println -> PRINTLN ( expression ) .)
    PRINTLN         reduce using rule 44 (println -> PRINTLN ( expression ) .)
    PRINTF          reduce using rule 44 (println -> PRINTLN ( expression ) .)
    FMT_PRINT       reduce using rule 44 (println -> PRINTLN ( expression ) .)
    FMT_PRINTLN     reduce using rule 44 (println -> PRINTLN ( expression ) .)
    FMT_PRINTF      reduce using rule 44 (println -> PRINTLN ( expression ) .)
    NAME            reduce using rule 44 (println -> PRINTLN ( expression ) .)
    NUMBER          reduce using rule 44 (println -> PRINTLN ( expression ) .)
    SQ_STRING       reduce using rule 44 (println -> PRINTLN ( expression ) .)
    DQ_STRING       reduce using rule 44 (println -> PRINTLN ( expression ) .)
    $end            reduce using rule 44 (println -> PRINTLN ( expression ) .)
    }               reduce using rule 44 (println -> PRINTLN ( expression ) .)


state 114

    (45) printf -> PRINTF ( expression ) .

    IF              reduce using rule 45 (printf -> PRINTF ( expression ) .)
    FOR             reduce using rule 45 (printf -> PRINTF ( expression ) .)
    (               reduce using rule 45 (printf -> PRINTF ( expression ) .)
    -               reduce using rule 45 (printf -> PRINTF ( expression ) .)
    ABS             reduce using rule 45 (printf -> PRINTF ( expression ) .)
    SIN             reduce using rule 45 (printf -> PRINTF ( expression ) .)
    COS             reduce using rule 45 (printf -> PRINTF ( expression ) .)
    TAN             reduce using rule 45 (printf -> PRINTF ( expression ) .)
    MIN             reduce using rule 45 (printf -> PRINTF ( expression ) .)
    MAX             reduce using rule 45 (printf -> PRINTF ( expression ) .)
    PRINT           reduce using rule 45 (printf -> PRINTF ( expression ) .)
    PRINTLN         reduce using rule 45 (printf -> PRINTF ( expression ) .)
    PRINTF          reduce using rule 45 (printf -> PRINTF ( expression ) .)
    FMT_PRINT       reduce using rule 45 (printf -> PRINTF ( expression ) .)
    FMT_PRINTLN     reduce using rule 45 (printf -> PRINTF ( expression ) .)
    FMT_PRINTF      reduce using rule 45 (printf -> PRINTF ( expression ) .)
    NAME            reduce using rule 45 (printf -> PRINTF ( expression ) .)
    NUMBER          reduce using rule 45 (printf -> PRINTF ( expression ) .)
    SQ_STRING       reduce using rule 45 (printf -> PRINTF ( expression ) .)
    DQ_STRING       reduce using rule 45 (printf -> PRINTF ( expression ) .)
    $end            reduce using rule 45 (printf -> PRINTF ( expression ) .)
    }               reduce using rule 45 (printf -> PRINTF ( expression ) .)


state 115

    (46) fmt_print -> FMT_PRINT ( expression ) .

    IF              reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    FOR             reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    (               reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    -               reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    ABS             reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    SIN             reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    COS             reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    TAN             reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    MIN             reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    MAX             reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    PRINT           reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    PRINTLN         reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    PRINTF          reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    FMT_PRINT       reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    FMT_PRINTLN     reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    FMT_PRINTF      reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    NAME            reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    NUMBER          reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    SQ_STRING       reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    DQ_STRING       reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    $end            reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)
    }               reduce using rule 46 (fmt_print -> FMT_PRINT ( expression ) .)


state 116

    (47) fmt_println -> FMT_PRINTLN ( expression ) .

    IF              reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    FOR             reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    (               reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    -               reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    ABS             reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    SIN             reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    COS             reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    TAN             reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    MIN             reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    MAX             reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    PRINT           reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    PRINTLN         reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    PRINTF          reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    FMT_PRINT       reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    FMT_PRINTLN     reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    FMT_PRINTF      reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    NAME            reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    NUMBER          reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    SQ_STRING       reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    DQ_STRING       reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    $end            reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)
    }               reduce using rule 47 (fmt_println -> FMT_PRINTLN ( expression ) .)


state 117

    (48) fmt_printf -> FMT_PRINTF ( expression ) .

    IF              reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    FOR             reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    (               reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    -               reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    ABS             reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    SIN             reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    COS             reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    TAN             reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    MIN             reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    MAX             reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    PRINT           reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    PRINTLN         reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    PRINTF          reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    FMT_PRINT       reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    FMT_PRINTLN     reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    FMT_PRINTF      reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    NAME            reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    NUMBER          reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    SQ_STRING       reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    DQ_STRING       reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    $end            reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)
    }               reduce using rule 48 (fmt_printf -> FMT_PRINTF ( expression ) .)


state 118

    (16) if_statement -> IF assign block_statement ELSE block_statement .

    IF              reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    FOR             reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    (               reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    -               reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    ABS             reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    SIN             reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    COS             reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    TAN             reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    MIN             reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    MAX             reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    PRINT           reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    PRINTLN         reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    PRINTF          reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    FMT_PRINT       reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    FMT_PRINTLN     reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    FMT_PRINTF      reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    NAME            reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    NUMBER          reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    SQ_STRING       reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    DQ_STRING       reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    $end            reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)
    }               reduce using rule 16 (if_statement -> IF assign block_statement ELSE block_statement .)


state 119

    (4) block_statement -> { statement_list } .

    ELSE            reduce using rule 4 (block_statement -> { statement_list } .)
    IF              reduce using rule 4 (block_statement -> { statement_list } .)
    FOR             reduce using rule 4 (block_statement -> { statement_list } .)
    (               reduce using rule 4 (block_statement -> { statement_list } .)
    -               reduce using rule 4 (block_statement -> { statement_list } .)
    ABS             reduce using rule 4 (block_statement -> { statement_list } .)
    SIN             reduce using rule 4 (block_statement -> { statement_list } .)
    COS             reduce using rule 4 (block_statement -> { statement_list } .)
    TAN             reduce using rule 4 (block_statement -> { statement_list } .)
    MIN             reduce using rule 4 (block_statement -> { statement_list } .)
    MAX             reduce using rule 4 (block_statement -> { statement_list } .)
    PRINT           reduce using rule 4 (block_statement -> { statement_list } .)
    PRINTLN         reduce using rule 4 (block_statement -> { statement_list } .)
    PRINTF          reduce using rule 4 (block_statement -> { statement_list } .)
    FMT_PRINT       reduce using rule 4 (block_statement -> { statement_list } .)
    FMT_PRINTLN     reduce using rule 4 (block_statement -> { statement_list } .)
    FMT_PRINTF      reduce using rule 4 (block_statement -> { statement_list } .)
    NAME            reduce using rule 4 (block_statement -> { statement_list } .)
    NUMBER          reduce using rule 4 (block_statement -> { statement_list } .)
    SQ_STRING       reduce using rule 4 (block_statement -> { statement_list } .)
    DQ_STRING       reduce using rule 4 (block_statement -> { statement_list } .)
    $end            reduce using rule 4 (block_statement -> { statement_list } .)
    }               reduce using rule 4 (block_statement -> { statement_list } .)


state 120

    (53) expression -> MIN ( expression , expression . )
    (32) expression -> expression , expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for , resolved as shift
    )               shift and go to state 122
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50

  ! ,               [ reduce using rule 32 (expression -> expression , expression .) ]
  ! PLUS            [ reduce using rule 32 (expression -> expression , expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression , expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression , expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression , expression .) ]
  ! MOD             [ reduce using rule 32 (expression -> expression , expression .) ]
  ! LT              [ reduce using rule 32 (expression -> expression , expression .) ]
  ! LE              [ reduce using rule 32 (expression -> expression , expression .) ]
  ! EQ              [ reduce using rule 32 (expression -> expression , expression .) ]
  ! NEQ             [ reduce using rule 32 (expression -> expression , expression .) ]
  ! GE              [ reduce using rule 32 (expression -> expression , expression .) ]
  ! GT              [ reduce using rule 32 (expression -> expression , expression .) ]


state 121

    (54) expression -> MAX ( expression , expression . )
    (32) expression -> expression , expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . MINUS expression
    (23) expression -> expression . TIMES expression
    (24) expression -> expression . DIVIDE expression
    (25) expression -> expression . MOD expression
    (26) expression -> expression . LT expression
    (27) expression -> expression . LE expression
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NEQ expression
    (30) expression -> expression . GE expression
    (31) expression -> expression . GT expression
    (32) expression -> expression . , expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for , resolved as shift
    )               shift and go to state 123
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    MOD             shift and go to state 43
    LT              shift and go to state 44
    LE              shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    GE              shift and go to state 48
    GT              shift and go to state 49
    ,               shift and go to state 50

  ! ,               [ reduce using rule 32 (expression -> expression , expression .) ]
  ! PLUS            [ reduce using rule 32 (expression -> expression , expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression , expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression , expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression , expression .) ]
  ! MOD             [ reduce using rule 32 (expression -> expression , expression .) ]
  ! LT              [ reduce using rule 32 (expression -> expression , expression .) ]
  ! LE              [ reduce using rule 32 (expression -> expression , expression .) ]
  ! EQ              [ reduce using rule 32 (expression -> expression , expression .) ]
  ! NEQ             [ reduce using rule 32 (expression -> expression , expression .) ]
  ! GE              [ reduce using rule 32 (expression -> expression , expression .) ]
  ! GT              [ reduce using rule 32 (expression -> expression , expression .) ]


state 122

    (53) expression -> MIN ( expression , expression ) .

    PLUS            reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    MINUS           reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    TIMES           reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    DIVIDE          reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    MOD             reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    LT              reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    LE              reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    EQ              reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    NEQ             reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    GE              reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    GT              reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    ,               reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    IF              reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    FOR             reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    (               reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    -               reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    ABS             reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    SIN             reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    COS             reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    TAN             reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    MIN             reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    MAX             reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    PRINT           reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    PRINTLN         reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    PRINTF          reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    FMT_PRINT       reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    FMT_PRINTLN     reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    FMT_PRINTF      reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    NAME            reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    NUMBER          reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    SQ_STRING       reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    DQ_STRING       reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    $end            reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    )               reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    {               reduce using rule 53 (expression -> MIN ( expression , expression ) .)
    }               reduce using rule 53 (expression -> MIN ( expression , expression ) .)


state 123

    (54) expression -> MAX ( expression , expression ) .

    PLUS            reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    MINUS           reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    TIMES           reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    DIVIDE          reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    MOD             reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    LT              reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    LE              reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    EQ              reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    NEQ             reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    GE              reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    GT              reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    ,               reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    IF              reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    FOR             reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    (               reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    -               reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    ABS             reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    SIN             reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    COS             reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    TAN             reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    MIN             reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    MAX             reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    PRINT           reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    PRINTLN         reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    PRINTF          reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    FMT_PRINT       reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    FMT_PRINTLN     reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    FMT_PRINTF      reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    NAME            reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    NUMBER          reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    SQ_STRING       reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    DQ_STRING       reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    $end            reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    )               reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    {               reduce using rule 54 (expression -> MAX ( expression , expression ) .)
    }               reduce using rule 54 (expression -> MAX ( expression , expression ) .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LT in state 15 resolved as shift
WARNING: shift/reduce conflict for GT in state 15 resolved as shift
WARNING: shift/reduce conflict for GT in state 58 resolved as shift
WARNING: shift/reduce conflict for LT in state 58 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 84 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 84 resolved as shift
WARNING: shift/reduce conflict for MOD in state 84 resolved as shift
WARNING: shift/reduce conflict for LT in state 84 resolved as shift
WARNING: shift/reduce conflict for LE in state 84 resolved as shift
WARNING: shift/reduce conflict for EQ in state 84 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 84 resolved as shift
WARNING: shift/reduce conflict for GE in state 84 resolved as shift
WARNING: shift/reduce conflict for GT in state 84 resolved as shift
WARNING: shift/reduce conflict for , in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 85 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 85 resolved as shift
WARNING: shift/reduce conflict for MOD in state 85 resolved as shift
WARNING: shift/reduce conflict for LT in state 85 resolved as shift
WARNING: shift/reduce conflict for LE in state 85 resolved as shift
WARNING: shift/reduce conflict for EQ in state 85 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 85 resolved as shift
WARNING: shift/reduce conflict for GE in state 85 resolved as shift
WARNING: shift/reduce conflict for GT in state 85 resolved as shift
WARNING: shift/reduce conflict for , in state 85 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 120 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 120 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 120 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 120 resolved as shift
WARNING: shift/reduce conflict for MOD in state 120 resolved as shift
WARNING: shift/reduce conflict for LT in state 120 resolved as shift
WARNING: shift/reduce conflict for LE in state 120 resolved as shift
WARNING: shift/reduce conflict for EQ in state 120 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 120 resolved as shift
WARNING: shift/reduce conflict for GE in state 120 resolved as shift
WARNING: shift/reduce conflict for GT in state 120 resolved as shift
WARNING: shift/reduce conflict for , in state 120 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 121 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 121 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 121 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 121 resolved as shift
WARNING: shift/reduce conflict for MOD in state 121 resolved as shift
WARNING: shift/reduce conflict for LT in state 121 resolved as shift
WARNING: shift/reduce conflict for LE in state 121 resolved as shift
WARNING: shift/reduce conflict for EQ in state 121 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 121 resolved as shift
WARNING: shift/reduce conflict for GE in state 121 resolved as shift
WARNING: shift/reduce conflict for GT in state 121 resolved as shift
WARNING: shift/reduce conflict for , in state 121 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (statement -> assign)
WARNING: rejected rule (expression -> assign) in state 5
